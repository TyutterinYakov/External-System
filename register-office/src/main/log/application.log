2021-12-19 01:51:43 DEBUG [main]: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc222ae
2021-12-19 01:51:44 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/business/MarriageManager.class]
2021-12-19 01:51:44 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/config/MarriageConfig.class]
2021-12-19 01:51:44 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/dao/MarriageDao.class]
2021-12-19 01:51:44 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/rest/MarriageController.class]
2021-12-19 01:51:44 DEBUG [main]: Loaded 8 bean definitions from class path resource [springContext.xml]
2021-12-19 01:51:44 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2021-12-19 01:51:44 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2021-12-19 01:51:44 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2021-12-19 01:51:44 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2021-12-19 01:51:44 DEBUG [main]: Creating shared instance of singleton bean 'marriageManager'
2021-12-19 01:51:44 DEBUG [main]: Creating shared instance of singleton bean 'buildPersonDao'
2021-12-19 01:51:44 DEBUG [main]: Creating shared instance of singleton bean 'marriageConfig'
2021-12-19 01:51:44 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-19 01:51:44 DEBUG [main]: Located and parsed 1 persistence units; checking each
2021-12-19 01:51:44 DEBUG [main]: Checking persistence-unit [name=persistence, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [persistence]
2021-12-19 01:51:44 DEBUG [main]: Persistence-unit [persistence] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-12-19 01:51:44 DEBUG [main]: PersistenceUnitInfo [
	name: persistence
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: login456456
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/register_office
		hibernate.show_sql: true
		hibernate.format_sql: false
		javax.persistence.jdbc.user: postgres]
2021-12-19 01:51:44 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-19 01:51:44 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-19 01:51:44 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-19 01:51:44 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-19 01:51:44 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-19 01:51:45 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-19 01:51:45 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-19 01:51:45 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-19 01:51:45 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-19 01:51:45 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@323e8306
2021-12-19 01:51:45 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@323e8306
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@323e8306
2021-12-19 01:51:45 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3301500b
2021-12-19 01:51:45 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@57a4d5ee
2021-12-19 01:51:45 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@47a64f7d
2021-12-19 01:51:45 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@26d10f2e
2021-12-19 01:51:45 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@26d10f2e
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@26d10f2e
2021-12-19 01:51:45 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@53bc1328
2021-12-19 01:51:45 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@53bc1328
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@53bc1328
2021-12-19 01:51:45 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@6a1ebcff
2021-12-19 01:51:45 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@6a1ebcff
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6a1ebcff
2021-12-19 01:51:45 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@622ef26a
2021-12-19 01:51:45 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@622ef26a
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@622ef26a
2021-12-19 01:51:45 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@11963225
2021-12-19 01:51:45 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@11963225
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@11963225
2021-12-19 01:51:45 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@f325091
2021-12-19 01:51:45 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@f325091
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f325091
2021-12-19 01:51:45 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@6bd51ed8
2021-12-19 01:51:45 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@6bd51ed8
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6bd51ed8
2021-12-19 01:51:45 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5cad8b7d
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5cad8b7d
2021-12-19 01:51:45 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1bb9aa43
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1bb9aa43
2021-12-19 01:51:45 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@3be8821f
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@3be8821f
2021-12-19 01:51:45 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74a9c4b0
2021-12-19 01:51:45 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5fd9b663
2021-12-19 01:51:45 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@6548bb7d
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6548bb7d
2021-12-19 01:51:45 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@6b5f8707
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6b5f8707
2021-12-19 01:51:45 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@1af05b03
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1af05b03
2021-12-19 01:51:45 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a8b5227
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a8b5227
2021-12-19 01:51:45 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@27f0ad19
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@27f0ad19
2021-12-19 01:51:45 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@273c947f
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@273c947f
2021-12-19 01:51:45 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e8823d2
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e8823d2
2021-12-19 01:51:45 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2237bada
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2237bada
2021-12-19 01:51:45 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51671b08
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51671b08
2021-12-19 01:51:45 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@4c5204af
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c5204af
2021-12-19 01:51:45 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@73e132e0
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@73e132e0
2021-12-19 01:51:45 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@236ab296
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@236ab296
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@236ab296
2021-12-19 01:51:45 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55a8dc49
2021-12-19 01:51:45 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@2392212b
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2392212b
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2392212b
2021-12-19 01:51:45 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@22fa55b2
2021-12-19 01:51:45 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6c2f1700
2021-12-19 01:51:45 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@5298dead
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5298dead
2021-12-19 01:51:45 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@2b50150
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b50150
2021-12-19 01:51:45 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@17f460bb
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17f460bb
2021-12-19 01:51:45 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@23c650a3
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23c650a3
2021-12-19 01:51:45 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c09d180
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c09d180
2021-12-19 01:51:45 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7a9c84a5
2021-12-19 01:51:45 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@a68df9
2021-12-19 01:51:45 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@a68df9
2021-12-19 01:51:45 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@a68df9
2021-12-19 01:51:45 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@169da7f2
2021-12-19 01:51:45 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@169da7f2
2021-12-19 01:51:45 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@169da7f2
2021-12-19 01:51:45 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@2ba45490
2021-12-19 01:51:45 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@737edcfa
2021-12-19 01:51:45 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@6f330eb9
2021-12-19 01:51:45 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@6f330eb9
2021-12-19 01:51:45 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@6f330eb9
2021-12-19 01:51:45 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4010d494
2021-12-19 01:51:45 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4010d494
2021-12-19 01:51:45 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4010d494
2021-12-19 01:51:45 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@181d7f28
2021-12-19 01:51:45 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@7f4d9395
2021-12-19 01:51:45 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@676f0a60
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@676f0a60
2021-12-19 01:51:45 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@55b62629
2021-12-19 01:51:45 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@55b5e331
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55b5e331
2021-12-19 01:51:45 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@5b989dc7
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5b989dc7
2021-12-19 01:51:45 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46b695ec
2021-12-19 01:51:45 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63a5d002
2021-12-19 01:51:45 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@64d43929
2021-12-19 01:51:45 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@2d140a7
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2d140a7
2021-12-19 01:51:45 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@77e80a5e
2021-12-19 01:51:45 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d8e2eea
2021-12-19 01:51:45 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@240139e1
2021-12-19 01:51:45 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ea4d397
2021-12-19 01:51:45 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49298ce7
2021-12-19 01:51:45 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@253c1256
2021-12-19 01:51:45 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8dfe921
2021-12-19 01:51:45 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@503fbbc6
2021-12-19 01:51:45 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@100f9bbe] into BootstrapContext; was [null]
2021-12-19 01:51:45 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@13e9f2e2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@673bb956]
2021-12-19 01:51:45 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-12-19 01:51:45 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 01:51:45 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-19 01:51:45 WARN  [main]: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-19 01:51:45 INFO  [main]: HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 01:51:45 INFO  [main]: HHH10001001: Connection properties: {password=login456456, user=postgres}
2021-12-19 01:51:45 INFO  [main]: HHH10001003: Autocommit mode: false
2021-12-19 01:51:45 DEBUG [main]: Initializing Connection pool with 1 Connections
2021-12-19 01:51:45 INFO  [main]: HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-19 01:51:45 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-19 01:51:45 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-19 01:51:45 DEBUG [main]: JDBC version : 4.2
2021-12-19 01:51:45 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-19 01:51:45 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-19 01:51:45 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-19 01:51:45 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11e33bac
2021-12-19 01:51:45 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11e33bac
2021-12-19 01:51:45 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c09d180
2021-12-19 01:51:45 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@af9a89f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6482eef]
2021-12-19 01:51:45 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-19 01:51:45 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 01:51:45 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-19 01:51:45 DEBUG [main]: Import with entity name Person
2021-12-19 01:51:45 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for personId
2021-12-19 01:51:46 DEBUG [main]: Building property personId
2021-12-19 01:51:46 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-19 01:51:46 DEBUG [main]: Building property dateOfBirth
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for firstName
2021-12-19 01:51:46 DEBUG [main]: Building property firstName
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for lasName
2021-12-19 01:51:46 DEBUG [main]: Building property lasName
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 01:51:46 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-19 01:51:46 DEBUG [main]: Building property passports
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for patronymic
2021-12-19 01:51:46 DEBUG [main]: Building property patronymic
2021-12-19 01:51:46 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 01:51:46 DEBUG [main]: Import with entity name Passport
2021-12-19 01:51:46 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for passportId
2021-12-19 01:51:46 DEBUG [main]: Building property passportId
2021-12-19 01:51:46 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 01:51:46 DEBUG [main]: Building property issueDate
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-19 01:51:46 DEBUG [main]: Building property issueDepartment
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for number
2021-12-19 01:51:46 DEBUG [main]: Building property number
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Building property person
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for seria
2021-12-19 01:51:46 DEBUG [main]: Building property seria
2021-12-19 01:51:46 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-19 01:51:46 DEBUG [main]: Import with entity name PersonFemale
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 01:51:46 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-19 01:51:46 DEBUG [main]: Building property birthCertificates
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 01:51:46 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-19 01:51:46 DEBUG [main]: Building property marriageCertificates
2021-12-19 01:51:46 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 01:51:46 DEBUG [main]: Import with entity name BirthCertificate
2021-12-19 01:51:46 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-19 01:51:46 DEBUG [main]: Building property birthCertificateId
2021-12-19 01:51:46 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Building property father
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 01:51:46 DEBUG [main]: Building property issueDate
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Building property mother
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for number
2021-12-19 01:51:46 DEBUG [main]: Building property number
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Building property person
2021-12-19 01:51:46 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-19 01:51:46 DEBUG [main]: Import with entity name PersonMale
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 01:51:46 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-19 01:51:46 DEBUG [main]: Building property birthCertificates
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 01:51:46 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-19 01:51:46 DEBUG [main]: Building property marriageCertificates
2021-12-19 01:51:46 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 01:51:46 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-19 01:51:46 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-19 01:51:46 DEBUG [main]: Building property marriageCertificateId
2021-12-19 01:51:46 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for active
2021-12-19 01:51:46 DEBUG [main]: Building property active
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for endDate
2021-12-19 01:51:46 DEBUG [main]: Building property endDate
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Building property husband
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 01:51:46 DEBUG [main]: Building property issueDate
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 01:51:46 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-19 01:51:46 DEBUG [main]: building SimpleValue for number
2021-12-19 01:51:46 DEBUG [main]: Building property number
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-19 01:51:46 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-19 01:51:46 DEBUG [main]: Building property wife
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for active
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 01:51:46 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 01:51:46 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-19 01:51:46 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-19 01:51:46 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-19 01:51:46 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-19 01:51:46 DEBUG [main]: Building property birthCertificate
2021-12-19 01:51:46 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-19 01:51:46 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-19 01:51:46 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-19 01:51:46 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-19 01:51:46 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-19 01:51:46 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 01:51:46 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-19 01:51:46 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-19 01:51:46 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-19 01:51:46 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-19 01:51:46 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 01:51:46 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-19 01:51:46 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-19 01:51:46 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-19 01:51:46 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 01:51:46 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-19 01:51:46 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-19 01:51:46 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-19 01:51:46 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-19 01:51:46 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-19 01:51:46 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 01:51:46 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-19 01:51:46 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-19 01:51:46 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-19 01:51:46 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 01:51:46 DEBUG [main]: Processing association property references
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 01:51:46 DEBUG [main]: Processing association property references
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 01:51:46 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 01:51:46 DEBUG [main]: Building session factory
2021-12-19 01:51:46 DEBUG [main]: SessionFactory name : null
2021-12-19 01:51:46 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-19 01:51:46 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-19 01:51:46 DEBUG [main]: Statistics: disabled
2021-12-19 01:51:46 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-19 01:51:46 DEBUG [main]: Default entity-mode: pojo
2021-12-19 01:51:46 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-19 01:51:46 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-19 01:51:46 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-19 01:51:46 DEBUG [main]: Default batch fetch size: -1
2021-12-19 01:51:46 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-19 01:51:46 DEBUG [main]: Default null ordering: NONE
2021-12-19 01:51:46 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-19 01:51:46 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-19 01:51:46 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-19 01:51:46 DEBUG [main]: JTA Track by Thread: enabled
2021-12-19 01:51:46 DEBUG [main]: Query language substitutions: {}
2021-12-19 01:51:46 DEBUG [main]: Named query checking : enabled
2021-12-19 01:51:46 DEBUG [main]: Second-level cache: disabled
2021-12-19 01:51:46 DEBUG [main]: Second-level query cache: disabled
2021-12-19 01:51:46 DEBUG [main]: Second-level query cache factory: null
2021-12-19 01:51:46 DEBUG [main]: Second-level cache region prefix: null
2021-12-19 01:51:46 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-19 01:51:46 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-19 01:51:46 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-19 01:51:46 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-19 01:51:46 DEBUG [main]: JDBC batch size: 15
2021-12-19 01:51:46 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-19 01:51:46 DEBUG [main]: Scrollable result sets: enabled
2021-12-19 01:51:46 DEBUG [main]: Wrap result sets: disabled
2021-12-19 01:51:46 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-19 01:51:46 DEBUG [main]: JDBC result set fetch size: null
2021-12-19 01:51:46 DEBUG [main]: Connection release mode: AFTER_TRANSACTION
2021-12-19 01:51:46 DEBUG [main]: Generate SQL with comments: disabled
2021-12-19 01:51:46 DEBUG [main]: JPA compliance - query : disabled
2021-12-19 01:51:46 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-19 01:51:46 DEBUG [main]: JPA compliance - lists : disabled
2021-12-19 01:51:46 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 01:51:46 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 01:51:46 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 01:51:46 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-19 01:51:46 DEBUG [main]: Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=register.start.Starter, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=persistence, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.postgresql.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, hibernate.connection.username=****, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/register_office, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=persistence, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5e7c141d, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-19 01:51:46 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-19 01:51:46 DEBUG [main]: Instantiated session factory
2021-12-19 01:51:46 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@af9a89f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@25aeb5ac]
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 01:51:46 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 01:51:46 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 01:51:46 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-19 01:51:46 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-19 01:51:46 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-19 01:51:46 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-19 01:51:46 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-19 01:51:46 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 01:51:46 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-19 01:51:46 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 01:51:46 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-19 01:51:46 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 01:51:46 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-19 01:51:46 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-19 01:51:46 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-19 01:51:46 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 01:51:46 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-19 01:51:46 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-19 01:51:46 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 01:51:46 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 01:51:46 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-19 01:51:46 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17e0933c]
2021-12-19 01:51:46 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 01:51:46 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 01:51:46 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 01:51:46 DEBUG [main]: Visiting attribute path : passports
2021-12-19 01:51:46 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47acd13b]
2021-12-19 01:51:46 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c51077d]
2021-12-19 01:51:46 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 01:51:46 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 01:51:46 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e26f1ed]
2021-12-19 01:51:46 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 01:51:46 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 01:51:46 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 01:51:47 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-19 01:51:47 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-19 01:51:47 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-19 01:51:47 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-19 01:51:47 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 01:51:47 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-19 01:51:47 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-19 01:51:47 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c952a33]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : number
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : person
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1150d471]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : seria
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-19 01:51:47 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-19 01:51:47 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-19 01:51:47 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 01:51:47 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-19 01:51:47 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-19 01:51:47 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 01:51:47 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 01:51:47 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@709f0202]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : passports
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14168e1]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a5c7e4]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e225820]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8aeab9e]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a2dc0a]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a00b15d]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36ef1d65]
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 01:51:47 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-19 01:51:47 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-19 01:51:47 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-19 01:51:47 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-19 01:51:47 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 01:51:47 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-19 01:51:47 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-19 01:51:47 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4be0a27d]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : father
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6003ad65]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : mother
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec99035]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : number
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : person
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60743cdb]
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-19 01:51:47 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-19 01:51:47 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-19 01:51:47 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-19 01:51:47 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 01:51:47 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-19 01:51:47 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-19 01:51:47 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 01:51:47 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 01:51:47 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d88e6b9]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : passports
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208205ed]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73afe2b7]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9687f55]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5700c9db]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671d03bb]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6babffb5]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2173a742]
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 01:51:47 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-19 01:51:47 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-19 01:51:47 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-19 01:51:47 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-19 01:51:47 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-19 01:51:47 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-19 01:51:47 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-19 01:51:47 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@706ceca6]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : active
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : husband
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b8137c5]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : number
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : wife
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f4c040]
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-19 01:51:47 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b009e7b]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@270a620]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : number
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : person
2021-12-19 01:51:47 DEBUG [main]: Property path deemed to be circular : person
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : seria
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-19 01:51:47 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a47597]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12f279b5]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : father
2021-12-19 01:51:47 DEBUG [main]: Property path deemed to be circular : father
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : mother
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e64c1a9]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : number
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : person
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fda2001]
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 01:51:47 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@162c1dfb]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21ae657b]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : father
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21de60a7]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : mother
2021-12-19 01:51:47 DEBUG [main]: Property path deemed to be circular : mother
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : number
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : person
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73894c5a]
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 01:51:47 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7698b7a4]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a9ceddf]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : active
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : husband
2021-12-19 01:51:47 DEBUG [main]: Property path deemed to be circular : husband
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : number
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : wife
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2251b3bc]
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 01:51:47 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fbe503c]
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c232051]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : active
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : husband
2021-12-19 01:51:47 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7741d346]
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : number
2021-12-19 01:51:47 DEBUG [main]: Visiting attribute path : wife
2021-12-19 01:51:47 DEBUG [main]: Property path deemed to be circular : wife
2021-12-19 01:51:47 DEBUG [main]: Building LoadPlan...
2021-12-19 01:51:47 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 01:51:47 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 01:51:47 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-19 01:51:47 DEBUG [main]: No actions specified; doing nothing
2021-12-19 01:51:47 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-19 01:51:47 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-19 01:51:47 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 01:51:47 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 01:51:47 DEBUG [main]: Checking 1 named HQL queries
2021-12-19 01:51:47 DEBUG [main]: Checking named query: Person.findPersons
2021-12-19 01:51:47 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-19 01:51:47 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@27dc627a
2021-12-19 01:51:47 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 01:51:47 DEBUG [main]: throwQueryException() : no errors
2021-12-19 01:51:47 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-19 01:51:47 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-19 01:51:47 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-19 01:51:47 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 01:51:47 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-19 01:51:47 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-19 01:51:47 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-19 01:51:47 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-19 01:51:47 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-19 01:51:47 DEBUG [main]: Resolved : p.passports -> .
2021-12-19 01:51:47 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-19 01:51:47 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 01:51:47 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-19 01:51:47 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-19 01:51:47 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-19 01:51:47 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-19 01:51:47 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-19 01:51:47 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-19 01:51:47 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 01:51:47 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 01:51:47 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@11963225
2021-12-19 01:51:47 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-19 01:51:47 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-19 01:51:47 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-19 01:51:47 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-19 01:51:47 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-19 01:51:47 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-19 01:51:47 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-19 01:51:47 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-19 01:51:47 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@11963225}

2021-12-19 01:51:47 DEBUG [main]: throwQueryException() : no errors
2021-12-19 01:51:47 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 01:51:47 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-19 01:51:47 DEBUG [main]: throwQueryException() : no errors
2021-12-19 01:51:47 DEBUG [main]: Checking 0 named SQL queries
2021-12-19 01:51:47 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 01:51:47 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5460edd3
2021-12-19 01:51:47 DEBUG [main]: Registering SessionFactory: 5ef9dcc6-2b25-47f4-bf5e-d442218d59cd (<unnamed>)
2021-12-19 01:51:47 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-19 01:51:47 DEBUG [main]: Autowiring by type from bean name 'marriageManager' via constructor to bean named 'buildPersonDao'
2021-12-19 01:51:47 DEBUG [main]: Creating shared instance of singleton bean 'marriageDao'
2021-12-19 01:51:47 DEBUG [main]: Found key 'test.value' in PropertySource 'class path resource [register.properties]' with value of type String
2021-12-19 01:51:47 DEBUG [main]: Creating shared instance of singleton bean 'controller'
2021-12-19 01:51:47 INFO  [main]: findMarriageCertificate called
2021-12-19 01:51:47 INFO  [main]: MarriageManager findMarriageCertificate called
2021-12-19 01:51:47 INFO  [main]: findMarriageCertificate called:SIMPLE_VALUE
2021-12-19 02:08:22 DEBUG [main]: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@26a7b76d
2021-12-19 02:08:24 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/business/MarriageManager.class]
2021-12-19 02:08:24 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/config/MarriageConfig.class]
2021-12-19 02:08:24 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/dao/MarriageDao.class]
2021-12-19 02:08:24 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/rest/MarriageController.class]
2021-12-19 02:08:24 DEBUG [main]: Loaded 8 bean definitions from class path resource [springContext.xml]
2021-12-19 02:08:24 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2021-12-19 02:08:25 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2021-12-19 02:08:25 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2021-12-19 02:08:25 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2021-12-19 02:08:25 DEBUG [main]: Creating shared instance of singleton bean 'marriageService'
2021-12-19 02:08:25 DEBUG [main]: Creating shared instance of singleton bean 'buildPersonDao'
2021-12-19 02:08:25 DEBUG [main]: Creating shared instance of singleton bean 'marriageConfig'
2021-12-19 02:08:25 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-19 02:08:25 DEBUG [main]: Located and parsed 1 persistence units; checking each
2021-12-19 02:08:25 DEBUG [main]: Checking persistence-unit [name=persistence, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [persistence]
2021-12-19 02:08:25 DEBUG [main]: Persistence-unit [persistence] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-12-19 02:08:25 DEBUG [main]: PersistenceUnitInfo [
	name: persistence
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: login456456
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/register_office
		hibernate.show_sql: true
		hibernate.format_sql: false
		javax.persistence.jdbc.user: postgres]
2021-12-19 02:08:25 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-19 02:08:25 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-19 02:08:25 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-19 02:08:25 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-19 02:08:25 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-19 02:08:25 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-19 02:08:25 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-19 02:08:25 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-19 02:08:25 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-19 02:08:25 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@82c57b3
2021-12-19 02:08:25 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@82c57b3
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@82c57b3
2021-12-19 02:08:25 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ea502e0
2021-12-19 02:08:25 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@77b7ffa4
2021-12-19 02:08:25 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@133e019b
2021-12-19 02:08:25 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@51684e4a
2021-12-19 02:08:25 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@51684e4a
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51684e4a
2021-12-19 02:08:25 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@31c269fd
2021-12-19 02:08:25 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@31c269fd
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31c269fd
2021-12-19 02:08:25 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@20312893
2021-12-19 02:08:25 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@20312893
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@20312893
2021-12-19 02:08:25 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@2a551a63
2021-12-19 02:08:25 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@2a551a63
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a551a63
2021-12-19 02:08:25 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@32f61a31
2021-12-19 02:08:25 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@32f61a31
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@32f61a31
2021-12-19 02:08:25 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@344561e0
2021-12-19 02:08:25 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@344561e0
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@344561e0
2021-12-19 02:08:25 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@52d10fb8
2021-12-19 02:08:25 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@52d10fb8
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52d10fb8
2021-12-19 02:08:25 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@324dcd31
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@324dcd31
2021-12-19 02:08:25 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@ecf9fb3
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@ecf9fb3
2021-12-19 02:08:25 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@22db8f4
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@22db8f4
2021-12-19 02:08:25 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@46cf05f7
2021-12-19 02:08:25 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3caa4757
2021-12-19 02:08:25 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@1b39fd82
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b39fd82
2021-12-19 02:08:25 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@2024293c
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2024293c
2021-12-19 02:08:25 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@24855019
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@24855019
2021-12-19 02:08:25 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f3afb5
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f3afb5
2021-12-19 02:08:25 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@27dc79f7
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@27dc79f7
2021-12-19 02:08:25 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3ad394e6
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3ad394e6
2021-12-19 02:08:25 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f6a7463
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f6a7463
2021-12-19 02:08:25 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3a7704c
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3a7704c
2021-12-19 02:08:25 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47a64f7d
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47a64f7d
2021-12-19 02:08:25 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@2c282004
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@2c282004
2021-12-19 02:08:25 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@78e16155
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@78e16155
2021-12-19 02:08:25 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@3ef41c66
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3ef41c66
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3ef41c66
2021-12-19 02:08:25 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f577419
2021-12-19 02:08:25 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@4102b1b1
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4102b1b1
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4102b1b1
2021-12-19 02:08:25 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437e951d
2021-12-19 02:08:25 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@61e3a1fd
2021-12-19 02:08:25 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@7b02e036
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b02e036
2021-12-19 02:08:25 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@420bc288
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@420bc288
2021-12-19 02:08:25 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@64b31700
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64b31700
2021-12-19 02:08:25 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@5fd9b663
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fd9b663
2021-12-19 02:08:25 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6548bb7d
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6548bb7d
2021-12-19 02:08:25 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35e52059
2021-12-19 02:08:25 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@3d829787
2021-12-19 02:08:25 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@3d829787
2021-12-19 02:08:25 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@3d829787
2021-12-19 02:08:25 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@d71adc2
2021-12-19 02:08:25 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@d71adc2
2021-12-19 02:08:25 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@d71adc2
2021-12-19 02:08:25 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@17ae98d7
2021-12-19 02:08:25 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@39fc6b2c
2021-12-19 02:08:25 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@4837595f
2021-12-19 02:08:25 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@4837595f
2021-12-19 02:08:25 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@4837595f
2021-12-19 02:08:25 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3fcdcf
2021-12-19 02:08:25 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3fcdcf
2021-12-19 02:08:25 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3fcdcf
2021-12-19 02:08:25 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@6c44052e
2021-12-19 02:08:25 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@5215cd9a
2021-12-19 02:08:25 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@3d9fc57a
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d9fc57a
2021-12-19 02:08:25 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5987e932
2021-12-19 02:08:25 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@4a67318f
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a67318f
2021-12-19 02:08:25 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@273c947f
2021-12-19 02:08:25 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@273c947f
2021-12-19 02:08:25 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@20765ed5
2021-12-19 02:08:25 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c1a4620
2021-12-19 02:08:25 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@6e0d4a8
2021-12-19 02:08:26 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@515f4131
2021-12-19 02:08:26 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@515f4131
2021-12-19 02:08:26 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@14c053c6
2021-12-19 02:08:26 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6c2d4cc6
2021-12-19 02:08:26 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@30865a90
2021-12-19 02:08:26 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6134ac4a
2021-12-19 02:08:26 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@777c9dc9
2021-12-19 02:08:26 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@71b1a49c
2021-12-19 02:08:26 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73e132e0
2021-12-19 02:08:26 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3773862a
2021-12-19 02:08:26 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3e681bc] into BootstrapContext; was [null]
2021-12-19 02:08:26 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5c09d180] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@23aae55]
2021-12-19 02:08:26 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-12-19 02:08:26 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:08:26 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-19 02:08:26 WARN  [main]: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-19 02:08:26 INFO  [main]: HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 02:08:26 INFO  [main]: HHH10001001: Connection properties: {password=login456456, user=postgres}
2021-12-19 02:08:26 INFO  [main]: HHH10001003: Autocommit mode: false
2021-12-19 02:08:26 DEBUG [main]: Initializing Connection pool with 1 Connections
2021-12-19 02:08:26 INFO  [main]: HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-19 02:08:26 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-19 02:08:26 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-19 02:08:26 DEBUG [main]: JDBC version : 4.2
2021-12-19 02:08:26 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-19 02:08:26 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-19 02:08:26 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-19 02:08:26 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7a231dfd
2021-12-19 02:08:26 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7a231dfd
2021-12-19 02:08:26 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6548bb7d
2021-12-19 02:08:26 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26a4551a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3fdecce]
2021-12-19 02:08:26 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-19 02:08:26 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-19 02:08:26 DEBUG [main]: Import with entity name Person
2021-12-19 02:08:26 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:08:26 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:08:26 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-19 02:08:26 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-19 02:08:26 DEBUG [main]: building SimpleValue for personId
2021-12-19 02:08:26 DEBUG [main]: Building property personId
2021-12-19 02:08:26 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-19 02:08:26 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-19 02:08:26 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-19 02:08:26 DEBUG [main]: Building property dateOfBirth
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-19 02:08:26 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-19 02:08:26 DEBUG [main]: building SimpleValue for firstName
2021-12-19 02:08:26 DEBUG [main]: Building property firstName
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-19 02:08:26 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-19 02:08:26 DEBUG [main]: building SimpleValue for lasName
2021-12-19 02:08:26 DEBUG [main]: Building property lasName
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:08:26 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-19 02:08:26 DEBUG [main]: Building property passports
2021-12-19 02:08:26 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:26 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-19 02:08:26 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-19 02:08:26 DEBUG [main]: building SimpleValue for patronymic
2021-12-19 02:08:26 DEBUG [main]: Building property patronymic
2021-12-19 02:08:27 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:08:27 DEBUG [main]: Import with entity name Passport
2021-12-19 02:08:27 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for passportId
2021-12-19 02:08:27 DEBUG [main]: Building property passportId
2021-12-19 02:08:27 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:08:27 DEBUG [main]: Building property issueDate
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-19 02:08:27 DEBUG [main]: Building property issueDepartment
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for number
2021-12-19 02:08:27 DEBUG [main]: Building property number
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Building property person
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for seria
2021-12-19 02:08:27 DEBUG [main]: Building property seria
2021-12-19 02:08:27 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-19 02:08:27 DEBUG [main]: Import with entity name PersonFemale
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:08:27 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-19 02:08:27 DEBUG [main]: Building property birthCertificates
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:08:27 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:08:27 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:08:27 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:08:27 DEBUG [main]: Import with entity name BirthCertificate
2021-12-19 02:08:27 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-19 02:08:27 DEBUG [main]: Building property birthCertificateId
2021-12-19 02:08:27 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Building property father
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:08:27 DEBUG [main]: Building property issueDate
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Building property mother
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for number
2021-12-19 02:08:27 DEBUG [main]: Building property number
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Building property person
2021-12-19 02:08:27 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-19 02:08:27 DEBUG [main]: Import with entity name PersonMale
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:08:27 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-19 02:08:27 DEBUG [main]: Building property birthCertificates
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:08:27 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-19 02:08:27 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:08:27 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:08:27 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-19 02:08:27 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-19 02:08:27 DEBUG [main]: Building property marriageCertificateId
2021-12-19 02:08:27 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for active
2021-12-19 02:08:27 DEBUG [main]: Building property active
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for endDate
2021-12-19 02:08:27 DEBUG [main]: Building property endDate
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Building property husband
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:08:27 DEBUG [main]: Building property issueDate
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:08:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-19 02:08:27 DEBUG [main]: building SimpleValue for number
2021-12-19 02:08:27 DEBUG [main]: Building property number
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-19 02:08:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-19 02:08:27 DEBUG [main]: Building property wife
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for active
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:08:27 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:08:27 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-19 02:08:27 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-19 02:08:27 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-19 02:08:27 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-19 02:08:27 DEBUG [main]: Building property birthCertificate
2021-12-19 02:08:27 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-19 02:08:27 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-19 02:08:27 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-19 02:08:27 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-19 02:08:27 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-19 02:08:27 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:08:27 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-19 02:08:27 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-19 02:08:27 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-19 02:08:27 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:08:27 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:08:27 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-19 02:08:27 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:08:27 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-19 02:08:27 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:08:27 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:08:27 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-19 02:08:27 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-19 02:08:27 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-19 02:08:27 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:08:27 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:08:27 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-19 02:08:27 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:08:27 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-19 02:08:27 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:08:27 DEBUG [main]: Processing association property references
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:08:27 DEBUG [main]: Processing association property references
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:08:27 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:08:27 DEBUG [main]: Building session factory
2021-12-19 02:08:27 DEBUG [main]: SessionFactory name : null
2021-12-19 02:08:27 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-19 02:08:27 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-19 02:08:27 DEBUG [main]: Statistics: disabled
2021-12-19 02:08:27 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-19 02:08:27 DEBUG [main]: Default entity-mode: pojo
2021-12-19 02:08:27 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-19 02:08:27 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-19 02:08:27 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-19 02:08:27 DEBUG [main]: Default batch fetch size: -1
2021-12-19 02:08:27 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-19 02:08:27 DEBUG [main]: Default null ordering: NONE
2021-12-19 02:08:27 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-19 02:08:27 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-19 02:08:27 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-19 02:08:27 DEBUG [main]: JTA Track by Thread: enabled
2021-12-19 02:08:27 DEBUG [main]: Query language substitutions: {}
2021-12-19 02:08:27 DEBUG [main]: Named query checking : enabled
2021-12-19 02:08:27 DEBUG [main]: Second-level cache: disabled
2021-12-19 02:08:27 DEBUG [main]: Second-level query cache: disabled
2021-12-19 02:08:27 DEBUG [main]: Second-level query cache factory: null
2021-12-19 02:08:27 DEBUG [main]: Second-level cache region prefix: null
2021-12-19 02:08:27 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-19 02:08:27 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-19 02:08:27 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-19 02:08:27 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-19 02:08:27 DEBUG [main]: JDBC batch size: 15
2021-12-19 02:08:27 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-19 02:08:27 DEBUG [main]: Scrollable result sets: enabled
2021-12-19 02:08:27 DEBUG [main]: Wrap result sets: disabled
2021-12-19 02:08:27 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-19 02:08:27 DEBUG [main]: JDBC result set fetch size: null
2021-12-19 02:08:27 DEBUG [main]: Connection release mode: AFTER_TRANSACTION
2021-12-19 02:08:27 DEBUG [main]: Generate SQL with comments: disabled
2021-12-19 02:08:27 DEBUG [main]: JPA compliance - query : disabled
2021-12-19 02:08:27 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-19 02:08:27 DEBUG [main]: JPA compliance - lists : disabled
2021-12-19 02:08:27 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:08:27 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:08:27 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:08:27 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-19 02:08:27 DEBUG [main]: Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=register.start.Starter, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=persistence, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.postgresql.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, hibernate.connection.username=****, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/register_office, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=persistence, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3968bc60, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-19 02:08:27 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-19 02:08:27 DEBUG [main]: Instantiated session factory
2021-12-19 02:08:27 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26a4551a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4d41ba0f]
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:08:27 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:08:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:08:27 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-19 02:08:27 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-19 02:08:27 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-19 02:08:27 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:08:27 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-19 02:08:27 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:08:27 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-19 02:08:27 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:08:27 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-19 02:08:27 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:08:27 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-19 02:08:27 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-19 02:08:27 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-19 02:08:27 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:08:27 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-19 02:08:27 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-19 02:08:27 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:08:27 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:08:27 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-19 02:08:27 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5503de1]
2021-12-19 02:08:27 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:08:27 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:08:27 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:08:27 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:08:27 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79d3473e]
2021-12-19 02:08:27 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d77826]
2021-12-19 02:08:27 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:08:27 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:08:27 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c829dbc]
2021-12-19 02:08:27 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:08:27 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:08:27 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:08:28 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-19 02:08:28 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-19 02:08:28 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-19 02:08:28 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-19 02:08:28 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:08:28 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-19 02:08:28 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-19 02:08:28 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4684240f]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6975fb1c]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-19 02:08:28 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-19 02:08:28 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-19 02:08:28 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:08:28 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-19 02:08:28 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-19 02:08:28 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:08:28 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:08:28 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@553da911]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1084ac45]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@566f1852]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea246af]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e4389ed]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b90fee4]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3513c84c]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4978777f]
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:08:28 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-19 02:08:28 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-19 02:08:28 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-19 02:08:28 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-19 02:08:28 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:08:28 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-19 02:08:28 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-19 02:08:28 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc6935c]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc7d00d]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@468e8565]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@91da29b]
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-19 02:08:28 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-19 02:08:28 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-19 02:08:28 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-19 02:08:28 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:08:28 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-19 02:08:28 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-19 02:08:28 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:08:28 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:08:28 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6435fa1c]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d7bbf12]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450131a]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7eee96]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a36cd5]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0d09c]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47acd13b]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8e9d06]
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:08:28 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-19 02:08:28 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-19 02:08:28 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-19 02:08:28 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-19 02:08:28 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-19 02:08:28 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-19 02:08:28 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-19 02:08:28 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77d381e6]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f6f3cc]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180b3819]
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-19 02:08:28 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20c812c8]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71aaf151]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:08:28 DEBUG [main]: Property path deemed to be circular : person
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-19 02:08:28 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5529ff44]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14447be]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:08:28 DEBUG [main]: Property path deemed to be circular : father
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5099c59b]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73c31181]
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:08:28 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d620a1]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f486211]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a6631b]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:08:28 DEBUG [main]: Property path deemed to be circular : mother
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@472d0f4]
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:08:28 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bc59b27]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d7a64ca]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:08:28 DEBUG [main]: Property path deemed to be circular : husband
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3635099]
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:08:28 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1da1380b]
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1095d23a]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:08:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e39baf0]
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:08:28 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:08:28 DEBUG [main]: Property path deemed to be circular : wife
2021-12-19 02:08:28 DEBUG [main]: Building LoadPlan...
2021-12-19 02:08:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:08:28 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:08:28 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-19 02:08:28 DEBUG [main]: No actions specified; doing nothing
2021-12-19 02:08:28 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-19 02:08:28 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-19 02:08:28 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:08:28 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:08:28 DEBUG [main]: Checking 1 named HQL queries
2021-12-19 02:08:28 DEBUG [main]: Checking named query: Person.findPersons
2021-12-19 02:08:28 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-19 02:08:28 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@62b475e2
2021-12-19 02:08:28 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:08:28 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:08:28 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-19 02:08:28 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-19 02:08:28 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-19 02:08:28 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:08:28 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-19 02:08:28 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-19 02:08:28 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-19 02:08:28 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-19 02:08:28 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-19 02:08:28 DEBUG [main]: Resolved : p.passports -> .
2021-12-19 02:08:28 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-19 02:08:28 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:08:28 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-19 02:08:28 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-19 02:08:28 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-19 02:08:28 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-19 02:08:28 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-19 02:08:28 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-19 02:08:28 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:08:28 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:08:28 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@32f61a31
2021-12-19 02:08:28 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-19 02:08:28 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-19 02:08:28 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-19 02:08:28 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-19 02:08:28 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-19 02:08:28 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-19 02:08:28 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-19 02:08:28 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-19 02:08:28 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@32f61a31}

2021-12-19 02:08:28 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:08:28 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:08:28 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-19 02:08:28 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:08:28 DEBUG [main]: Checking 0 named SQL queries
2021-12-19 02:08:28 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:08:28 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@25a1a012
2021-12-19 02:08:28 DEBUG [main]: Registering SessionFactory: 5cc2cc67-1302-4430-9352-143d7167e99d (<unnamed>)
2021-12-19 02:08:28 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-19 02:08:28 DEBUG [main]: Autowiring by type from bean name 'marriageService' via constructor to bean named 'buildPersonDao'
2021-12-19 02:08:28 DEBUG [main]: Creating shared instance of singleton bean 'marriageDao'
2021-12-19 02:08:28 DEBUG [main]: Found key 'test.value' in PropertySource 'class path resource [register.properties]' with value of type String
2021-12-19 02:08:28 DEBUG [main]: Creating shared instance of singleton bean 'controller'
2021-12-19 02:08:28 INFO  [main]: findMarriageCertificate called
2021-12-19 02:08:28 INFO  [main]: MarriageManager findMarriageCertificate called
2021-12-19 02:08:28 INFO  [main]: findMarriageCertificate called:SIMPLE_VALUE
2021-12-19 02:28:24 DEBUG [main]: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1786f9d5
2021-12-19 02:28:25 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/business/MarriageManager.class]
2021-12-19 02:28:25 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/config/MarriageConfig.class]
2021-12-19 02:28:25 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/dao/MarriageDao.class]
2021-12-19 02:28:25 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/rest/MarriageController.class]
2021-12-19 02:28:25 DEBUG [main]: Loaded 11 bean definitions from class path resource [springContext.xml]
2021-12-19 02:28:25 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2021-12-19 02:28:25 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2021-12-19 02:28:25 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2021-12-19 02:28:25 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2021-12-19 02:28:25 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2021-12-19 02:28:25 DEBUG [main]: Creating shared instance of singleton bean 'emf'
2021-12-19 02:28:25 DEBUG [main]: Creating shared instance of singleton bean 'dataSource'
2021-12-19 02:28:25 DEBUG [main]: Loaded JDBC driver: org.postgresql.Driver
2021-12-19 02:28:26 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-19 02:28:26 DEBUG [main]: Building JPA container EntityManagerFactory for persistence unit 'default'
2021-12-19 02:28:26 DEBUG [main]: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@67424e82
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@38aa816f
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		register.domain.BirthCertificate
		register.domain.MarriageCertificate
		register.domain.Passport
		register.domain.Person
		register.domain.PersonFemale
		register.domain.PersonMale]
	Mapping files names []
	Properties []
2021-12-19 02:28:26 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-19 02:28:26 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-19 02:28:26 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-19 02:28:26 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-19 02:28:26 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-19 02:28:26 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-19 02:28:26 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-19 02:28:26 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-19 02:28:26 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-19 02:28:26 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@79c3f01f
2021-12-19 02:28:26 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@79c3f01f
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79c3f01f
2021-12-19 02:28:26 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@669d2b1b
2021-12-19 02:28:26 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5298dead
2021-12-19 02:28:26 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@5ab9b447
2021-12-19 02:28:26 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@328572f0
2021-12-19 02:28:26 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@328572f0
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@328572f0
2021-12-19 02:28:26 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@44d70181
2021-12-19 02:28:26 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@44d70181
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44d70181
2021-12-19 02:28:26 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@5fa05212
2021-12-19 02:28:26 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@5fa05212
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5fa05212
2021-12-19 02:28:26 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@2d83c5a5
2021-12-19 02:28:26 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@2d83c5a5
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2d83c5a5
2021-12-19 02:28:26 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@a68df9
2021-12-19 02:28:26 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@a68df9
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@a68df9
2021-12-19 02:28:26 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@169da7f2
2021-12-19 02:28:26 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@169da7f2
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@169da7f2
2021-12-19 02:28:26 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@2ba45490
2021-12-19 02:28:26 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@2ba45490
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ba45490
2021-12-19 02:28:26 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@36c54a56
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@36c54a56
2021-12-19 02:28:26 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68ace111
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68ace111
2021-12-19 02:28:26 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@5eefa415
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@5eefa415
2021-12-19 02:28:26 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@cda4919
2021-12-19 02:28:26 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6a078481
2021-12-19 02:28:26 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@676f0a60
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@676f0a60
2021-12-19 02:28:26 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@6759f091
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6759f091
2021-12-19 02:28:26 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@347bdeef
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@347bdeef
2021-12-19 02:28:26 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49298ce7
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49298ce7
2021-12-19 02:28:26 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4a325eb9
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4a325eb9
2021-12-19 02:28:26 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d81e101
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d81e101
2021-12-19 02:28:26 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3163987e
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3163987e
2021-12-19 02:28:26 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4c9e9fb8
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4c9e9fb8
2021-12-19 02:28:26 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e6d7365
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e6d7365
2021-12-19 02:28:26 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@3ae66c85
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3ae66c85
2021-12-19 02:28:26 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@d2387c8
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d2387c8
2021-12-19 02:28:26 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@673bb956
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@673bb956
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@673bb956
2021-12-19 02:28:26 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@680362a
2021-12-19 02:28:26 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@238ad8c
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@238ad8c
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@238ad8c
2021-12-19 02:28:26 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5bdaf2ce
2021-12-19 02:28:26 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1a78dacd
2021-12-19 02:28:26 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@261d8190
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261d8190
2021-12-19 02:28:26 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@4b61d0c6
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b61d0c6
2021-12-19 02:28:26 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@263558c9
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@263558c9
2021-12-19 02:28:26 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@1059754c
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1059754c
2021-12-19 02:28:26 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f89f665
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f89f665
2021-12-19 02:28:26 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a43d133
2021-12-19 02:28:26 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@38b972d7
2021-12-19 02:28:26 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@38b972d7
2021-12-19 02:28:26 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@38b972d7
2021-12-19 02:28:26 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29006752
2021-12-19 02:28:26 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29006752
2021-12-19 02:28:26 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29006752
2021-12-19 02:28:26 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@3e6fd0b9
2021-12-19 02:28:26 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@36074e47
2021-12-19 02:28:26 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@56193c7d
2021-12-19 02:28:26 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@56193c7d
2021-12-19 02:28:26 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@56193c7d
2021-12-19 02:28:26 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31611954
2021-12-19 02:28:26 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31611954
2021-12-19 02:28:26 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31611954
2021-12-19 02:28:26 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@3088660d
2021-12-19 02:28:26 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@1bd81830
2021-12-19 02:28:26 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@1b812421
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1b812421
2021-12-19 02:28:26 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20d11153
2021-12-19 02:28:26 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@779dfe55
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@779dfe55
2021-12-19 02:28:26 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@5767b2af
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5767b2af
2021-12-19 02:28:26 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48b0e701
2021-12-19 02:28:26 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7fae4d4a
2021-12-19 02:28:26 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@5ffc5491
2021-12-19 02:28:26 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@5f212d84
2021-12-19 02:28:26 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f212d84
2021-12-19 02:28:26 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30b9eadd
2021-12-19 02:28:26 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@497570fb
2021-12-19 02:28:26 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@412c995d
2021-12-19 02:28:26 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3249a1ce
2021-12-19 02:28:26 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4dd94a58
2021-12-19 02:28:26 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f4919b0
2021-12-19 02:28:26 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a8a8b75
2021-12-19 02:28:26 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@75b21c3b
2021-12-19 02:28:26 DEBUG [main]: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f174d9] into BootstrapContext; was [null]
2021-12-19 02:28:26 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f174d9) [was null]
2021-12-19 02:28:26 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@aa21042] into BootstrapContext; was [null]
2021-12-19 02:28:26 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@e93f3d5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4cee7fa0]
2021-12-19 02:28:26 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f174d9]
2021-12-19 02:28:26 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f174d9]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:28:26 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-19 02:28:26 DEBUG [main]: Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 02:28:27 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-19 02:28:27 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-19 02:28:27 DEBUG [main]: JDBC version : 4.2
2021-12-19 02:28:27 WARN  [main]: HHH000342: Could not obtain connection to query metadata
org.hibernate.boot.registry.selector.spi.StrategySelectionException: Unable to resolve name [org.hibernate.dialect.PostgreSQL1Dialect] as strategy [org.hibernate.dialect.Dialect]
	at org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.selectStrategyImplementor(StrategySelectorImpl.java:156)
	at org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.resolveStrategy(StrategySelectorImpl.java:239)
	at org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.resolveDefaultableStrategy(StrategySelectorImpl.java:183)
	at org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.resolveDefaultableStrategy(StrategySelectorImpl.java:170)
	at org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.resolveStrategy(StrategySelectorImpl.java:164)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect(DialectFactoryImpl.java:74)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:51)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:97)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:178)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:95)
	at register.start.Starter.main(Starter.java:11)
Caused by: org.hibernate.boot.registry.classloading.spi.ClassLoadingException: Unable to load class [org.hibernate.dialect.PostgreSQL1Dialect]
	at org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.classForName(ClassLoaderServiceImpl.java:133)
	at org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.selectStrategyImplementor(StrategySelectorImpl.java:152)
	... 39 more
Caused by: java.lang.ClassNotFoundException: Could not load requested class : org.hibernate.dialect.PostgreSQL1Dialect
	at org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader.findClass(AggregatedClassLoader.java:210)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:587)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.classForName(ClassLoaderServiceImpl.java:130)
	... 40 more
2021-12-19 02:28:27 DEBUG [main]: Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2021-12-19 02:28:27 ERROR [main]: Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2021-12-19 02:28:27 WARN  [main]: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'emf' defined in class path resource [springContext.xml]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2021-12-19 02:28:40 DEBUG [main]: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@782663d3
2021-12-19 02:28:40 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/business/MarriageManager.class]
2021-12-19 02:28:40 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/config/MarriageConfig.class]
2021-12-19 02:28:40 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/dao/MarriageDao.class]
2021-12-19 02:28:40 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/rest/MarriageController.class]
2021-12-19 02:28:40 DEBUG [main]: Loaded 11 bean definitions from class path resource [springContext.xml]
2021-12-19 02:28:40 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2021-12-19 02:28:41 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2021-12-19 02:28:41 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2021-12-19 02:28:41 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2021-12-19 02:28:41 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2021-12-19 02:28:41 DEBUG [main]: Creating shared instance of singleton bean 'emf'
2021-12-19 02:28:41 DEBUG [main]: Creating shared instance of singleton bean 'dataSource'
2021-12-19 02:28:41 DEBUG [main]: Loaded JDBC driver: org.postgresql.Driver
2021-12-19 02:28:41 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-19 02:28:41 DEBUG [main]: Building JPA container EntityManagerFactory for persistence unit 'default'
2021-12-19 02:28:41 DEBUG [main]: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@67424e82
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@d62fe5b
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		register.domain.BirthCertificate
		register.domain.MarriageCertificate
		register.domain.Passport
		register.domain.Person
		register.domain.PersonFemale
		register.domain.PersonMale]
	Mapping files names []
	Properties []
2021-12-19 02:28:41 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-19 02:28:41 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-19 02:28:41 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-19 02:28:41 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-19 02:28:41 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-19 02:28:41 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-19 02:28:41 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-19 02:28:41 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-19 02:28:41 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-19 02:28:41 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@5fa47fea
2021-12-19 02:28:41 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@5fa47fea
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5fa47fea
2021-12-19 02:28:41 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@545f80bf
2021-12-19 02:28:41 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@6594402a
2021-12-19 02:28:41 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@79c3f01f
2021-12-19 02:28:41 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5298dead
2021-12-19 02:28:41 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5298dead
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5298dead
2021-12-19 02:28:41 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@2b50150
2021-12-19 02:28:41 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@2b50150
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b50150
2021-12-19 02:28:41 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@17f460bb
2021-12-19 02:28:41 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@17f460bb
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17f460bb
2021-12-19 02:28:41 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@23c650a3
2021-12-19 02:28:41 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@23c650a3
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23c650a3
2021-12-19 02:28:41 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5c09d180
2021-12-19 02:28:41 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5c09d180
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c09d180
2021-12-19 02:28:41 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@7e053511
2021-12-19 02:28:41 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@7e053511
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e053511
2021-12-19 02:28:41 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@7cf7aee
2021-12-19 02:28:41 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@7cf7aee
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7cf7aee
2021-12-19 02:28:41 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ceb4bd2
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ceb4bd2
2021-12-19 02:28:41 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@894858
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@894858
2021-12-19 02:28:41 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@7ba63fe5
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@7ba63fe5
2021-12-19 02:28:41 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@584f5497
2021-12-19 02:28:41 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fbb001b
2021-12-19 02:28:41 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@2fb69ff6
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@2fb69ff6
2021-12-19 02:28:41 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@1929425f
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1929425f
2021-12-19 02:28:41 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@78d39a69
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78d39a69
2021-12-19 02:28:41 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6bfdb014
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6bfdb014
2021-12-19 02:28:41 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f34a967
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f34a967
2021-12-19 02:28:41 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@8dfe921
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@8dfe921
2021-12-19 02:28:41 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57f64f5e
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57f64f5e
2021-12-19 02:28:41 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@bf71cec
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@bf71cec
2021-12-19 02:28:41 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@210f0cc1
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@210f0cc1
2021-12-19 02:28:41 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@3af37506
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3af37506
2021-12-19 02:28:41 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@64a896b0
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64a896b0
2021-12-19 02:28:41 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@e36bb2a
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@e36bb2a
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@e36bb2a
2021-12-19 02:28:41 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d2387c8
2021-12-19 02:28:41 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@673bb956
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@673bb956
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@673bb956
2021-12-19 02:28:41 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3569edd5
2021-12-19 02:28:41 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@238ad8c
2021-12-19 02:28:41 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@1ce93c18
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ce93c18
2021-12-19 02:28:41 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@7de4a01f
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7de4a01f
2021-12-19 02:28:41 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@60e9df3c
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60e9df3c
2021-12-19 02:28:41 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@65e7f52a
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65e7f52a
2021-12-19 02:28:41 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7daa61f3
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7daa61f3
2021-12-19 02:28:41 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78f9ed3e
2021-12-19 02:28:41 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@6f89f665
2021-12-19 02:28:41 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@6f89f665
2021-12-19 02:28:41 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@6f89f665
2021-12-19 02:28:41 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@c96a4ea
2021-12-19 02:28:41 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@c96a4ea
2021-12-19 02:28:41 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@c96a4ea
2021-12-19 02:28:41 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@3935e9a8
2021-12-19 02:28:41 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@534243e4
2021-12-19 02:28:41 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@53b98ff6
2021-12-19 02:28:41 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@53b98ff6
2021-12-19 02:28:41 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@53b98ff6
2021-12-19 02:28:41 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dcc91fd
2021-12-19 02:28:41 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dcc91fd
2021-12-19 02:28:41 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dcc91fd
2021-12-19 02:28:41 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@6c8a68c1
2021-12-19 02:28:41 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@607b2792
2021-12-19 02:28:41 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@32fdec40
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32fdec40
2021-12-19 02:28:41 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64e92d61
2021-12-19 02:28:41 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@7882c44a
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7882c44a
2021-12-19 02:28:41 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@794b435f
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@794b435f
2021-12-19 02:28:41 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1144a55a
2021-12-19 02:28:41 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1286528d
2021-12-19 02:28:41 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@547c04c4
2021-12-19 02:28:41 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@6f63c44f
2021-12-19 02:28:41 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6f63c44f
2021-12-19 02:28:41 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f5b5ca4
2021-12-19 02:28:41 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ee33af7
2021-12-19 02:28:41 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b04acb2
2021-12-19 02:28:41 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18388a3c
2021-12-19 02:28:41 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d035be3
2021-12-19 02:28:41 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a60ee36
2021-12-19 02:28:41 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4cfbaf4
2021-12-19 02:28:41 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58faa93b
2021-12-19 02:28:41 DEBUG [main]: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37d00a23] into BootstrapContext; was [null]
2021-12-19 02:28:41 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37d00a23) [was null]
2021-12-19 02:28:41 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@988246e] into BootstrapContext; was [null]
2021-12-19 02:28:41 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@62515a47] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3c5a54b7]
2021-12-19 02:28:41 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37d00a23]
2021-12-19 02:28:41 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37d00a23]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:28:41 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-19 02:28:41 DEBUG [main]: Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 02:28:42 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-19 02:28:42 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-19 02:28:42 DEBUG [main]: JDBC version : 4.2
2021-12-19 02:28:42 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-19 02:28:42 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-19 02:28:42 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-19 02:28:42 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6da9dc6
2021-12-19 02:28:42 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6da9dc6
2021-12-19 02:28:42 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7daa61f3
2021-12-19 02:28:42 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@661c46bc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37864b77]
2021-12-19 02:28:42 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-19 02:28:42 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-19 02:28:42 DEBUG [main]: Import with entity name Person
2021-12-19 02:28:42 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for personId
2021-12-19 02:28:42 DEBUG [main]: Building property personId
2021-12-19 02:28:42 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-19 02:28:42 DEBUG [main]: Building property dateOfBirth
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for firstName
2021-12-19 02:28:42 DEBUG [main]: Building property firstName
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for lasName
2021-12-19 02:28:42 DEBUG [main]: Building property lasName
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:28:42 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-19 02:28:42 DEBUG [main]: Building property passports
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for patronymic
2021-12-19 02:28:42 DEBUG [main]: Building property patronymic
2021-12-19 02:28:42 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:28:42 DEBUG [main]: Import with entity name Passport
2021-12-19 02:28:42 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for passportId
2021-12-19 02:28:42 DEBUG [main]: Building property passportId
2021-12-19 02:28:42 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:28:42 DEBUG [main]: Building property issueDate
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-19 02:28:42 DEBUG [main]: Building property issueDepartment
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for number
2021-12-19 02:28:42 DEBUG [main]: Building property number
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Building property person
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for seria
2021-12-19 02:28:42 DEBUG [main]: Building property seria
2021-12-19 02:28:42 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-19 02:28:42 DEBUG [main]: Import with entity name PersonFemale
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:28:42 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-19 02:28:42 DEBUG [main]: Building property birthCertificates
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:28:42 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:28:42 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:28:42 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:28:42 DEBUG [main]: Import with entity name BirthCertificate
2021-12-19 02:28:42 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-19 02:28:42 DEBUG [main]: Building property birthCertificateId
2021-12-19 02:28:42 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Building property father
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:28:42 DEBUG [main]: Building property issueDate
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Building property mother
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for number
2021-12-19 02:28:42 DEBUG [main]: Building property number
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Building property person
2021-12-19 02:28:42 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-19 02:28:42 DEBUG [main]: Import with entity name PersonMale
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:28:42 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-19 02:28:42 DEBUG [main]: Building property birthCertificates
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:28:42 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-19 02:28:42 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:28:42 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:28:42 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-19 02:28:42 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-19 02:28:42 DEBUG [main]: Building property marriageCertificateId
2021-12-19 02:28:42 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for active
2021-12-19 02:28:42 DEBUG [main]: Building property active
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for endDate
2021-12-19 02:28:42 DEBUG [main]: Building property endDate
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Building property husband
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:28:42 DEBUG [main]: Building property issueDate
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:28:42 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-19 02:28:42 DEBUG [main]: building SimpleValue for number
2021-12-19 02:28:42 DEBUG [main]: Building property number
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:42 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:42 DEBUG [main]: Building property wife
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for active
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:28:42 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:28:42 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-19 02:28:42 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-19 02:28:42 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-19 02:28:42 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-19 02:28:42 DEBUG [main]: Building property birthCertificate
2021-12-19 02:28:42 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-19 02:28:42 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-19 02:28:42 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-19 02:28:42 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-19 02:28:42 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-19 02:28:42 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:28:42 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-19 02:28:42 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-19 02:28:42 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-19 02:28:42 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:28:42 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:28:42 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-19 02:28:42 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:28:42 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-19 02:28:42 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:28:42 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:28:42 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-19 02:28:42 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-19 02:28:42 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-19 02:28:42 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:28:42 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:28:42 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-19 02:28:42 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:28:42 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-19 02:28:42 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:28:42 DEBUG [main]: Processing association property references
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:28:42 DEBUG [main]: Processing association property references
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:28:42 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:28:42 DEBUG [main]: Building session factory
2021-12-19 02:28:42 DEBUG [main]: SessionFactory name : null
2021-12-19 02:28:42 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-19 02:28:42 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-19 02:28:42 DEBUG [main]: Statistics: disabled
2021-12-19 02:28:42 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-19 02:28:42 DEBUG [main]: Default entity-mode: pojo
2021-12-19 02:28:42 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-19 02:28:42 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-19 02:28:42 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-19 02:28:42 DEBUG [main]: Default batch fetch size: -1
2021-12-19 02:28:42 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-19 02:28:42 DEBUG [main]: Default null ordering: NONE
2021-12-19 02:28:42 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-19 02:28:42 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-19 02:28:42 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-19 02:28:42 DEBUG [main]: JTA Track by Thread: enabled
2021-12-19 02:28:42 DEBUG [main]: Query language substitutions: {}
2021-12-19 02:28:42 DEBUG [main]: Named query checking : enabled
2021-12-19 02:28:42 DEBUG [main]: Second-level cache: disabled
2021-12-19 02:28:42 DEBUG [main]: Second-level query cache: disabled
2021-12-19 02:28:42 DEBUG [main]: Second-level query cache factory: null
2021-12-19 02:28:42 DEBUG [main]: Second-level cache region prefix: null
2021-12-19 02:28:42 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-19 02:28:42 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-19 02:28:42 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-19 02:28:42 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-19 02:28:42 DEBUG [main]: JDBC batch size: 15
2021-12-19 02:28:42 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-19 02:28:42 DEBUG [main]: Scrollable result sets: enabled
2021-12-19 02:28:42 DEBUG [main]: Wrap result sets: disabled
2021-12-19 02:28:42 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-19 02:28:42 DEBUG [main]: JDBC result set fetch size: null
2021-12-19 02:28:42 DEBUG [main]: Connection release mode: ON_CLOSE
2021-12-19 02:28:42 DEBUG [main]: Generate SQL with comments: disabled
2021-12-19 02:28:42 DEBUG [main]: JPA compliance - query : disabled
2021-12-19 02:28:42 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-19 02:28:42 DEBUG [main]: JPA compliance - lists : disabled
2021-12-19 02:28:42 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:28:42 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:28:42 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:28:42 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-19 02:28:42 DEBUG [main]: Instantiating session factory with properties: {java.specification.version=17, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-orm/5.3.14/spring-orm-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jdbc/5.3.14/spring-jdbc-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-tx/5.3.14/spring-tx-5.3.14.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=17, os.name=Mac OS X, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@d62fe5b, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=register.start.Starter, javax.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@d62fe5b, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3c3c4a71, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@d62fe5b, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-19 02:28:42 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-19 02:28:42 DEBUG [main]: Instantiated session factory
2021-12-19 02:28:42 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@661c46bc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@885e7ff]
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:28:42 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:28:42 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:28:42 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-19 02:28:42 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-19 02:28:42 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-19 02:28:42 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:28:42 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-19 02:28:42 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:28:42 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-19 02:28:42 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:28:42 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-19 02:28:42 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:28:42 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-19 02:28:42 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-19 02:28:42 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:28:42 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-19 02:28:42 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-19 02:28:42 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:28:42 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:28:42 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1da1380b]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@709f0202]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71179b6f]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca16adc]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:28:42 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-19 02:28:42 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-19 02:28:42 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-19 02:28:42 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-19 02:28:42 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:28:42 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-19 02:28:42 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-19 02:28:42 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11dcd42c]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c302f38]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-19 02:28:42 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-19 02:28:42 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-19 02:28:42 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:28:42 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-19 02:28:42 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-19 02:28:42 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:28:42 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:28:42 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75aea2ba]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f279b5]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff6dd3c]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fcd1f0a]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e64c1a9]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fda2001]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@162c1dfb]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21ae657b]
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:28:42 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-19 02:28:42 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-19 02:28:42 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-19 02:28:42 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:28:42 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@799f916e]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21de60a7]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73894c5a]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7698b7a4]
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-19 02:28:42 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-19 02:28:42 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-19 02:28:42 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:28:42 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-19 02:28:42 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-19 02:28:42 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:28:42 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:28:42 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f5d0190]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e34b127]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@679dd234]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60cb1ed6]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e5eb20a]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4538856f]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c3de38e]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b86971]
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:28:42 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-19 02:28:42 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-19 02:28:42 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-19 02:28:42 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-19 02:28:42 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f9d4b0e]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8d17a3]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ac91282]
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-19 02:28:42 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b357eb6]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64bebd55]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:42 DEBUG [main]: Property path deemed to be circular : person
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-19 02:28:42 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@384fda47]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3663d0ba]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:28:42 DEBUG [main]: Property path deemed to be circular : father
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@566e142]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2da81754]
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:28:42 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f992a3a]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bf26df]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@390037e7]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:28:42 DEBUG [main]: Property path deemed to be circular : mother
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@704067c6]
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:28:42 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f4596d0]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6002e944]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:28:42 DEBUG [main]: Property path deemed to be circular : husband
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a8978a]
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:28:42 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f171912]
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d4d8579]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:28:42 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e54a6b1]
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:42 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:28:42 DEBUG [main]: Property path deemed to be circular : wife
2021-12-19 02:28:42 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:42 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:42 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:28:42 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-19 02:28:42 DEBUG [main]: No actions specified; doing nothing
2021-12-19 02:28:42 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-19 02:28:42 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-19 02:28:42 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:28:42 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:28:42 DEBUG [main]: Checking 1 named HQL queries
2021-12-19 02:28:42 DEBUG [main]: Checking named query: Person.findPersons
2021-12-19 02:28:42 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-19 02:28:42 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4e375bba
2021-12-19 02:28:42 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:28:42 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:28:43 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-19 02:28:43 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-19 02:28:43 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-19 02:28:43 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-19 02:28:43 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-19 02:28:43 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-19 02:28:43 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-19 02:28:43 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-19 02:28:43 DEBUG [main]: Resolved : p.passports -> .
2021-12-19 02:28:43 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-19 02:28:43 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-19 02:28:43 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-19 02:28:43 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-19 02:28:43 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-19 02:28:43 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-19 02:28:43 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@5c09d180
2021-12-19 02:28:43 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-19 02:28:43 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-19 02:28:43 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-19 02:28:43 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-19 02:28:43 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-19 02:28:43 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-19 02:28:43 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-19 02:28:43 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@5c09d180}

2021-12-19 02:28:43 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:28:43 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:28:43 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-19 02:28:43 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:28:43 DEBUG [main]: Checking 0 named SQL queries
2021-12-19 02:28:43 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:28:43 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6bcae9
2021-12-19 02:28:43 DEBUG [main]: Registering SessionFactory: 3c463e3d-5393-4a50-9afb-a7280cda6307 (<unnamed>)
2021-12-19 02:28:43 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-19 02:28:43 INFO  [main]: Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-19 02:28:43 DEBUG [main]: Creating shared instance of singleton bean 'marriageService'
2021-12-19 02:28:43 DEBUG [main]: Creating shared instance of singleton bean 'buildPersonDao'
2021-12-19 02:28:43 DEBUG [main]: Creating shared instance of singleton bean 'marriageConfig'
2021-12-19 02:28:43 DEBUG [main]: Located and parsed 1 persistence units; checking each
2021-12-19 02:28:43 DEBUG [main]: Checking persistence-unit [name=persistence, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [persistence]
2021-12-19 02:28:43 DEBUG [main]: Persistence-unit [persistence] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-12-19 02:28:43 DEBUG [main]: PersistenceUnitInfo [
	name: persistence
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: login456456
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/register_office
		hibernate.show_sql: true
		hibernate.format_sql: false
		javax.persistence.jdbc.user: postgres]
2021-12-19 02:28:43 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-19 02:28:43 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-19 02:28:43 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-19 02:28:43 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-19 02:28:43 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-19 02:28:43 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-19 02:28:43 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@5fa47fea
2021-12-19 02:28:43 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@5fa47fea
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5fa47fea
2021-12-19 02:28:43 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@545f80bf
2021-12-19 02:28:43 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@6594402a
2021-12-19 02:28:43 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@79c3f01f
2021-12-19 02:28:43 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5298dead
2021-12-19 02:28:43 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5298dead
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5298dead
2021-12-19 02:28:43 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@2b50150
2021-12-19 02:28:43 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@2b50150
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b50150
2021-12-19 02:28:43 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@17f460bb
2021-12-19 02:28:43 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@17f460bb
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17f460bb
2021-12-19 02:28:43 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@23c650a3
2021-12-19 02:28:43 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@23c650a3
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23c650a3
2021-12-19 02:28:43 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5c09d180
2021-12-19 02:28:43 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5c09d180
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c09d180
2021-12-19 02:28:43 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@7e053511
2021-12-19 02:28:43 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@7e053511
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e053511
2021-12-19 02:28:43 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@7cf7aee
2021-12-19 02:28:43 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@7cf7aee
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7cf7aee
2021-12-19 02:28:43 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ceb4bd2
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ceb4bd2
2021-12-19 02:28:43 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@894858
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@894858
2021-12-19 02:28:43 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@7ba63fe5
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@7ba63fe5
2021-12-19 02:28:43 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@584f5497
2021-12-19 02:28:43 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fbb001b
2021-12-19 02:28:43 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@2fb69ff6
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@2fb69ff6
2021-12-19 02:28:43 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@1929425f
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1929425f
2021-12-19 02:28:43 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@78d39a69
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78d39a69
2021-12-19 02:28:43 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6bfdb014
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6bfdb014
2021-12-19 02:28:43 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f34a967
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f34a967
2021-12-19 02:28:43 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@8dfe921
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@8dfe921
2021-12-19 02:28:43 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57f64f5e
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57f64f5e
2021-12-19 02:28:43 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@bf71cec
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@bf71cec
2021-12-19 02:28:43 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@210f0cc1
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@210f0cc1
2021-12-19 02:28:43 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@3af37506
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3af37506
2021-12-19 02:28:43 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@64a896b0
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64a896b0
2021-12-19 02:28:43 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@e36bb2a
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@e36bb2a
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@e36bb2a
2021-12-19 02:28:43 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d2387c8
2021-12-19 02:28:43 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@673bb956
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@673bb956
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@673bb956
2021-12-19 02:28:43 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3569edd5
2021-12-19 02:28:43 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@238ad8c
2021-12-19 02:28:43 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@1ce93c18
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ce93c18
2021-12-19 02:28:43 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@7de4a01f
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7de4a01f
2021-12-19 02:28:43 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@60e9df3c
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60e9df3c
2021-12-19 02:28:43 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@65e7f52a
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65e7f52a
2021-12-19 02:28:43 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7daa61f3
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7daa61f3
2021-12-19 02:28:43 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78f9ed3e
2021-12-19 02:28:43 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@6f89f665
2021-12-19 02:28:43 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@6f89f665
2021-12-19 02:28:43 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@6f89f665
2021-12-19 02:28:43 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@c96a4ea
2021-12-19 02:28:43 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@c96a4ea
2021-12-19 02:28:43 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@c96a4ea
2021-12-19 02:28:43 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@3935e9a8
2021-12-19 02:28:43 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@534243e4
2021-12-19 02:28:43 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@53b98ff6
2021-12-19 02:28:43 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@53b98ff6
2021-12-19 02:28:43 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@53b98ff6
2021-12-19 02:28:43 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dcc91fd
2021-12-19 02:28:43 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dcc91fd
2021-12-19 02:28:43 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dcc91fd
2021-12-19 02:28:43 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@6c8a68c1
2021-12-19 02:28:43 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@607b2792
2021-12-19 02:28:43 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@32fdec40
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32fdec40
2021-12-19 02:28:43 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64e92d61
2021-12-19 02:28:43 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@7882c44a
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7882c44a
2021-12-19 02:28:43 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@794b435f
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@794b435f
2021-12-19 02:28:43 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1144a55a
2021-12-19 02:28:43 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1286528d
2021-12-19 02:28:43 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@547c04c4
2021-12-19 02:28:43 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@6f63c44f
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6f63c44f
2021-12-19 02:28:43 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@273fa9e
2021-12-19 02:28:43 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@527a8665
2021-12-19 02:28:43 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ab2a07e
2021-12-19 02:28:43 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@437c4b25
2021-12-19 02:28:43 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ec6fede
2021-12-19 02:28:43 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@580902cd
2021-12-19 02:28:43 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3757e8e2
2021-12-19 02:28:43 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1653b84e
2021-12-19 02:28:43 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7f8a9454] into BootstrapContext; was [null]
2021-12-19 02:28:43 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6f85ee02] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@679d0be8]
2021-12-19 02:28:43 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-12-19 02:28:43 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:28:43 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-19 02:28:43 WARN  [main]: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-19 02:28:43 INFO  [main]: HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 02:28:43 INFO  [main]: HHH10001001: Connection properties: {password=login456456, user=postgres}
2021-12-19 02:28:43 INFO  [main]: HHH10001003: Autocommit mode: false
2021-12-19 02:28:43 DEBUG [main]: Initializing Connection pool with 1 Connections
2021-12-19 02:28:43 INFO  [main]: HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-19 02:28:43 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-19 02:28:43 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-19 02:28:43 DEBUG [main]: JDBC version : 4.2
2021-12-19 02:28:43 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-19 02:28:43 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-19 02:28:43 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-19 02:28:43 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6da9dc6
2021-12-19 02:28:43 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6da9dc6
2021-12-19 02:28:43 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7daa61f3
2021-12-19 02:28:43 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3db65c0d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1edccfd4]
2021-12-19 02:28:43 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-19 02:28:43 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-19 02:28:43 DEBUG [main]: Import with entity name Person
2021-12-19 02:28:43 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for personId
2021-12-19 02:28:43 DEBUG [main]: Building property personId
2021-12-19 02:28:43 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-19 02:28:43 DEBUG [main]: Building property dateOfBirth
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for firstName
2021-12-19 02:28:43 DEBUG [main]: Building property firstName
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for lasName
2021-12-19 02:28:43 DEBUG [main]: Building property lasName
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:28:43 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-19 02:28:43 DEBUG [main]: Building property passports
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for patronymic
2021-12-19 02:28:43 DEBUG [main]: Building property patronymic
2021-12-19 02:28:43 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:28:43 DEBUG [main]: Import with entity name Passport
2021-12-19 02:28:43 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for passportId
2021-12-19 02:28:43 DEBUG [main]: Building property passportId
2021-12-19 02:28:43 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:28:43 DEBUG [main]: Building property issueDate
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-19 02:28:43 DEBUG [main]: Building property issueDepartment
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for number
2021-12-19 02:28:43 DEBUG [main]: Building property number
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Building property person
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for seria
2021-12-19 02:28:43 DEBUG [main]: Building property seria
2021-12-19 02:28:43 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-19 02:28:43 DEBUG [main]: Import with entity name PersonFemale
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:28:43 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-19 02:28:43 DEBUG [main]: Building property birthCertificates
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:28:43 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:28:43 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:28:43 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:28:43 DEBUG [main]: Import with entity name BirthCertificate
2021-12-19 02:28:43 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-19 02:28:43 DEBUG [main]: Building property birthCertificateId
2021-12-19 02:28:43 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Building property father
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:28:43 DEBUG [main]: Building property issueDate
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Building property mother
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for number
2021-12-19 02:28:43 DEBUG [main]: Building property number
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Building property person
2021-12-19 02:28:43 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-19 02:28:43 DEBUG [main]: Import with entity name PersonMale
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:28:43 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-19 02:28:43 DEBUG [main]: Building property birthCertificates
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:28:43 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-19 02:28:43 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:28:43 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:28:43 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-19 02:28:43 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-19 02:28:43 DEBUG [main]: Building property marriageCertificateId
2021-12-19 02:28:43 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for active
2021-12-19 02:28:43 DEBUG [main]: Building property active
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for endDate
2021-12-19 02:28:43 DEBUG [main]: Building property endDate
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Building property husband
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:28:43 DEBUG [main]: Building property issueDate
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:28:43 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-19 02:28:43 DEBUG [main]: building SimpleValue for number
2021-12-19 02:28:43 DEBUG [main]: Building property number
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-19 02:28:43 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-19 02:28:43 DEBUG [main]: Building property wife
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for active
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:28:43 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:28:43 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-19 02:28:43 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-19 02:28:43 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-19 02:28:43 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-19 02:28:43 DEBUG [main]: Building property birthCertificate
2021-12-19 02:28:43 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-19 02:28:43 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-19 02:28:43 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-19 02:28:43 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-19 02:28:43 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-19 02:28:43 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:28:43 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-19 02:28:43 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-19 02:28:43 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-19 02:28:43 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:28:43 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:28:43 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-19 02:28:43 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:28:43 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-19 02:28:43 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:28:43 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:28:43 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-19 02:28:43 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-19 02:28:43 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-19 02:28:43 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:28:43 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:28:43 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-19 02:28:43 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:28:43 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-19 02:28:43 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:28:43 DEBUG [main]: Processing association property references
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:28:43 DEBUG [main]: Processing association property references
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:28:43 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:28:43 DEBUG [main]: Building session factory
2021-12-19 02:28:43 DEBUG [main]: SessionFactory name : null
2021-12-19 02:28:43 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-19 02:28:43 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-19 02:28:43 DEBUG [main]: Statistics: disabled
2021-12-19 02:28:43 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-19 02:28:43 DEBUG [main]: Default entity-mode: pojo
2021-12-19 02:28:43 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-19 02:28:43 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-19 02:28:43 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-19 02:28:43 DEBUG [main]: Default batch fetch size: -1
2021-12-19 02:28:43 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-19 02:28:43 DEBUG [main]: Default null ordering: NONE
2021-12-19 02:28:43 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-19 02:28:43 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-19 02:28:43 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-19 02:28:43 DEBUG [main]: JTA Track by Thread: enabled
2021-12-19 02:28:43 DEBUG [main]: Query language substitutions: {}
2021-12-19 02:28:43 DEBUG [main]: Named query checking : enabled
2021-12-19 02:28:43 DEBUG [main]: Second-level cache: disabled
2021-12-19 02:28:43 DEBUG [main]: Second-level query cache: disabled
2021-12-19 02:28:43 DEBUG [main]: Second-level query cache factory: null
2021-12-19 02:28:43 DEBUG [main]: Second-level cache region prefix: null
2021-12-19 02:28:43 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-19 02:28:43 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-19 02:28:43 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-19 02:28:43 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-19 02:28:43 DEBUG [main]: JDBC batch size: 15
2021-12-19 02:28:43 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-19 02:28:43 DEBUG [main]: Scrollable result sets: enabled
2021-12-19 02:28:43 DEBUG [main]: Wrap result sets: disabled
2021-12-19 02:28:43 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-19 02:28:43 DEBUG [main]: JDBC result set fetch size: null
2021-12-19 02:28:43 DEBUG [main]: Connection release mode: AFTER_TRANSACTION
2021-12-19 02:28:43 DEBUG [main]: Generate SQL with comments: disabled
2021-12-19 02:28:43 DEBUG [main]: JPA compliance - query : disabled
2021-12-19 02:28:43 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-19 02:28:43 DEBUG [main]: JPA compliance - lists : disabled
2021-12-19 02:28:43 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:28:43 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:28:43 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:28:43 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-19 02:28:43 DEBUG [main]: Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-orm/5.3.14/spring-orm-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jdbc/5.3.14/spring-jdbc-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-tx/5.3.14/spring-tx-5.3.14.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=register.start.Starter, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=persistence, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.postgresql.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, hibernate.connection.username=****, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/register_office, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=persistence, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1d289d3f, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-19 02:28:43 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-19 02:28:43 DEBUG [main]: Instantiated session factory
2021-12-19 02:28:43 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3db65c0d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@10f405ff]
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:28:43 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:28:43 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:28:43 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-19 02:28:43 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-19 02:28:43 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-19 02:28:43 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:28:43 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-19 02:28:43 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:28:43 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-19 02:28:43 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:28:43 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-19 02:28:43 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:28:43 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-19 02:28:43 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-19 02:28:43 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:28:43 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-19 02:28:43 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-19 02:28:43 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:28:43 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:28:43 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11810917]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a31ed12]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab595c8]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2365ea38]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:28:43 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-19 02:28:43 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-19 02:28:43 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-19 02:28:43 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-19 02:28:43 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:28:43 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-19 02:28:43 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-19 02:28:43 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cbf1997]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5faeeb56]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-19 02:28:43 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-19 02:28:43 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-19 02:28:43 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:28:43 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-19 02:28:43 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-19 02:28:43 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:28:43 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:28:43 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5396eeb1]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7781263c]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fdd97c1]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b5a19ed]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15d236fd]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9c42bd]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@584ca390]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33324c05]
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:28:43 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-19 02:28:43 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-19 02:28:43 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-19 02:28:43 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:28:43 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d3e140]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33eb0d4]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224d86d2]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a3cba3a]
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-19 02:28:43 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-19 02:28:43 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-19 02:28:43 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:28:43 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-19 02:28:43 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-19 02:28:43 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:28:43 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:28:43 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aea717c]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1291aab5]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d133fb7]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40bd0f8]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eb27768]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6169be09]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e3db14]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fb54740]
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:28:43 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-19 02:28:43 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-19 02:28:43 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-19 02:28:43 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-19 02:28:43 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c448ef]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49c1e294]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7741ae1b]
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-19 02:28:43 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50e5032c]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@545d2560]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:43 DEBUG [main]: Property path deemed to be circular : person
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-19 02:28:43 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10817f46]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d4a3e13]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:28:43 DEBUG [main]: Property path deemed to be circular : father
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16681017]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aae0e6f]
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:28:43 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37775bb1]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b9e25bd]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a40bb52]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:28:43 DEBUG [main]: Property path deemed to be circular : mother
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3079c26a]
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:28:43 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e2445f6]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17ec335a]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:28:43 DEBUG [main]: Property path deemed to be circular : husband
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aea99e7]
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:28:43 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c6a0103]
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7841bd30]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:28:43 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377dfb8d]
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:28:43 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:28:43 DEBUG [main]: Property path deemed to be circular : wife
2021-12-19 02:28:43 DEBUG [main]: Building LoadPlan...
2021-12-19 02:28:43 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:28:43 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:28:43 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-19 02:28:43 DEBUG [main]: No actions specified; doing nothing
2021-12-19 02:28:43 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-19 02:28:43 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-19 02:28:43 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:28:43 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:28:43 DEBUG [main]: Checking 1 named HQL queries
2021-12-19 02:28:43 DEBUG [main]: Checking named query: Person.findPersons
2021-12-19 02:28:43 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-19 02:28:43 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4e375bba
2021-12-19 02:28:43 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:28:43 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:28:43 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-19 02:28:43 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-19 02:28:43 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-19 02:28:43 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-19 02:28:43 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-19 02:28:43 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-19 02:28:43 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-19 02:28:43 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-19 02:28:43 DEBUG [main]: Resolved : p.passports -> .
2021-12-19 02:28:43 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-19 02:28:43 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-19 02:28:43 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-19 02:28:43 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-19 02:28:43 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-19 02:28:43 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-19 02:28:43 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@5c09d180
2021-12-19 02:28:43 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-19 02:28:43 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-19 02:28:43 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-19 02:28:43 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-19 02:28:43 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-19 02:28:43 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-19 02:28:43 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-19 02:28:43 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-19 02:28:43 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@5c09d180}

2021-12-19 02:28:43 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:28:43 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:28:43 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-19 02:28:43 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:28:43 DEBUG [main]: Checking 0 named SQL queries
2021-12-19 02:28:43 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:28:43 DEBUG [main]: Registering SessionFactory: 843643d6-caa0-4a72-9b39-25fc0301e806 (<unnamed>)
2021-12-19 02:28:43 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-19 02:28:43 DEBUG [main]: Autowiring by type from bean name 'marriageService' via constructor to bean named 'buildPersonDao'
2021-12-19 02:28:43 DEBUG [main]: Creating shared instance of singleton bean 'marriageDao'
2021-12-19 02:28:43 DEBUG [main]: Found key 'test.value' in PropertySource 'class path resource [register.properties]' with value of type String
2021-12-19 02:28:43 DEBUG [main]: Creating shared instance of singleton bean 'controller'
2021-12-19 02:28:43 INFO  [main]: findMarriageCertificate called
2021-12-19 02:28:43 INFO  [main]: MarriageManager findMarriageCertificate called
2021-12-19 02:28:43 INFO  [main]: findMarriageCertificate called:SIMPLE_VALUE
2021-12-19 02:29:33 DEBUG [main]: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@382db087
2021-12-19 02:29:33 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/business/MarriageManager.class]
2021-12-19 02:29:33 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/config/MarriageConfig.class]
2021-12-19 02:29:33 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/dao/MarriageDao.class]
2021-12-19 02:29:33 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/rest/MarriageController.class]
2021-12-19 02:29:33 DEBUG [main]: Loaded 11 bean definitions from class path resource [springContext.xml]
2021-12-19 02:29:33 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2021-12-19 02:29:33 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2021-12-19 02:29:33 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2021-12-19 02:29:33 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2021-12-19 02:29:33 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2021-12-19 02:29:33 DEBUG [main]: Creating shared instance of singleton bean 'emf'
2021-12-19 02:29:34 DEBUG [main]: Creating shared instance of singleton bean 'dataSource'
2021-12-19 02:29:34 DEBUG [main]: Loaded JDBC driver: org.postgresql.Driver
2021-12-19 02:29:34 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-19 02:29:34 DEBUG [main]: Building JPA container EntityManagerFactory for persistence unit 'default'
2021-12-19 02:29:34 DEBUG [main]: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@67424e82
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		register.domain.BirthCertificate
		register.domain.MarriageCertificate
		register.domain.Passport
		register.domain.Person
		register.domain.PersonFemale
		register.domain.PersonMale]
	Mapping files names []
	Properties []
2021-12-19 02:29:34 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-19 02:29:34 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-19 02:29:34 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-19 02:29:34 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-19 02:29:34 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-19 02:29:34 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-19 02:29:34 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-19 02:29:34 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-19 02:29:34 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-19 02:29:34 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:29:34 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:29:34 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f4d9395
2021-12-19 02:29:34 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@79c5636f
2021-12-19 02:29:34 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@757f675c
2021-12-19 02:29:34 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:29:34 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:29:34 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:29:34 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:29:34 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:29:34 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:29:34 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:29:34 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:29:34 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:29:34 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:29:34 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:29:34 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:29:34 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:29:34 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:29:34 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15f193b8
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15f193b8
2021-12-19 02:29:34 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d140a7
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d140a7
2021-12-19 02:29:34 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@7ea4d397
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@7ea4d397
2021-12-19 02:29:34 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@503fbbc6
2021-12-19 02:29:34 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a325eb9
2021-12-19 02:29:34 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@1d81e101
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d81e101
2021-12-19 02:29:34 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@3163987e
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3163987e
2021-12-19 02:29:34 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@7d0332e1
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7d0332e1
2021-12-19 02:29:34 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1761de10
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1761de10
2021-12-19 02:29:34 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1532c619
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1532c619
2021-12-19 02:29:34 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@778ca8ef
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@778ca8ef
2021-12-19 02:29:34 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@435ce306
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@435ce306
2021-12-19 02:29:34 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@75699e35
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@75699e35
2021-12-19 02:29:34 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64040287
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64040287
2021-12-19 02:29:34 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@60c16548
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@60c16548
2021-12-19 02:29:34 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@452c8a40
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@452c8a40
2021-12-19 02:29:34 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:29:34 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76adb233
2021-12-19 02:29:34 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:29:34 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@138a7441
2021-12-19 02:29:34 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@42cc13a0
2021-12-19 02:29:34 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@4ad4936c
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4ad4936c
2021-12-19 02:29:34 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@5d28bcd5
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d28bcd5
2021-12-19 02:29:34 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@502f8b57
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@502f8b57
2021-12-19 02:29:34 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@323659f8
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@323659f8
2021-12-19 02:29:34 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:29:34 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@790132f7
2021-12-19 02:29:34 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:29:34 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:29:34 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:29:34 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:29:34 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:29:34 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:29:34 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@7e0b9178
2021-12-19 02:29:34 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@62a8fd44
2021-12-19 02:29:34 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:29:34 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:29:34 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:29:34 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:29:34 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:29:34 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:29:34 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@4dd94a58
2021-12-19 02:29:34 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@72be135f
2021-12-19 02:29:34 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@27cbfddf
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@27cbfddf
2021-12-19 02:29:34 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@383f3558
2021-12-19 02:29:34 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@56febdc
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56febdc
2021-12-19 02:29:34 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@5488b5c5
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5488b5c5
2021-12-19 02:29:34 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54534abf
2021-12-19 02:29:34 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69e308c6
2021-12-19 02:29:34 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@37d00a23
2021-12-19 02:29:34 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@7a26928a
2021-12-19 02:29:34 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a26928a
2021-12-19 02:29:34 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d0ec63
2021-12-19 02:29:34 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a5c128
2021-12-19 02:29:34 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73eb8672
2021-12-19 02:29:34 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5942ee04
2021-12-19 02:29:34 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e76a2bb
2021-12-19 02:29:34 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@757194dc
2021-12-19 02:29:34 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a865416
2021-12-19 02:29:34 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@14faa38c
2021-12-19 02:29:34 DEBUG [main]: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923] into BootstrapContext; was [null]
2021-12-19 02:29:34 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923) [was null]
2021-12-19 02:29:34 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@53667cbe] into BootstrapContext; was [null]
2021-12-19 02:29:34 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d3e6d34] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6eafb10e]
2021-12-19 02:29:34 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923]
2021-12-19 02:29:34 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:29:34 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-19 02:29:34 DEBUG [main]: Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 02:29:35 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-19 02:29:35 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-19 02:29:35 DEBUG [main]: JDBC version : 4.2
2021-12-19 02:29:35 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-19 02:29:35 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-19 02:29:35 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-19 02:29:35 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@174e1b69
2021-12-19 02:29:35 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@174e1b69
2021-12-19 02:29:35 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:29:35 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b329bbd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34819867]
2021-12-19 02:29:35 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-19 02:29:35 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-19 02:29:35 DEBUG [main]: Import with entity name Person
2021-12-19 02:29:35 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:29:35 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for personId
2021-12-19 02:29:35 DEBUG [main]: Building property personId
2021-12-19 02:29:35 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-19 02:29:35 DEBUG [main]: Building property dateOfBirth
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for firstName
2021-12-19 02:29:35 DEBUG [main]: Building property firstName
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for lasName
2021-12-19 02:29:35 DEBUG [main]: Building property lasName
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:29:35 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-19 02:29:35 DEBUG [main]: Building property passports
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for patronymic
2021-12-19 02:29:35 DEBUG [main]: Building property patronymic
2021-12-19 02:29:35 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:29:35 DEBUG [main]: Import with entity name Passport
2021-12-19 02:29:35 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:29:35 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for passportId
2021-12-19 02:29:35 DEBUG [main]: Building property passportId
2021-12-19 02:29:35 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:29:35 DEBUG [main]: Building property issueDate
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-19 02:29:35 DEBUG [main]: Building property issueDepartment
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for number
2021-12-19 02:29:35 DEBUG [main]: Building property number
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Building property person
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for seria
2021-12-19 02:29:35 DEBUG [main]: Building property seria
2021-12-19 02:29:35 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-19 02:29:35 DEBUG [main]: Import with entity name PersonFemale
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:29:35 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-19 02:29:35 DEBUG [main]: Building property birthCertificates
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:29:35 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:29:35 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:29:35 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:29:35 DEBUG [main]: Import with entity name BirthCertificate
2021-12-19 02:29:35 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:29:35 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-19 02:29:35 DEBUG [main]: Building property birthCertificateId
2021-12-19 02:29:35 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Building property father
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:29:35 DEBUG [main]: Building property issueDate
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Building property mother
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for number
2021-12-19 02:29:35 DEBUG [main]: Building property number
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Building property person
2021-12-19 02:29:35 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-19 02:29:35 DEBUG [main]: Import with entity name PersonMale
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:29:35 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-19 02:29:35 DEBUG [main]: Building property birthCertificates
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:29:35 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-19 02:29:35 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:29:35 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:29:35 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-19 02:29:35 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:29:35 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-19 02:29:35 DEBUG [main]: Building property marriageCertificateId
2021-12-19 02:29:35 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for active
2021-12-19 02:29:35 DEBUG [main]: Building property active
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for endDate
2021-12-19 02:29:35 DEBUG [main]: Building property endDate
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Building property husband
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:29:35 DEBUG [main]: Building property issueDate
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:29:35 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-19 02:29:35 DEBUG [main]: building SimpleValue for number
2021-12-19 02:29:35 DEBUG [main]: Building property number
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-19 02:29:35 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-19 02:29:35 DEBUG [main]: Building property wife
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for active
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:29:35 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:29:35 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-19 02:29:35 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-19 02:29:35 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-19 02:29:35 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-19 02:29:35 DEBUG [main]: Building property birthCertificate
2021-12-19 02:29:35 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-19 02:29:35 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-19 02:29:35 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-19 02:29:35 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-19 02:29:35 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-19 02:29:35 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:29:35 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-19 02:29:35 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-19 02:29:35 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-19 02:29:35 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:29:35 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:29:35 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-19 02:29:35 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:29:35 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-19 02:29:35 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:29:35 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:29:35 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-19 02:29:35 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-19 02:29:35 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-19 02:29:35 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:29:35 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:29:35 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-19 02:29:35 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:29:35 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-19 02:29:35 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:29:35 DEBUG [main]: Processing association property references
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:29:35 DEBUG [main]: Processing association property references
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:29:35 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:29:36 DEBUG [main]: Building session factory
2021-12-19 02:29:36 DEBUG [main]: SessionFactory name : null
2021-12-19 02:29:36 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-19 02:29:36 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-19 02:29:36 DEBUG [main]: Statistics: disabled
2021-12-19 02:29:36 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-19 02:29:36 DEBUG [main]: Default entity-mode: pojo
2021-12-19 02:29:36 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-19 02:29:36 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-19 02:29:36 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-19 02:29:36 DEBUG [main]: Default batch fetch size: -1
2021-12-19 02:29:36 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-19 02:29:36 DEBUG [main]: Default null ordering: NONE
2021-12-19 02:29:36 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-19 02:29:36 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-19 02:29:36 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-19 02:29:36 DEBUG [main]: JTA Track by Thread: enabled
2021-12-19 02:29:36 DEBUG [main]: Query language substitutions: {}
2021-12-19 02:29:36 DEBUG [main]: Named query checking : enabled
2021-12-19 02:29:36 DEBUG [main]: Second-level cache: disabled
2021-12-19 02:29:36 DEBUG [main]: Second-level query cache: disabled
2021-12-19 02:29:36 DEBUG [main]: Second-level query cache factory: null
2021-12-19 02:29:36 DEBUG [main]: Second-level cache region prefix: null
2021-12-19 02:29:36 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-19 02:29:36 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-19 02:29:36 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-19 02:29:36 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-19 02:29:36 DEBUG [main]: JDBC batch size: 15
2021-12-19 02:29:36 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-19 02:29:36 DEBUG [main]: Scrollable result sets: enabled
2021-12-19 02:29:36 DEBUG [main]: Wrap result sets: disabled
2021-12-19 02:29:36 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-19 02:29:36 DEBUG [main]: JDBC result set fetch size: null
2021-12-19 02:29:36 DEBUG [main]: Connection release mode: ON_CLOSE
2021-12-19 02:29:36 DEBUG [main]: Generate SQL with comments: disabled
2021-12-19 02:29:36 DEBUG [main]: JPA compliance - query : disabled
2021-12-19 02:29:36 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-19 02:29:36 DEBUG [main]: JPA compliance - lists : disabled
2021-12-19 02:29:36 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-19 02:29:36 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:29:36 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:29:36 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:29:36 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:29:36 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:29:36 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:29:36 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-19 02:29:36 DEBUG [main]: Instantiating session factory with properties: {java.specification.version=17, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-orm/5.3.14/spring-orm-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jdbc/5.3.14/spring-jdbc-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-tx/5.3.14/spring-tx-5.3.14.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=17, os.name=Mac OS X, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=register.start.Starter, javax.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5f69e2b, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-19 02:29:36 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-19 02:29:36 DEBUG [main]: Instantiated session factory
2021-12-19 02:29:36 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b329bbd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@94e51e8]
2021-12-19 02:29:36 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:29:36 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:29:36 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:29:36 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:29:36 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:29:36 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:29:36 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:29:36 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:29:36 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:29:36 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:29:37 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:29:37 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:29:37 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-19 02:29:37 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-19 02:29:37 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-19 02:29:37 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:29:37 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-19 02:29:37 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:29:37 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-19 02:29:37 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:29:37 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-19 02:29:37 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:29:37 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-19 02:29:37 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-19 02:29:37 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:29:37 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-19 02:29:37 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-19 02:29:37 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:29:37 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:29:37 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@706ceca6]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67fa5045]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cfd1075]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@604d23fa]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:29:37 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-19 02:29:37 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-19 02:29:37 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-19 02:29:37 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-19 02:29:37 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:29:37 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-19 02:29:37 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-19 02:29:37 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c1a8f0f]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7730ef88]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-19 02:29:37 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-19 02:29:37 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-19 02:29:37 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:29:37 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-19 02:29:37 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-19 02:29:37 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:29:37 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:29:37 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f5a02e]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e87ef9e]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e3b0369]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45843650]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72443081]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33feda48]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6588b715]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a3b42]
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:29:37 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-19 02:29:37 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-19 02:29:37 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-19 02:29:37 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:29:37 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c9d3d0]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@373052b5]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67e0ff3a]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b2bf745]
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-19 02:29:37 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-19 02:29:37 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-19 02:29:37 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:29:37 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-19 02:29:37 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-19 02:29:37 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:29:37 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:29:37 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@704067c6]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6002e944]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588545ac]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b08772d]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78a8978a]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f171912]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d4d8579]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159424e2]
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:29:37 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-19 02:29:37 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-19 02:29:37 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-19 02:29:37 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-19 02:29:37 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29bcf51d]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f238e4f]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b24087d]
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-19 02:29:37 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3946075]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@122635ef]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:29:37 DEBUG [main]: Property path deemed to be circular : person
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-19 02:29:37 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@581b1c08]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c240cf2]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:29:37 DEBUG [main]: Property path deemed to be circular : father
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5809fa26]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64763e49]
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:29:37 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23468512]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cd7630]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3caafa67]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:29:37 DEBUG [main]: Property path deemed to be circular : mother
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e546734]
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:29:37 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53747c4a]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b0d1fa]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:29:37 DEBUG [main]: Property path deemed to be circular : husband
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b475e2]
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:29:37 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e9474f]
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c61eda5]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:29:37 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@131a7516]
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:29:37 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:29:37 DEBUG [main]: Property path deemed to be circular : wife
2021-12-19 02:29:37 DEBUG [main]: Building LoadPlan...
2021-12-19 02:29:37 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:29:37 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:29:37 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-19 02:29:37 DEBUG [main]: No actions specified; doing nothing
2021-12-19 02:29:37 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-19 02:29:37 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-19 02:29:37 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:29:37 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:29:37 DEBUG [main]: Checking 1 named HQL queries
2021-12-19 02:29:37 DEBUG [main]: Checking named query: Person.findPersons
2021-12-19 02:29:37 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-19 02:29:37 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3c25cfe1
2021-12-19 02:29:37 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:29:37 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:29:37 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-19 02:29:37 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-19 02:29:37 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-19 02:29:37 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:29:37 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-19 02:29:37 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-19 02:29:37 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-19 02:29:37 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-19 02:29:37 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-19 02:29:37 DEBUG [main]: Resolved : p.passports -> .
2021-12-19 02:29:37 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-19 02:29:37 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:29:37 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-19 02:29:37 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-19 02:29:37 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-19 02:29:37 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-19 02:29:37 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-19 02:29:37 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-19 02:29:37 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:29:37 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:29:37 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:29:37 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-19 02:29:37 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-19 02:29:37 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-19 02:29:37 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-19 02:29:37 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-19 02:29:37 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-19 02:29:37 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-19 02:29:37 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-19 02:29:37 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@5aa6202e}

2021-12-19 02:29:37 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:29:37 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:29:37 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-19 02:29:37 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:29:37 DEBUG [main]: Checking 0 named SQL queries
2021-12-19 02:29:37 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:29:37 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a90e2c1
2021-12-19 02:29:37 DEBUG [main]: Registering SessionFactory: c25140ce-0014-4679-b957-4b95ee768655 (<unnamed>)
2021-12-19 02:29:37 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-19 02:29:37 INFO  [main]: Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-19 02:29:37 DEBUG [main]: Creating shared instance of singleton bean 'marriageService'
2021-12-19 02:29:37 DEBUG [main]: Creating shared instance of singleton bean 'buildPersonDao'
2021-12-19 02:29:37 DEBUG [main]: Creating shared instance of singleton bean 'marriageConfig'
2021-12-19 02:29:37 INFO  [main]: HHH000318: Could not find any META-INF/persistence.xml file in the classpath
2021-12-19 02:29:37 DEBUG [main]: Located and parsed 0 persistence units; checking each
2021-12-19 02:29:37 DEBUG [main]: Found no matching persistence units
2021-12-19 02:29:37 WARN  [main]: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'marriageService' defined in file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/business/MarriageManager.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'buildPersonDao' defined in register.config.MarriageConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [register.dao.PersonDao]: Factory method 'buildPersonDao' threw exception; nested exception is javax.persistence.PersistenceException: No Persistence provider for EntityManager named persistence
2021-12-19 02:29:37 INFO  [main]: Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-19 02:29:37 DEBUG [main]: HHH000031: Closing
2021-12-19 02:29:37 DEBUG [main]: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5600a5da] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@94e51e8]
2021-12-19 02:29:37 DEBUG [main]: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-12-19 02:29:37 DEBUG [main]: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-12-19 02:31:27 DEBUG [main]: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@382db087
2021-12-19 02:31:28 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/business/MarriageManager.class]
2021-12-19 02:31:28 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/config/MarriageConfig.class]
2021-12-19 02:31:28 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/dao/MarriageDao.class]
2021-12-19 02:31:28 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/rest/MarriageController.class]
2021-12-19 02:31:28 DEBUG [main]: Loaded 11 bean definitions from class path resource [springContext.xml]
2021-12-19 02:31:28 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2021-12-19 02:31:28 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2021-12-19 02:31:28 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2021-12-19 02:31:28 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2021-12-19 02:31:28 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2021-12-19 02:31:28 DEBUG [main]: Creating shared instance of singleton bean 'emf'
2021-12-19 02:31:28 DEBUG [main]: Creating shared instance of singleton bean 'dataSource'
2021-12-19 02:31:29 DEBUG [main]: Loaded JDBC driver: org.postgresql.Driver
2021-12-19 02:31:29 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-19 02:31:29 DEBUG [main]: Building JPA container EntityManagerFactory for persistence unit 'default'
2021-12-19 02:31:29 DEBUG [main]: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@67424e82
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		register.domain.BirthCertificate
		register.domain.MarriageCertificate
		register.domain.Passport
		register.domain.Person
		register.domain.PersonFemale
		register.domain.PersonMale]
	Mapping files names []
	Properties []
2021-12-19 02:31:29 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-19 02:31:29 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-19 02:31:29 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-19 02:31:29 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-19 02:31:29 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-19 02:31:29 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-19 02:31:29 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-19 02:31:29 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-19 02:31:29 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-19 02:31:29 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:31:29 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:31:29 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f4d9395
2021-12-19 02:31:29 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@79c5636f
2021-12-19 02:31:29 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@757f675c
2021-12-19 02:31:29 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:31:29 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:31:29 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:31:29 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:31:29 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:31:29 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:31:29 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:31:29 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:31:29 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:31:29 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:31:29 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:31:29 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:31:29 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:31:29 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:31:29 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15f193b8
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15f193b8
2021-12-19 02:31:29 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d140a7
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d140a7
2021-12-19 02:31:29 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@7ea4d397
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@7ea4d397
2021-12-19 02:31:29 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@503fbbc6
2021-12-19 02:31:29 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a325eb9
2021-12-19 02:31:29 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@1d81e101
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d81e101
2021-12-19 02:31:29 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@3163987e
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3163987e
2021-12-19 02:31:29 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@7d0332e1
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7d0332e1
2021-12-19 02:31:29 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1761de10
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1761de10
2021-12-19 02:31:29 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1532c619
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1532c619
2021-12-19 02:31:29 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@778ca8ef
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@778ca8ef
2021-12-19 02:31:29 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@435ce306
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@435ce306
2021-12-19 02:31:29 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@75699e35
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@75699e35
2021-12-19 02:31:29 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64040287
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64040287
2021-12-19 02:31:29 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@60c16548
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@60c16548
2021-12-19 02:31:29 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@452c8a40
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@452c8a40
2021-12-19 02:31:29 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:31:29 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76adb233
2021-12-19 02:31:29 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:31:29 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@138a7441
2021-12-19 02:31:29 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@42cc13a0
2021-12-19 02:31:29 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@4ad4936c
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4ad4936c
2021-12-19 02:31:29 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@5d28bcd5
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d28bcd5
2021-12-19 02:31:29 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@502f8b57
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@502f8b57
2021-12-19 02:31:29 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@323659f8
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@323659f8
2021-12-19 02:31:29 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:31:29 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@790132f7
2021-12-19 02:31:29 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:31:29 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:31:29 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:31:29 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:31:29 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:31:29 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:31:29 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@7e0b9178
2021-12-19 02:31:29 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@62a8fd44
2021-12-19 02:31:29 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:31:29 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:31:29 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:31:29 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:31:29 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:31:29 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:31:29 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@4dd94a58
2021-12-19 02:31:29 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@72be135f
2021-12-19 02:31:29 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@27cbfddf
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@27cbfddf
2021-12-19 02:31:29 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@383f3558
2021-12-19 02:31:29 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@56febdc
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56febdc
2021-12-19 02:31:29 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@5488b5c5
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5488b5c5
2021-12-19 02:31:29 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54534abf
2021-12-19 02:31:29 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69e308c6
2021-12-19 02:31:29 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@37d00a23
2021-12-19 02:31:29 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@7a26928a
2021-12-19 02:31:29 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a26928a
2021-12-19 02:31:29 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d0ec63
2021-12-19 02:31:29 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a5c128
2021-12-19 02:31:29 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73eb8672
2021-12-19 02:31:29 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5942ee04
2021-12-19 02:31:29 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e76a2bb
2021-12-19 02:31:29 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@757194dc
2021-12-19 02:31:29 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a865416
2021-12-19 02:31:29 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@14faa38c
2021-12-19 02:31:29 DEBUG [main]: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923] into BootstrapContext; was [null]
2021-12-19 02:31:29 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923) [was null]
2021-12-19 02:31:29 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@53667cbe] into BootstrapContext; was [null]
2021-12-19 02:31:29 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d3e6d34] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6eafb10e]
2021-12-19 02:31:29 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923]
2021-12-19 02:31:29 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:31:29 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-19 02:31:29 DEBUG [main]: Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 02:31:30 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-19 02:31:30 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-19 02:31:30 DEBUG [main]: JDBC version : 4.2
2021-12-19 02:31:30 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-19 02:31:30 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-19 02:31:30 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-19 02:31:30 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7063686f
2021-12-19 02:31:30 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7063686f
2021-12-19 02:31:30 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:31:30 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53dad875] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f780a86]
2021-12-19 02:31:30 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-19 02:31:30 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-19 02:31:30 DEBUG [main]: Import with entity name Person
2021-12-19 02:31:30 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:31:30 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for personId
2021-12-19 02:31:30 DEBUG [main]: Building property personId
2021-12-19 02:31:30 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-19 02:31:30 DEBUG [main]: Building property dateOfBirth
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for firstName
2021-12-19 02:31:30 DEBUG [main]: Building property firstName
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for lasName
2021-12-19 02:31:30 DEBUG [main]: Building property lasName
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:31:30 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-19 02:31:30 DEBUG [main]: Building property passports
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for patronymic
2021-12-19 02:31:30 DEBUG [main]: Building property patronymic
2021-12-19 02:31:30 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:31:30 DEBUG [main]: Import with entity name Passport
2021-12-19 02:31:30 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:31:30 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for passportId
2021-12-19 02:31:30 DEBUG [main]: Building property passportId
2021-12-19 02:31:30 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:31:30 DEBUG [main]: Building property issueDate
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-19 02:31:30 DEBUG [main]: Building property issueDepartment
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for number
2021-12-19 02:31:30 DEBUG [main]: Building property number
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Building property person
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for seria
2021-12-19 02:31:30 DEBUG [main]: Building property seria
2021-12-19 02:31:30 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-19 02:31:30 DEBUG [main]: Import with entity name PersonFemale
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:31:30 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-19 02:31:30 DEBUG [main]: Building property birthCertificates
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:31:30 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:31:30 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:31:30 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:31:30 DEBUG [main]: Import with entity name BirthCertificate
2021-12-19 02:31:30 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:31:30 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-19 02:31:30 DEBUG [main]: Building property birthCertificateId
2021-12-19 02:31:30 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Building property father
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:31:30 DEBUG [main]: Building property issueDate
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Building property mother
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for number
2021-12-19 02:31:30 DEBUG [main]: Building property number
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Building property person
2021-12-19 02:31:30 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-19 02:31:30 DEBUG [main]: Import with entity name PersonMale
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:31:30 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-19 02:31:30 DEBUG [main]: Building property birthCertificates
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:31:30 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-19 02:31:30 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:31:30 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:31:30 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-19 02:31:30 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:31:30 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-19 02:31:30 DEBUG [main]: Building property marriageCertificateId
2021-12-19 02:31:30 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for active
2021-12-19 02:31:30 DEBUG [main]: Building property active
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for endDate
2021-12-19 02:31:30 DEBUG [main]: Building property endDate
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Building property husband
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:31:30 DEBUG [main]: Building property issueDate
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:31:30 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-19 02:31:30 DEBUG [main]: building SimpleValue for number
2021-12-19 02:31:30 DEBUG [main]: Building property number
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-19 02:31:30 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-19 02:31:30 DEBUG [main]: Building property wife
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for active
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:31:30 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:31:30 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-19 02:31:30 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-19 02:31:30 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-19 02:31:30 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-19 02:31:30 DEBUG [main]: Building property birthCertificate
2021-12-19 02:31:30 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-19 02:31:30 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-19 02:31:30 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-19 02:31:30 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-19 02:31:30 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-19 02:31:30 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:31:30 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-19 02:31:30 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-19 02:31:30 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-19 02:31:30 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:31:30 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:31:30 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-19 02:31:30 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:31:30 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-19 02:31:30 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:31:30 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:31:30 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-19 02:31:30 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-19 02:31:30 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-19 02:31:30 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:31:30 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:31:30 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-19 02:31:30 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:31:30 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-19 02:31:30 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:31:30 DEBUG [main]: Processing association property references
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:31:30 DEBUG [main]: Processing association property references
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:31:30 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:31:30 DEBUG [main]: Building session factory
2021-12-19 02:31:30 DEBUG [main]: SessionFactory name : null
2021-12-19 02:31:30 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-19 02:31:30 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-19 02:31:30 DEBUG [main]: Statistics: disabled
2021-12-19 02:31:30 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-19 02:31:30 DEBUG [main]: Default entity-mode: pojo
2021-12-19 02:31:30 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-19 02:31:30 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-19 02:31:30 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-19 02:31:30 DEBUG [main]: Default batch fetch size: -1
2021-12-19 02:31:30 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-19 02:31:30 DEBUG [main]: Default null ordering: NONE
2021-12-19 02:31:30 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-19 02:31:30 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-19 02:31:30 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-19 02:31:30 DEBUG [main]: JTA Track by Thread: enabled
2021-12-19 02:31:30 DEBUG [main]: Query language substitutions: {}
2021-12-19 02:31:30 DEBUG [main]: Named query checking : enabled
2021-12-19 02:31:30 DEBUG [main]: Second-level cache: disabled
2021-12-19 02:31:30 DEBUG [main]: Second-level query cache: disabled
2021-12-19 02:31:30 DEBUG [main]: Second-level query cache factory: null
2021-12-19 02:31:30 DEBUG [main]: Second-level cache region prefix: null
2021-12-19 02:31:30 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-19 02:31:30 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-19 02:31:30 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-19 02:31:30 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-19 02:31:30 DEBUG [main]: JDBC batch size: 15
2021-12-19 02:31:30 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-19 02:31:30 DEBUG [main]: Scrollable result sets: enabled
2021-12-19 02:31:30 DEBUG [main]: Wrap result sets: disabled
2021-12-19 02:31:30 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-19 02:31:30 DEBUG [main]: JDBC result set fetch size: null
2021-12-19 02:31:30 DEBUG [main]: Connection release mode: ON_CLOSE
2021-12-19 02:31:30 DEBUG [main]: Generate SQL with comments: disabled
2021-12-19 02:31:30 DEBUG [main]: JPA compliance - query : disabled
2021-12-19 02:31:30 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-19 02:31:30 DEBUG [main]: JPA compliance - lists : disabled
2021-12-19 02:31:30 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-19 02:31:30 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:31:30 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:31:30 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:31:30 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:31:30 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:31:30 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:31:30 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-19 02:31:30 DEBUG [main]: Instantiating session factory with properties: {java.specification.version=17, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-orm/5.3.14/spring-orm-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jdbc/5.3.14/spring-jdbc-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-tx/5.3.14/spring-tx-5.3.14.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=17, os.name=Mac OS X, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=register.start.Starter, javax.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@59696551, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-19 02:31:30 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-19 02:31:30 DEBUG [main]: Instantiated session factory
2021-12-19 02:31:30 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53dad875] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7d3c09ec]
2021-12-19 02:31:30 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:31:30 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:31:30 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:31:30 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:31:30 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:31:30 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:31:31 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:31:31 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:31:31 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:31:31 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:31:31 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:31:31 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:31:31 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-19 02:31:31 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-19 02:31:31 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-19 02:31:31 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:31:31 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-19 02:31:31 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:31:31 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-19 02:31:31 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:31:31 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-19 02:31:31 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:31:31 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-19 02:31:31 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-19 02:31:31 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:31:31 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-19 02:31:31 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-19 02:31:31 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:31:31 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:31:31 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5700c9db]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@270a620]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d7fd41]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45117dd]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:31:31 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-19 02:31:31 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-19 02:31:31 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-19 02:31:31 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-19 02:31:31 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:31:31 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-19 02:31:31 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-19 02:31:31 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6efa4f]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b357eb6]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-19 02:31:31 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-19 02:31:31 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-19 02:31:31 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:31:31 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-19 02:31:31 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-19 02:31:31 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:31:31 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:31:31 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64bebd55]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3730f716]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7730ef88]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f5a02e]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e3f2908]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e87ef9e]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e3b0369]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45843650]
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:31:31 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-19 02:31:31 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-19 02:31:31 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-19 02:31:31 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:31:31 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72443081]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6588b715]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a3b42]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c9d3d0]
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-19 02:31:31 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-19 02:31:31 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-19 02:31:31 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:31:31 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-19 02:31:31 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-19 02:31:31 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:31:31 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:31:31 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bf26df]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f9e08d4]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@390037e7]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@704067c6]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f4596d0]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6002e944]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@588545ac]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b08772d]
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:31:31 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-19 02:31:31 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-19 02:31:31 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-19 02:31:31 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-19 02:31:31 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a8978a]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d4d8579]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159424e2]
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-19 02:31:31 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4293e066]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d13960e]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:31:31 DEBUG [main]: Property path deemed to be circular : person
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-19 02:31:31 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@125d47c4]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@193bb809]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:31:31 DEBUG [main]: Property path deemed to be circular : father
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@581b1c08]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c240cf2]
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:31:31 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78b7f805]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f2466c]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23468512]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:31:31 DEBUG [main]: Property path deemed to be circular : mother
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cd7630]
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:31:31 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e8279e5]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b53840a]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:31:31 DEBUG [main]: Property path deemed to be circular : husband
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53747c4a]
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:31:31 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64b0d1fa]
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2276c9]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:31:31 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e9474f]
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:31:31 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:31:31 DEBUG [main]: Property path deemed to be circular : wife
2021-12-19 02:31:31 DEBUG [main]: Building LoadPlan...
2021-12-19 02:31:31 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:31:31 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:31:31 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-19 02:31:31 DEBUG [main]: No actions specified; doing nothing
2021-12-19 02:31:31 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-19 02:31:31 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-19 02:31:31 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:31:31 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:31:31 DEBUG [main]: Checking 1 named HQL queries
2021-12-19 02:31:31 DEBUG [main]: Checking named query: Person.findPersons
2021-12-19 02:31:31 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-19 02:31:31 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@531ec978
2021-12-19 02:31:31 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:31:31 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:31:31 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-19 02:31:31 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-19 02:31:31 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-19 02:31:31 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:31:31 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-19 02:31:31 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-19 02:31:31 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-19 02:31:31 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-19 02:31:31 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-19 02:31:31 DEBUG [main]: Resolved : p.passports -> .
2021-12-19 02:31:31 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-19 02:31:31 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:31:31 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-19 02:31:31 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-19 02:31:31 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-19 02:31:31 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-19 02:31:31 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-19 02:31:31 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-19 02:31:31 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:31:31 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:31:31 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:31:31 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-19 02:31:31 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-19 02:31:31 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-19 02:31:31 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-19 02:31:31 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-19 02:31:31 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-19 02:31:31 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-19 02:31:31 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-19 02:31:31 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@5aa6202e}

2021-12-19 02:31:31 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:31:31 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:31:31 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-19 02:31:31 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:31:31 DEBUG [main]: Checking 0 named SQL queries
2021-12-19 02:31:31 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:31:31 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a090f62
2021-12-19 02:31:31 DEBUG [main]: Registering SessionFactory: 363554ac-b81d-46d7-a308-8b3d63ba2062 (<unnamed>)
2021-12-19 02:31:31 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-19 02:31:31 INFO  [main]: Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-19 02:31:31 DEBUG [main]: Creating shared instance of singleton bean 'marriageService'
2021-12-19 02:31:31 DEBUG [main]: Creating shared instance of singleton bean 'buildPersonDao'
2021-12-19 02:31:31 DEBUG [main]: Creating shared instance of singleton bean 'marriageConfig'
2021-12-19 02:31:31 DEBUG [main]: Autowiring by type from bean name 'marriageService' via constructor to bean named 'buildPersonDao'
2021-12-19 02:31:31 DEBUG [main]: Creating shared instance of singleton bean 'marriageDao'
2021-12-19 02:31:31 DEBUG [main]: Found key 'test.value' in PropertySource 'class path resource [register.properties]' with value of type String
2021-12-19 02:31:31 DEBUG [main]: Creating shared instance of singleton bean 'controller'
2021-12-19 02:31:31 INFO  [main]: findMarriageCertificate called
2021-12-19 02:31:31 INFO  [main]: MarriageManager findMarriageCertificate called
2021-12-19 02:31:31 INFO  [main]: findMarriageCertificate called:SIMPLE_VALUE
2021-12-19 02:32:20 DEBUG [main]: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@382db087
2021-12-19 02:32:20 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/business/MarriageManager.class]
2021-12-19 02:32:20 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/config/MarriageConfig.class]
2021-12-19 02:32:20 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/dao/MarriageDao.class]
2021-12-19 02:32:20 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/rest/MarriageController.class]
2021-12-19 02:32:20 DEBUG [main]: Loaded 11 bean definitions from class path resource [springContext.xml]
2021-12-19 02:32:20 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2021-12-19 02:32:20 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2021-12-19 02:32:20 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2021-12-19 02:32:20 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2021-12-19 02:32:20 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2021-12-19 02:32:20 DEBUG [main]: Creating shared instance of singleton bean 'emf'
2021-12-19 02:32:21 DEBUG [main]: Creating shared instance of singleton bean 'dataSource'
2021-12-19 02:32:21 DEBUG [main]: Loaded JDBC driver: org.postgresql.Driver
2021-12-19 02:32:21 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-19 02:32:21 DEBUG [main]: Building JPA container EntityManagerFactory for persistence unit 'default'
2021-12-19 02:32:21 DEBUG [main]: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@67424e82
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		register.domain.BirthCertificate
		register.domain.MarriageCertificate
		register.domain.Passport
		register.domain.Person
		register.domain.PersonFemale
		register.domain.PersonMale]
	Mapping files names []
	Properties []
2021-12-19 02:32:21 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-19 02:32:21 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-19 02:32:21 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-19 02:32:21 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-19 02:32:21 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-19 02:32:21 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-19 02:32:21 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-19 02:32:21 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-19 02:32:21 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-19 02:32:21 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:32:21 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:32:21 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f4d9395
2021-12-19 02:32:21 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@79c5636f
2021-12-19 02:32:21 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@757f675c
2021-12-19 02:32:21 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:32:21 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:32:21 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:32:21 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:32:21 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:32:21 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:32:21 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:32:21 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:32:21 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:32:21 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:32:21 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:32:21 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:32:21 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:32:21 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:32:21 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15f193b8
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15f193b8
2021-12-19 02:32:21 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d140a7
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d140a7
2021-12-19 02:32:21 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@7ea4d397
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@7ea4d397
2021-12-19 02:32:21 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@503fbbc6
2021-12-19 02:32:21 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a325eb9
2021-12-19 02:32:21 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@1d81e101
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d81e101
2021-12-19 02:32:21 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@3163987e
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3163987e
2021-12-19 02:32:21 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@7d0332e1
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7d0332e1
2021-12-19 02:32:21 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1761de10
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1761de10
2021-12-19 02:32:21 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1532c619
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1532c619
2021-12-19 02:32:21 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@778ca8ef
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@778ca8ef
2021-12-19 02:32:21 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@435ce306
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@435ce306
2021-12-19 02:32:21 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@75699e35
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@75699e35
2021-12-19 02:32:21 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64040287
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64040287
2021-12-19 02:32:21 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@60c16548
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@60c16548
2021-12-19 02:32:21 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@452c8a40
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@452c8a40
2021-12-19 02:32:21 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:32:21 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76adb233
2021-12-19 02:32:21 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:32:21 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@138a7441
2021-12-19 02:32:21 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@42cc13a0
2021-12-19 02:32:21 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@4ad4936c
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4ad4936c
2021-12-19 02:32:21 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@5d28bcd5
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d28bcd5
2021-12-19 02:32:21 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@502f8b57
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@502f8b57
2021-12-19 02:32:21 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@323659f8
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@323659f8
2021-12-19 02:32:21 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:32:21 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@790132f7
2021-12-19 02:32:21 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:32:21 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:32:21 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:32:21 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:32:21 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:32:21 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:32:21 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@7e0b9178
2021-12-19 02:32:21 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@62a8fd44
2021-12-19 02:32:21 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:32:21 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:32:21 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:32:21 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:32:21 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:32:21 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:32:21 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@4dd94a58
2021-12-19 02:32:21 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@72be135f
2021-12-19 02:32:21 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@27cbfddf
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@27cbfddf
2021-12-19 02:32:21 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@383f3558
2021-12-19 02:32:21 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@56febdc
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56febdc
2021-12-19 02:32:21 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@5488b5c5
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5488b5c5
2021-12-19 02:32:21 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54534abf
2021-12-19 02:32:21 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69e308c6
2021-12-19 02:32:21 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@37d00a23
2021-12-19 02:32:21 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@7a26928a
2021-12-19 02:32:21 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a26928a
2021-12-19 02:32:21 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d0ec63
2021-12-19 02:32:21 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a5c128
2021-12-19 02:32:21 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73eb8672
2021-12-19 02:32:21 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5942ee04
2021-12-19 02:32:21 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e76a2bb
2021-12-19 02:32:21 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@757194dc
2021-12-19 02:32:21 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a865416
2021-12-19 02:32:21 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@14faa38c
2021-12-19 02:32:21 DEBUG [main]: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923] into BootstrapContext; was [null]
2021-12-19 02:32:21 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923) [was null]
2021-12-19 02:32:21 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@53667cbe] into BootstrapContext; was [null]
2021-12-19 02:32:21 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d3e6d34] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6eafb10e]
2021-12-19 02:32:21 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923]
2021-12-19 02:32:21 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:32:21 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-19 02:32:21 DEBUG [main]: Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 02:32:22 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-19 02:32:22 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-19 02:32:22 DEBUG [main]: JDBC version : 4.2
2021-12-19 02:32:22 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-19 02:32:22 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-19 02:32:22 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-19 02:32:22 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1eb2d371
2021-12-19 02:32:22 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1eb2d371
2021-12-19 02:32:22 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:32:22 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1046498a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@243f003c]
2021-12-19 02:32:22 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-19 02:32:22 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-19 02:32:22 DEBUG [main]: Import with entity name Person
2021-12-19 02:32:22 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:32:22 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for personId
2021-12-19 02:32:22 DEBUG [main]: Building property personId
2021-12-19 02:32:22 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-19 02:32:22 DEBUG [main]: Building property dateOfBirth
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for firstName
2021-12-19 02:32:22 DEBUG [main]: Building property firstName
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for lasName
2021-12-19 02:32:22 DEBUG [main]: Building property lasName
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:32:22 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-19 02:32:22 DEBUG [main]: Building property passports
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for patronymic
2021-12-19 02:32:22 DEBUG [main]: Building property patronymic
2021-12-19 02:32:22 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:32:22 DEBUG [main]: Import with entity name Passport
2021-12-19 02:32:22 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:32:22 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for passportId
2021-12-19 02:32:22 DEBUG [main]: Building property passportId
2021-12-19 02:32:22 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:32:22 DEBUG [main]: Building property issueDate
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-19 02:32:22 DEBUG [main]: Building property issueDepartment
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for number
2021-12-19 02:32:22 DEBUG [main]: Building property number
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Building property person
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for seria
2021-12-19 02:32:22 DEBUG [main]: Building property seria
2021-12-19 02:32:22 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-19 02:32:22 DEBUG [main]: Import with entity name PersonFemale
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:32:22 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-19 02:32:22 DEBUG [main]: Building property birthCertificates
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:32:22 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:32:22 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:32:22 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:32:22 DEBUG [main]: Import with entity name BirthCertificate
2021-12-19 02:32:22 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:32:22 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-19 02:32:22 DEBUG [main]: Building property birthCertificateId
2021-12-19 02:32:22 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Building property father
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:32:22 DEBUG [main]: Building property issueDate
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Building property mother
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for number
2021-12-19 02:32:22 DEBUG [main]: Building property number
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Building property person
2021-12-19 02:32:22 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-19 02:32:22 DEBUG [main]: Import with entity name PersonMale
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:32:22 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-19 02:32:22 DEBUG [main]: Building property birthCertificates
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:32:22 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-19 02:32:22 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:32:22 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:32:22 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-19 02:32:22 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:32:22 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-19 02:32:22 DEBUG [main]: Building property marriageCertificateId
2021-12-19 02:32:22 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for active
2021-12-19 02:32:22 DEBUG [main]: Building property active
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for endDate
2021-12-19 02:32:22 DEBUG [main]: Building property endDate
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Building property husband
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:32:22 DEBUG [main]: Building property issueDate
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:32:22 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-19 02:32:22 DEBUG [main]: building SimpleValue for number
2021-12-19 02:32:22 DEBUG [main]: Building property number
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-19 02:32:22 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-19 02:32:22 DEBUG [main]: Building property wife
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for active
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:32:22 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:32:22 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-19 02:32:22 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-19 02:32:22 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-19 02:32:22 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-19 02:32:22 DEBUG [main]: Building property birthCertificate
2021-12-19 02:32:22 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-19 02:32:22 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-19 02:32:22 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-19 02:32:22 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-19 02:32:22 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-19 02:32:22 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:32:22 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-19 02:32:22 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-19 02:32:22 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-19 02:32:22 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:32:22 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:32:22 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-19 02:32:22 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:32:22 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-19 02:32:22 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:32:22 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:32:22 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-19 02:32:22 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-19 02:32:22 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-19 02:32:22 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:32:22 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:32:22 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-19 02:32:22 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:32:22 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-19 02:32:22 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:32:22 DEBUG [main]: Processing association property references
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:32:22 DEBUG [main]: Processing association property references
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:32:22 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:32:22 DEBUG [main]: Building session factory
2021-12-19 02:32:22 DEBUG [main]: SessionFactory name : null
2021-12-19 02:32:22 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-19 02:32:22 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-19 02:32:22 DEBUG [main]: Statistics: disabled
2021-12-19 02:32:22 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-19 02:32:22 DEBUG [main]: Default entity-mode: pojo
2021-12-19 02:32:22 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-19 02:32:22 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-19 02:32:22 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-19 02:32:22 DEBUG [main]: Default batch fetch size: -1
2021-12-19 02:32:22 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-19 02:32:22 DEBUG [main]: Default null ordering: NONE
2021-12-19 02:32:22 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-19 02:32:22 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-19 02:32:22 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-19 02:32:22 DEBUG [main]: JTA Track by Thread: enabled
2021-12-19 02:32:22 DEBUG [main]: Query language substitutions: {}
2021-12-19 02:32:22 DEBUG [main]: Named query checking : enabled
2021-12-19 02:32:22 DEBUG [main]: Second-level cache: disabled
2021-12-19 02:32:22 DEBUG [main]: Second-level query cache: disabled
2021-12-19 02:32:22 DEBUG [main]: Second-level query cache factory: null
2021-12-19 02:32:22 DEBUG [main]: Second-level cache region prefix: null
2021-12-19 02:32:22 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-19 02:32:22 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-19 02:32:22 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-19 02:32:22 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-19 02:32:22 DEBUG [main]: JDBC batch size: 15
2021-12-19 02:32:22 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-19 02:32:22 DEBUG [main]: Scrollable result sets: enabled
2021-12-19 02:32:22 DEBUG [main]: Wrap result sets: disabled
2021-12-19 02:32:22 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-19 02:32:22 DEBUG [main]: JDBC result set fetch size: null
2021-12-19 02:32:22 DEBUG [main]: Connection release mode: ON_CLOSE
2021-12-19 02:32:22 DEBUG [main]: Generate SQL with comments: disabled
2021-12-19 02:32:22 DEBUG [main]: JPA compliance - query : disabled
2021-12-19 02:32:22 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-19 02:32:22 DEBUG [main]: JPA compliance - lists : disabled
2021-12-19 02:32:22 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-19 02:32:22 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:32:22 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:32:22 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:32:22 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:32:22 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:32:22 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:32:22 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-19 02:32:22 DEBUG [main]: Instantiating session factory with properties: {java.specification.version=17, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-orm/5.3.14/spring-orm-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jdbc/5.3.14/spring-jdbc-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-tx/5.3.14/spring-tx-5.3.14.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=17, os.name=Mac OS X, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=register.start.Starter, javax.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@64db4967, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-19 02:32:22 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-19 02:32:22 DEBUG [main]: Instantiated session factory
2021-12-19 02:32:22 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1046498a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@44b29496]
2021-12-19 02:32:22 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:32:22 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:32:22 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:32:22 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:32:22 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:32:22 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:32:23 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:32:23 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:32:23 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:32:23 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:32:23 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:32:23 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:32:23 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-19 02:32:23 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-19 02:32:23 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-19 02:32:23 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:32:23 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-19 02:32:23 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:32:23 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-19 02:32:23 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:32:23 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-19 02:32:23 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:32:23 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-19 02:32:23 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-19 02:32:23 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:32:23 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-19 02:32:23 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-19 02:32:23 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:32:23 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:32:23 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b649efa]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34451ed8]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5974b233]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc165f6]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:32:23 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-19 02:32:23 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-19 02:32:23 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-19 02:32:23 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-19 02:32:23 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:32:23 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-19 02:32:23 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-19 02:32:23 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e7adbb]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c40ffef]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-19 02:32:23 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-19 02:32:23 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-19 02:32:23 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:32:23 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-19 02:32:23 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-19 02:32:23 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:32:23 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:32:23 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@286855ea]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e3df614]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6579cdbb]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd413fb]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e1232cf]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6efa4f]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4451f60c]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b357eb6]
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:32:23 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-19 02:32:23 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-19 02:32:23 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-19 02:32:23 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:32:23 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64bebd55]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3730f716]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7730ef88]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f5a02e]
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-19 02:32:23 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-19 02:32:23 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-19 02:32:23 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:32:23 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-19 02:32:23 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-19 02:32:23 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:32:23 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:32:23 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d878b25]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@384fda47]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3663d0ba]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@575cabf0]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@433d9680]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@566e142]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2da81754]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f992a3a]
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:32:23 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-19 02:32:23 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-19 02:32:23 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-19 02:32:23 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-19 02:32:23 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bf26df]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f9e08d4]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@390037e7]
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-19 02:32:23 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6dce59e]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11381415]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:32:23 DEBUG [main]: Property path deemed to be circular : person
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-19 02:32:23 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7126e26]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@151ab2b9]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:32:23 DEBUG [main]: Property path deemed to be circular : father
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@590765c4]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19489b27]
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:32:23 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@626d2016]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d5a1588]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@193bb809]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:32:23 DEBUG [main]: Property path deemed to be circular : mother
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b018f3]
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:32:23 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20801cbb]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@581b1c08]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:32:23 DEBUG [main]: Property path deemed to be circular : husband
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f2466c]
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:32:23 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5809fa26]
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64763e49]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:32:23 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e8279e5]
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:32:23 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:32:23 DEBUG [main]: Property path deemed to be circular : wife
2021-12-19 02:32:23 DEBUG [main]: Building LoadPlan...
2021-12-19 02:32:23 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:32:23 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:32:23 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-19 02:32:23 DEBUG [main]: No actions specified; doing nothing
2021-12-19 02:32:23 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-19 02:32:23 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-19 02:32:23 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:32:23 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:32:23 DEBUG [main]: Checking 1 named HQL queries
2021-12-19 02:32:23 DEBUG [main]: Checking named query: Person.findPersons
2021-12-19 02:32:23 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-19 02:32:23 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6f1c3f18
2021-12-19 02:32:23 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:32:23 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:32:23 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-19 02:32:23 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-19 02:32:23 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-19 02:32:23 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:32:23 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-19 02:32:23 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-19 02:32:23 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-19 02:32:23 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-19 02:32:23 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-19 02:32:23 DEBUG [main]: Resolved : p.passports -> .
2021-12-19 02:32:23 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-19 02:32:23 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:32:23 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-19 02:32:23 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-19 02:32:23 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-19 02:32:23 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-19 02:32:23 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-19 02:32:23 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-19 02:32:23 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:32:23 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:32:23 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:32:23 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-19 02:32:23 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-19 02:32:23 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-19 02:32:23 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-19 02:32:23 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-19 02:32:23 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-19 02:32:23 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-19 02:32:23 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-19 02:32:23 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@5aa6202e}

2021-12-19 02:32:23 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:32:23 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:32:23 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-19 02:32:23 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:32:23 DEBUG [main]: Checking 0 named SQL queries
2021-12-19 02:32:23 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:32:23 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@43935e9c
2021-12-19 02:32:23 DEBUG [main]: Registering SessionFactory: 1766e64d-2132-4f30-b374-1ce4fda4330a (<unnamed>)
2021-12-19 02:32:23 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-19 02:32:23 INFO  [main]: Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-19 02:32:23 DEBUG [main]: Creating shared instance of singleton bean 'marriageService'
2021-12-19 02:32:23 DEBUG [main]: Creating shared instance of singleton bean 'marriageDao'
2021-12-19 02:32:23 DEBUG [main]: Found key 'test.value' in PropertySource 'class path resource [register.properties]' with value of type String
2021-12-19 02:32:23 DEBUG [main]: Creating shared instance of singleton bean 'buildPersonDao'
2021-12-19 02:32:23 DEBUG [main]: Creating shared instance of singleton bean 'marriageConfig'
2021-12-19 02:32:23 DEBUG [main]: Creating shared instance of singleton bean 'controller'
2021-12-19 02:32:24 INFO  [main]: findMarriageCertificate called
2021-12-19 02:32:24 INFO  [main]: MarriageManager findMarriageCertificate called
2021-12-19 02:32:24 INFO  [main]: findMarriageCertificate called:SIMPLE_VALUE
2021-12-19 02:33:01 DEBUG [main]: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@382db087
2021-12-19 02:33:01 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/business/MarriageManager.class]
2021-12-19 02:33:01 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/config/MarriageConfig.class]
2021-12-19 02:33:01 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/dao/MarriageDao.class]
2021-12-19 02:33:01 DEBUG [main]: Identified candidate component class: file [/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/register/rest/MarriageController.class]
2021-12-19 02:33:01 DEBUG [main]: Loaded 11 bean definitions from class path resource [springContext.xml]
2021-12-19 02:33:01 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2021-12-19 02:33:02 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2021-12-19 02:33:02 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2021-12-19 02:33:02 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2021-12-19 02:33:02 DEBUG [main]: Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2021-12-19 02:33:02 DEBUG [main]: Creating shared instance of singleton bean 'emf'
2021-12-19 02:33:02 DEBUG [main]: Creating shared instance of singleton bean 'dataSource'
2021-12-19 02:33:02 DEBUG [main]: Loaded JDBC driver: org.postgresql.Driver
2021-12-19 02:33:02 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-19 02:33:02 DEBUG [main]: Building JPA container EntityManagerFactory for persistence unit 'default'
2021-12-19 02:33:02 DEBUG [main]: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@67424e82
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		register.domain.BirthCertificate
		register.domain.MarriageCertificate
		register.domain.Passport
		register.domain.Person
		register.domain.PersonFemale
		register.domain.PersonMale]
	Mapping files names []
	Properties []
2021-12-19 02:33:02 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-19 02:33:02 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-19 02:33:02 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-19 02:33:02 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-19 02:33:02 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-19 02:33:02 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-19 02:33:02 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-19 02:33:02 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-19 02:33:02 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-19 02:33:02 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:33:02 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@181d7f28
2021-12-19 02:33:02 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f4d9395
2021-12-19 02:33:02 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@79c5636f
2021-12-19 02:33:02 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@757f675c
2021-12-19 02:33:02 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:33:02 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e63cad
2021-12-19 02:33:02 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:33:02 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@654b72c0
2021-12-19 02:33:02 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:33:02 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7da10b5b
2021-12-19 02:33:02 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:33:02 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@595f4da5
2021-12-19 02:33:02 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:33:02 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:33:02 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:33:02 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3003697
2021-12-19 02:33:02 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:33:02 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bdbf9be
2021-12-19 02:33:02 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15f193b8
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15f193b8
2021-12-19 02:33:02 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d140a7
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d140a7
2021-12-19 02:33:02 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@7ea4d397
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@7ea4d397
2021-12-19 02:33:02 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@503fbbc6
2021-12-19 02:33:02 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a325eb9
2021-12-19 02:33:02 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@1d81e101
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d81e101
2021-12-19 02:33:02 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@3163987e
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3163987e
2021-12-19 02:33:02 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@7d0332e1
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7d0332e1
2021-12-19 02:33:02 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1761de10
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1761de10
2021-12-19 02:33:02 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1532c619
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1532c619
2021-12-19 02:33:02 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@778ca8ef
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@778ca8ef
2021-12-19 02:33:02 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@435ce306
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@435ce306
2021-12-19 02:33:02 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@75699e35
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@75699e35
2021-12-19 02:33:02 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64040287
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64040287
2021-12-19 02:33:02 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@60c16548
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@60c16548
2021-12-19 02:33:02 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@452c8a40
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@452c8a40
2021-12-19 02:33:02 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53b98ff6
2021-12-19 02:33:02 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76adb233
2021-12-19 02:33:02 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56193c7d
2021-12-19 02:33:02 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@138a7441
2021-12-19 02:33:02 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@42cc13a0
2021-12-19 02:33:02 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@4ad4936c
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4ad4936c
2021-12-19 02:33:02 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@5d28bcd5
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d28bcd5
2021-12-19 02:33:02 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@502f8b57
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@502f8b57
2021-12-19 02:33:02 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@323659f8
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@323659f8
2021-12-19 02:33:02 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:33:02 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@790132f7
2021-12-19 02:33:02 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:33:02 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:33:02 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@3f4f9acd
2021-12-19 02:33:02 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:33:02 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:33:02 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@602c4656
2021-12-19 02:33:02 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@7e0b9178
2021-12-19 02:33:02 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@62a8fd44
2021-12-19 02:33:02 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:33:02 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:33:02 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@4a60ee36
2021-12-19 02:33:02 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:33:02 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:33:02 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30b9eadd
2021-12-19 02:33:02 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@4dd94a58
2021-12-19 02:33:02 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@72be135f
2021-12-19 02:33:02 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@27cbfddf
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@27cbfddf
2021-12-19 02:33:02 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@383f3558
2021-12-19 02:33:02 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@56febdc
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56febdc
2021-12-19 02:33:02 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@5488b5c5
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5488b5c5
2021-12-19 02:33:02 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54534abf
2021-12-19 02:33:02 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69e308c6
2021-12-19 02:33:02 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@37d00a23
2021-12-19 02:33:02 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@7a26928a
2021-12-19 02:33:02 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a26928a
2021-12-19 02:33:02 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d0ec63
2021-12-19 02:33:02 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a5c128
2021-12-19 02:33:02 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73eb8672
2021-12-19 02:33:02 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5942ee04
2021-12-19 02:33:02 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e76a2bb
2021-12-19 02:33:02 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@757194dc
2021-12-19 02:33:02 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a865416
2021-12-19 02:33:02 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@14faa38c
2021-12-19 02:33:02 DEBUG [main]: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923] into BootstrapContext; was [null]
2021-12-19 02:33:02 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923) [was null]
2021-12-19 02:33:02 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@53667cbe] into BootstrapContext; was [null]
2021-12-19 02:33:02 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d3e6d34] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6eafb10e]
2021-12-19 02:33:02 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923]
2021-12-19 02:33:02 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b410923]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-19 02:33:03 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-19 02:33:03 DEBUG [main]: Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 02:33:03 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-19 02:33:03 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-19 02:33:03 DEBUG [main]: JDBC version : 4.2
2021-12-19 02:33:03 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-19 02:33:03 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-19 02:33:03 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-19 02:33:03 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7063686f
2021-12-19 02:33:03 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7063686f
2021-12-19 02:33:03 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@33a630fa
2021-12-19 02:33:03 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53dad875] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f780a86]
2021-12-19 02:33:03 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-19 02:33:03 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-19 02:33:03 DEBUG [main]: Import with entity name Person
2021-12-19 02:33:03 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:33:03 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for personId
2021-12-19 02:33:03 DEBUG [main]: Building property personId
2021-12-19 02:33:03 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-19 02:33:03 DEBUG [main]: Building property dateOfBirth
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for firstName
2021-12-19 02:33:03 DEBUG [main]: Building property firstName
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for lasName
2021-12-19 02:33:03 DEBUG [main]: Building property lasName
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-19 02:33:03 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-19 02:33:03 DEBUG [main]: Building property passports
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for patronymic
2021-12-19 02:33:03 DEBUG [main]: Building property patronymic
2021-12-19 02:33:03 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:33:03 DEBUG [main]: Import with entity name Passport
2021-12-19 02:33:03 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:33:03 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for passportId
2021-12-19 02:33:03 DEBUG [main]: Building property passportId
2021-12-19 02:33:03 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:33:03 DEBUG [main]: Building property issueDate
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-19 02:33:03 DEBUG [main]: Building property issueDepartment
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for number
2021-12-19 02:33:03 DEBUG [main]: Building property number
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Building property person
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for seria
2021-12-19 02:33:03 DEBUG [main]: Building property seria
2021-12-19 02:33:03 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-19 02:33:03 DEBUG [main]: Import with entity name PersonFemale
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-19 02:33:03 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-19 02:33:03 DEBUG [main]: Building property birthCertificates
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-19 02:33:03 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:33:03 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:33:03 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:33:03 DEBUG [main]: Import with entity name BirthCertificate
2021-12-19 02:33:03 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:33:03 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-19 02:33:03 DEBUG [main]: Building property birthCertificateId
2021-12-19 02:33:03 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Building property father
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:33:03 DEBUG [main]: Building property issueDate
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Building property mother
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for number
2021-12-19 02:33:03 DEBUG [main]: Building property number
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Building property person
2021-12-19 02:33:03 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-19 02:33:03 DEBUG [main]: Import with entity name PersonMale
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-19 02:33:03 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-19 02:33:03 DEBUG [main]: Building property birthCertificates
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-19 02:33:03 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-19 02:33:03 DEBUG [main]: Building property marriageCertificates
2021-12-19 02:33:03 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-19 02:33:03 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-19 02:33:03 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:33:03 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-19 02:33:03 DEBUG [main]: Building property marriageCertificateId
2021-12-19 02:33:03 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for active
2021-12-19 02:33:03 DEBUG [main]: Building property active
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for endDate
2021-12-19 02:33:03 DEBUG [main]: Building property endDate
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Building property husband
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for issueDate
2021-12-19 02:33:03 DEBUG [main]: Building property issueDate
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-19 02:33:03 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-19 02:33:03 DEBUG [main]: building SimpleValue for number
2021-12-19 02:33:03 DEBUG [main]: Building property number
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-19 02:33:03 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-19 02:33:03 DEBUG [main]: Building property wife
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for active
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-19 02:33:03 DEBUG [main]: Starting fillSimpleValue for number
2021-12-19 02:33:03 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-19 02:33:03 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-19 02:33:03 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-19 02:33:03 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-19 02:33:03 DEBUG [main]: Building property birthCertificate
2021-12-19 02:33:03 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-19 02:33:03 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-19 02:33:03 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-19 02:33:03 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-19 02:33:03 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-19 02:33:03 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:33:03 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-19 02:33:03 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-19 02:33:03 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-19 02:33:03 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:33:03 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:33:03 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-19 02:33:03 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:33:03 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-19 02:33:03 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:33:03 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:33:03 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-19 02:33:03 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-19 02:33:03 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-19 02:33:03 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-19 02:33:03 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:33:03 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-19 02:33:03 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-19 02:33:03 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-19 02:33:03 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-19 02:33:03 DEBUG [main]: Processing association property references
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:33:03 DEBUG [main]: Processing association property references
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-19 02:33:03 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-19 02:33:03 DEBUG [main]: Building session factory
2021-12-19 02:33:03 DEBUG [main]: SessionFactory name : null
2021-12-19 02:33:03 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-19 02:33:03 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-19 02:33:03 DEBUG [main]: Statistics: disabled
2021-12-19 02:33:03 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-19 02:33:03 DEBUG [main]: Default entity-mode: pojo
2021-12-19 02:33:03 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-19 02:33:03 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-19 02:33:03 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-19 02:33:03 DEBUG [main]: Default batch fetch size: -1
2021-12-19 02:33:03 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-19 02:33:03 DEBUG [main]: Default null ordering: NONE
2021-12-19 02:33:03 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-19 02:33:03 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-19 02:33:03 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-19 02:33:03 DEBUG [main]: JTA Track by Thread: enabled
2021-12-19 02:33:03 DEBUG [main]: Query language substitutions: {}
2021-12-19 02:33:03 DEBUG [main]: Named query checking : enabled
2021-12-19 02:33:03 DEBUG [main]: Second-level cache: disabled
2021-12-19 02:33:03 DEBUG [main]: Second-level query cache: disabled
2021-12-19 02:33:03 DEBUG [main]: Second-level query cache factory: null
2021-12-19 02:33:03 DEBUG [main]: Second-level cache region prefix: null
2021-12-19 02:33:03 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-19 02:33:03 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-19 02:33:03 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-19 02:33:03 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-19 02:33:03 DEBUG [main]: JDBC batch size: 15
2021-12-19 02:33:03 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-19 02:33:03 DEBUG [main]: Scrollable result sets: enabled
2021-12-19 02:33:03 DEBUG [main]: Wrap result sets: disabled
2021-12-19 02:33:03 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-19 02:33:03 DEBUG [main]: JDBC result set fetch size: null
2021-12-19 02:33:03 DEBUG [main]: Connection release mode: ON_CLOSE
2021-12-19 02:33:03 DEBUG [main]: Generate SQL with comments: disabled
2021-12-19 02:33:03 DEBUG [main]: JPA compliance - query : disabled
2021-12-19 02:33:03 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-19 02:33:03 DEBUG [main]: JPA compliance - lists : disabled
2021-12-19 02:33:03 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-19 02:33:04 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:33:04 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:33:04 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:33:04 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:33:04 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:33:04 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:33:04 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-19 02:33:04 DEBUG [main]: Instantiating session factory with properties: {java.specification.version=17, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-orm/5.3.14/spring-orm-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jdbc/5.3.14/spring-jdbc-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-tx/5.3.14/spring-tx-5.3.14.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=17, os.name=Mac OS X, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=register.start.Starter, javax.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@59696551, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@34f22f9d, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-19 02:33:04 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-19 02:33:04 DEBUG [main]: Instantiated session factory
2021-12-19 02:33:04 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53dad875] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7d3c09ec]
2021-12-19 02:33:04 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-19 02:33:04 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-19 02:33:04 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-19 02:33:04 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-19 02:33:04 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-19 02:33:04 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-19 02:33:04 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-19 02:33:04 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-19 02:33:04 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-19 02:33:04 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-19 02:33:04 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-19 02:33:04 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-19 02:33:04 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-19 02:33:04 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-19 02:33:04 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-19 02:33:04 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-19 02:33:04 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-19 02:33:04 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-19 02:33:04 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-19 02:33:04 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-19 02:33:04 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-19 02:33:04 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-19 02:33:04 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-19 02:33:04 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-19 02:33:04 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:33:04 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-19 02:33:04 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-19 02:33:04 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:33:04 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:33:04 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5700c9db]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@270a620]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d7fd41]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45117dd]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:33:04 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-19 02:33:04 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-19 02:33:04 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-19 02:33:04 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-19 02:33:04 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:33:04 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-19 02:33:04 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-19 02:33:04 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6efa4f]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b357eb6]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-19 02:33:04 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-19 02:33:04 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-19 02:33:04 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:33:04 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-19 02:33:04 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-19 02:33:04 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:33:04 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:33:04 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64bebd55]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3730f716]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7730ef88]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f5a02e]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e3f2908]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e87ef9e]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e3b0369]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45843650]
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:33:04 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-19 02:33:04 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-19 02:33:04 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-19 02:33:04 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:33:04 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72443081]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6588b715]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a3b42]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c9d3d0]
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-19 02:33:04 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-19 02:33:04 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-19 02:33:04 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-19 02:33:04 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-19 02:33:04 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-19 02:33:04 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-19 02:33:04 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-19 02:33:04 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bf26df]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : firstName
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : lasName
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : passports
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f9e08d4]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@390037e7]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : patronymic
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@704067c6]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f4596d0]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6002e944]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@588545ac]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b08772d]
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-19 02:33:04 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-19 02:33:04 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-19 02:33:04 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-19 02:33:04 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-19 02:33:04 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a8978a]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d4d8579]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159424e2]
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-19 02:33:04 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4293e066]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d13960e]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:33:04 DEBUG [main]: Property path deemed to be circular : person
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : seria
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-19 02:33:04 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@125d47c4]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@193bb809]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:33:04 DEBUG [main]: Property path deemed to be circular : father
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@581b1c08]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c240cf2]
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:33:04 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78b7f805]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f2466c]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : father
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23468512]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : mother
2021-12-19 02:33:04 DEBUG [main]: Property path deemed to be circular : mother
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : person
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cd7630]
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-19 02:33:04 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e8279e5]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b53840a]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:33:04 DEBUG [main]: Property path deemed to be circular : husband
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53747c4a]
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:33:04 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64b0d1fa]
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2276c9]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : active
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : endDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : husband
2021-12-19 02:33:04 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e9474f]
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : issueDate
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : number
2021-12-19 02:33:04 DEBUG [main]: Visiting attribute path : wife
2021-12-19 02:33:04 DEBUG [main]: Property path deemed to be circular : wife
2021-12-19 02:33:04 DEBUG [main]: Building LoadPlan...
2021-12-19 02:33:04 DEBUG [main]: processing queryspace <gen:0>
2021-12-19 02:33:04 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-19 02:33:04 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-19 02:33:04 DEBUG [main]: No actions specified; doing nothing
2021-12-19 02:33:04 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-19 02:33:04 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-19 02:33:04 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:33:04 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-19 02:33:04 DEBUG [main]: Checking 1 named HQL queries
2021-12-19 02:33:04 DEBUG [main]: Checking named query: Person.findPersons
2021-12-19 02:33:04 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-19 02:33:04 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@531ec978
2021-12-19 02:33:04 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:33:05 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:33:05 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-19 02:33:05 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-19 02:33:05 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-19 02:33:05 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:33:05 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-19 02:33:05 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-19 02:33:05 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-19 02:33:05 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-19 02:33:05 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-19 02:33:05 DEBUG [main]: Resolved : p.passports -> .
2021-12-19 02:33:05 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-19 02:33:05 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:33:05 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-19 02:33:05 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-19 02:33:05 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-19 02:33:05 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-19 02:33:05 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-19 02:33:05 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-19 02:33:05 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:33:05 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-19 02:33:05 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@5aa6202e
2021-12-19 02:33:05 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-19 02:33:05 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-19 02:33:05 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-19 02:33:05 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-19 02:33:05 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-19 02:33:05 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-19 02:33:05 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-19 02:33:05 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-19 02:33:05 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@5aa6202e}

2021-12-19 02:33:05 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:33:05 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-19 02:33:05 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-19 02:33:05 DEBUG [main]: throwQueryException() : no errors
2021-12-19 02:33:05 DEBUG [main]: Checking 0 named SQL queries
2021-12-19 02:33:05 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-19 02:33:05 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a090f62
2021-12-19 02:33:05 DEBUG [main]: Registering SessionFactory: 4df0a1a9-dea7-47b5-a8b4-22d053fdac6c (<unnamed>)
2021-12-19 02:33:05 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-19 02:33:05 INFO  [main]: Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-19 02:33:05 DEBUG [main]: Creating shared instance of singleton bean 'marriageService'
2021-12-19 02:33:05 DEBUG [main]: Creating shared instance of singleton bean 'marriageDao'
2021-12-19 02:33:05 DEBUG [main]: Found key 'test.value' in PropertySource 'class path resource [register.properties]' with value of type String
2021-12-19 02:33:05 DEBUG [main]: Creating shared instance of singleton bean 'buildPersonDao'
2021-12-19 02:33:05 DEBUG [main]: Creating shared instance of singleton bean 'marriageConfig'
2021-12-19 02:33:05 DEBUG [main]: Creating shared instance of singleton bean 'controller'
2021-12-19 02:33:05 INFO  [main]: findMarriageCertificate called
2021-12-19 02:33:05 INFO  [main]: MarriageManager findMarriageCertificate called
2021-12-19 02:33:05 INFO  [main]: findMarriageCertificate called:SIMPLE_VALUE
2021-12-19 02:33:05 DEBUG [main]: Creating new EntityManager for shared EntityManager invocation
2021-12-19 02:33:05 DEBUG [main]: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-19 02:33:05 DEBUG [main]: Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/register_office]
2021-12-19 02:33:05 DEBUG [main]: Result set row: 0
2021-12-19 02:33:05 DEBUG [main]: Result row: EntityKey[register.domain.Person#2], EntityKey[register.domain.Passport#1], null
2021-12-19 02:33:05 DEBUG [main]: Found row of collection: [register.domain.Person.passports#2]
2021-12-19 02:33:05 DEBUG [main]: Result set row: 1
2021-12-19 02:33:05 DEBUG [main]: Result row: EntityKey[register.domain.Person#2], EntityKey[register.domain.Passport#2], null
2021-12-19 02:33:05 DEBUG [main]: Found row of collection: [register.domain.Person.passports#2]
2021-12-19 02:33:05 DEBUG [main]: Resolving attributes for [register.domain.PersonMale#2]
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2001-06-08
2021-12-19 02:33:05 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `firstName` : value = Александр
2021-12-19 02:33:05 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `lasName` : value = Кротов
2021-12-19 02:33:05 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-19 02:33:05 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `patronymic` : value = Витальевич
2021-12-19 02:33:05 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `birthCertificate` : value = 2
2021-12-19 02:33:05 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-19 02:33:05 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-19 02:33:05 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Done materializing entity [register.domain.PersonMale#2]
2021-12-19 02:33:05 DEBUG [main]: Resolving attributes for [register.domain.Passport#1]
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `issueDate` : value = 2021-07-06
2021-12-19 02:33:05 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `issueDepartment` : value = МВД РФ г. Волхов
2021-12-19 02:33:05 DEBUG [main]: Attribute (`issueDepartment`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `number` : value = 680124
2021-12-19 02:33:05 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `person` : value = 2
2021-12-19 02:33:05 DEBUG [main]: Attribute (`person`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `seria` : value = 4115
2021-12-19 02:33:05 DEBUG [main]: Attribute (`seria`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Done materializing entity [register.domain.Passport#1]
2021-12-19 02:33:05 DEBUG [main]: Resolving attributes for [register.domain.Passport#2]
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `issueDate` : value = 2021-09-07
2021-12-19 02:33:05 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `issueDepartment` : value = МВД РФ г. Волхов
2021-12-19 02:33:05 DEBUG [main]: Attribute (`issueDepartment`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `number` : value = 783124
2021-12-19 02:33:05 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `person` : value = 2
2021-12-19 02:33:05 DEBUG [main]: Attribute (`person`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Processing attribute `seria` : value = 4121
2021-12-19 02:33:05 DEBUG [main]: Attribute (`seria`)  - enhanced for lazy-loading? - false
2021-12-19 02:33:05 DEBUG [main]: Done materializing entity [register.domain.Passport#2]
2021-12-19 02:33:05 DEBUG [main]: 1 collections were found in result set for role: register.domain.Person.passports
2021-12-19 02:33:05 DEBUG [main]: Collection fully initialized: [register.domain.Person.passports#2]
2021-12-19 02:33:05 DEBUG [main]: 1 collections initialized for role: register.domain.Person.passports
