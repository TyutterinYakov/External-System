2021-12-18 20:05:58 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-18 20:05:58 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-18 20:05:58 DEBUG [main]: building SimpleValue for seria
2021-12-18 20:05:58 DEBUG [main]: Building property seria
2021-12-18 20:05:58 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-18 20:05:58 DEBUG [main]: Import with entity name PersonFemale
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 20:05:58 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-18 20:05:58 DEBUG [main]: Building property birthCertificates
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 20:05:58 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-18 20:05:58 DEBUG [main]: Building property marriageCertificates
2021-12-18 20:05:58 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 20:05:58 DEBUG [main]: Import with entity name BirthCertificate
2021-12-18 20:05:58 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-18 20:05:58 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-18 20:05:58 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-18 20:05:58 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-18 20:05:58 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-18 20:05:58 DEBUG [main]: Building property birthCertificateId
2021-12-18 20:05:58 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Building property father
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 20:05:58 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-18 20:05:58 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 20:05:58 DEBUG [main]: Building property issueDate
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Building property mother
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 20:05:58 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-18 20:05:58 DEBUG [main]: building SimpleValue for number
2021-12-18 20:05:58 DEBUG [main]: Building property number
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Building property person
2021-12-18 20:05:58 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-18 20:05:58 DEBUG [main]: Import with entity name PersonMale
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 20:05:58 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-18 20:05:58 DEBUG [main]: Building property birthCertificates
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 20:05:58 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-18 20:05:58 DEBUG [main]: Building property marriageCertificates
2021-12-18 20:05:58 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 20:05:58 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-18 20:05:58 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-18 20:05:58 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-18 20:05:58 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-18 20:05:58 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-18 20:05:58 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-18 20:05:58 DEBUG [main]: Building property marriageCertificateId
2021-12-18 20:05:58 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-18 20:05:58 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-18 20:05:58 DEBUG [main]: building SimpleValue for active
2021-12-18 20:05:58 DEBUG [main]: Building property active
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-18 20:05:58 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-18 20:05:58 DEBUG [main]: building SimpleValue for endDate
2021-12-18 20:05:58 DEBUG [main]: Building property endDate
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Building property husband
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 20:05:58 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-18 20:05:58 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 20:05:58 DEBUG [main]: Building property issueDate
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 20:05:58 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-18 20:05:58 DEBUG [main]: building SimpleValue for number
2021-12-18 20:05:58 DEBUG [main]: Building property number
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-18 20:05:58 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-18 20:05:58 DEBUG [main]: Building property wife
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for active
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 20:05:58 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 20:05:58 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-18 20:05:58 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-18 20:05:58 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-18 20:05:58 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-18 20:05:58 DEBUG [main]: Building property birthCertificate
2021-12-18 20:05:58 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-18 20:05:58 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-18 20:05:58 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-18 20:05:58 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-18 20:05:58 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-18 20:05:58 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-18 20:05:58 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-18 20:05:58 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-18 20:05:58 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-18 20:05:58 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-18 20:05:58 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-18 20:05:58 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-18 20:05:58 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-18 20:05:58 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-18 20:05:58 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-18 20:05:58 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-18 20:05:58 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-18 20:05:58 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-18 20:05:58 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-18 20:05:58 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-18 20:05:58 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-18 20:05:58 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-18 20:05:58 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-18 20:05:58 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-18 20:05:58 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-18 20:05:58 DEBUG [main]: Processing association property references
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:05:58 DEBUG [main]: Processing association property references
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:05:58 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:05:58 DEBUG [main]: Building session factory
2021-12-18 20:05:58 DEBUG [main]: SessionFactory name : null
2021-12-18 20:05:58 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-18 20:05:58 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-18 20:05:58 DEBUG [main]: Statistics: disabled
2021-12-18 20:05:58 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-18 20:05:58 DEBUG [main]: Default entity-mode: pojo
2021-12-18 20:05:58 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-18 20:05:58 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-18 20:05:58 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-18 20:05:58 DEBUG [main]: Default batch fetch size: -1
2021-12-18 20:05:58 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-18 20:05:58 DEBUG [main]: Default null ordering: NONE
2021-12-18 20:05:58 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-18 20:05:58 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-18 20:05:58 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-18 20:05:58 DEBUG [main]: JTA Track by Thread: enabled
2021-12-18 20:05:58 DEBUG [main]: Query language substitutions: {}
2021-12-18 20:05:58 DEBUG [main]: Named query checking : enabled
2021-12-18 20:05:58 DEBUG [main]: Second-level cache: disabled
2021-12-18 20:05:58 DEBUG [main]: Second-level query cache: disabled
2021-12-18 20:05:58 DEBUG [main]: Second-level query cache factory: null
2021-12-18 20:05:58 DEBUG [main]: Second-level cache region prefix: null
2021-12-18 20:05:58 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-18 20:05:58 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-18 20:05:58 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-18 20:05:58 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-18 20:05:58 DEBUG [main]: JDBC batch size: 15
2021-12-18 20:05:58 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-18 20:05:58 DEBUG [main]: Scrollable result sets: enabled
2021-12-18 20:05:58 DEBUG [main]: Wrap result sets: disabled
2021-12-18 20:05:58 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-18 20:05:58 DEBUG [main]: JDBC result set fetch size: null
2021-12-18 20:05:58 DEBUG [main]: Connection release mode: AFTER_TRANSACTION
2021-12-18 20:05:58 DEBUG [main]: Generate SQL with comments: disabled
2021-12-18 20:05:58 DEBUG [main]: JPA compliance - query : disabled
2021-12-18 20:05:58 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-18 20:05:58 DEBUG [main]: JPA compliance - lists : disabled
2021-12-18 20:05:58 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-18 20:05:58 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-18 20:05:58 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-18 20:05:58 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-18 20:05:58 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-18 20:05:58 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 20:05:58 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 20:05:58 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-18 20:05:58 DEBUG [main]: Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/test-classes:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/asatutterin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/asatutterin/eclipse/java-2021-12/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/210/0/.cp:/Users/asatutterin/eclipse/java-2021-12/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/209/0/.cp, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 51392 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames register.dao.MarriageDaoTest, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=persistence, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.postgresql.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, hibernate.connection.username=****, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/register_office, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=persistence, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@70211e49, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-18 20:05:58 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-18 20:05:58 DEBUG [main]: Instantiated session factory
2021-12-18 20:05:58 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@288a4658] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6bf13698]
2021-12-18 20:05:58 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-18 20:05:58 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-18 20:05:58 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-18 20:05:58 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-18 20:05:58 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-18 20:05:58 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-18 20:05:59 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-18 20:05:59 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-18 20:05:59 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-18 20:05:59 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-18 20:05:59 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-18 20:05:59 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-18 20:05:59 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-18 20:05:59 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-18 20:05:59 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-18 20:05:59 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-18 20:05:59 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-18 20:05:59 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-18 20:05:59 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-18 20:05:59 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-18 20:05:59 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-18 20:05:59 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-18 20:05:59 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-18 20:05:59 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-18 20:05:59 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 20:05:59 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-18 20:05:59 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-18 20:05:59 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 20:05:59 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 20:05:59 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e355ca]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : passports
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68ed3f30]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47b11ec7]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ba17be6]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 20:05:59 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-18 20:05:59 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-18 20:05:59 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-18 20:05:59 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-18 20:05:59 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 20:05:59 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-18 20:05:59 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-18 20:05:59 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55651434]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50448409]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : seria
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-18 20:05:59 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-18 20:05:59 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-18 20:05:59 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 20:05:59 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-18 20:05:59 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-18 20:05:59 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 20:05:59 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 20:05:59 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5634a861]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : passports
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37ad042b]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43bdaa1b]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30b975ad]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75e09567]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a334bac]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@470d183]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f9fc8bd]
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 20:05:59 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-18 20:05:59 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-18 20:05:59 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-18 20:05:59 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 20:05:59 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea52184]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : father
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c854752]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : mother
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ddeaa5f]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a500561]
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-18 20:05:59 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:05:59 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-18 20:05:59 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 20:05:59 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-18 20:05:59 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-18 20:05:59 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 20:05:59 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 20:05:59 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57fbc06f]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : passports
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62b790a5]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c52fc81]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7523a3dc]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2806d6da]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766a49c7]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1db7157f]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e27856]
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 20:05:59 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-18 20:05:59 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-18 20:05:59 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-18 20:05:59 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-18 20:05:59 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bccd036]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : active
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : husband
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a756082]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : wife
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb39552]
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-18 20:05:59 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9b76b60]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fb9a67f]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:05:59 DEBUG [main]: Property path deemed to be circular : person
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : seria
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-18 20:05:59 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57545c3f]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@326e0b8e]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : father
2021-12-18 20:05:59 DEBUG [main]: Property path deemed to be circular : father
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : mother
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34585ac9]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76a805b7]
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-18 20:05:59 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15f35bc3]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@167381c7]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : father
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591a4f8e]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : mother
2021-12-18 20:05:59 DEBUG [main]: Property path deemed to be circular : mother
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed80d3]
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-18 20:05:59 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ba060f3]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c51782d]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : active
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : husband
2021-12-18 20:05:59 DEBUG [main]: Property path deemed to be circular : husband
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : wife
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a7953c]
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-18 20:05:59 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57c00115]
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@411a5965]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : active
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : husband
2021-12-18 20:05:59 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e83a98]
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:05:59 DEBUG [main]: Visiting attribute path : wife
2021-12-18 20:05:59 DEBUG [main]: Property path deemed to be circular : wife
2021-12-18 20:05:59 DEBUG [main]: Building LoadPlan...
2021-12-18 20:05:59 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:05:59 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-18 20:05:59 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-18 20:05:59 DEBUG [main]: No actions specified; doing nothing
2021-12-18 20:05:59 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-18 20:05:59 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-18 20:05:59 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-18 20:05:59 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-18 20:05:59 DEBUG [main]: Checking 1 named HQL queries
2021-12-18 20:05:59 DEBUG [main]: Checking named query: Person.findPersons
2021-12-18 20:05:59 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-18 20:05:59 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5584d9c6
2021-12-18 20:05:59 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 20:05:59 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:05:59 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-18 20:05:59 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-18 20:05:59 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-18 20:05:59 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:05:59 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-18 20:05:59 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-18 20:05:59 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-18 20:05:59 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-18 20:05:59 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-18 20:05:59 DEBUG [main]: Resolved : p.passports -> .
2021-12-18 20:05:59 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-18 20:05:59 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:05:59 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-18 20:05:59 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-18 20:05:59 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-18 20:05:59 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-18 20:05:59 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-18 20:05:59 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-18 20:05:59 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:05:59 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:05:59 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@42f33b5d
2021-12-18 20:05:59 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-18 20:05:59 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-18 20:05:59 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-18 20:05:59 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-18 20:05:59 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-18 20:05:59 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-18 20:05:59 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-18 20:05:59 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-18 20:05:59 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@42f33b5d}

2021-12-18 20:05:59 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:05:59 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 20:05:59 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-18 20:05:59 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:05:59 DEBUG [main]: Checking 0 named SQL queries
2021-12-18 20:05:59 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 20:05:59 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@53d9826f
2021-12-18 20:05:59 DEBUG [main]: Registering SessionFactory: a1f90974-208d-44d8-91ce-2763c6564397 (<unnamed>)
2021-12-18 20:05:59 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-18 20:05:59 INFO  [main]: findMarriageCertificate called
2021-12-18 20:05:59 DEBUG [main]: parse() - HQL: Select m from register.domain.MarriageCertificate m inner join m.husband inner join m.wife 
2021-12-18 20:05:59 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:05:59 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[IDENT] Node: 'register'
       |  |  |  |  \-[IDENT] Node: 'domain'
       |  |  |  \-[IDENT] Node: 'MarriageCertificate'
       |  |  \-[ALIAS] Node: 'm'
       |  +-[JOIN] Node: 'join'
       |  |  +-[INNER] Node: 'inner'
       |  |  \-[DOT] Node: '.'
       |  |     +-[IDENT] Node: 'm'
       |  |     \-[IDENT] Node: 'husband'
       |  \-[JOIN] Node: 'join'
       |     +-[INNER] Node: 'inner'
       |     \-[DOT] Node: '.'
       |        +-[IDENT] Node: 'm'
       |        \-[IDENT] Node: 'wife'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'm'

2021-12-18 20:05:59 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-18 20:05:59 DEBUG [main]: FromClause{level=1} : register.domain.MarriageCertificate (m) -> marriagece0_
2021-12-18 20:05:59 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:05:59 DEBUG [main]: getDataType() : husband -> org.hibernate.type.ManyToOneType(register.domain.PersonMale)
2021-12-18 20:05:59 DEBUG [main]: dereferenceEntityJoin() : generating join for husband in register.domain.MarriageCertificate (<no alias>) parent = [ {null} ]
2021-12-18 20:05:59 DEBUG [main]: FromClause{level=1} : register.domain.PersonMale (<no alias>) -> personmale1_
2021-12-18 20:05:59 DEBUG [main]: addJoinByPathMap() : m.husband -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_person,tableAlias=personmale1_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.husband_id,className=register.domain.PersonMale}}
2021-12-18 20:05:59 DEBUG [main]: Resolved : m.husband -> marriagece0_.husband_id
2021-12-18 20:05:59 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_person personmale1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.husband,tableName=ro_person,tableAlias=personmale1_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.husband_id,className=register.domain.PersonMale}}

2021-12-18 20:05:59 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:05:59 DEBUG [main]: getDataType() : wife -> org.hibernate.type.ManyToOneType(register.domain.PersonFemale)
2021-12-18 20:05:59 DEBUG [main]: dereferenceEntityJoin() : generating join for wife in register.domain.MarriageCertificate (<no alias>) parent = [ {null} ]
2021-12-18 20:05:59 DEBUG [main]: FromClause{level=1} : register.domain.PersonFemale (<no alias>) -> personfema2_
2021-12-18 20:05:59 DEBUG [main]: addJoinByPathMap() : m.wife -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_person,tableAlias=personfema2_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.wife_id,className=register.domain.PersonFemale}}
2021-12-18 20:05:59 DEBUG [main]: Resolved : m.wife -> marriagece0_.wife_id
2021-12-18 20:05:59 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_person personfema2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.wife,tableName=ro_person,tableAlias=personfema2_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.wife_id,className=register.domain.PersonFemale}}

2021-12-18 20:05:59 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:05:59 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-18 20:05:59 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} marriagece0_.marriage_certificate_id ) ( FromClause{level=1} ( ro_marriage_certificate marriagece0_ ( ro_person personmale1_ ro_person personfema2_ ) ) ) )
2021-12-18 20:05:59 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MarriageCertificate): [ro_marriage_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.MarriageCertificate)
    |  | originalText: m
    |  \-SqlFragment
    \-FromClause
       \-FromElement
          \-FromElement
             \-FromElement

2021-12-18 20:05:59 DEBUG [main]: Using FROM fragment [ro_marriage_certificate marriagece0_]
2021-12-18 20:05:59 DEBUG [main]: Using FROM fragment [inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id]
2021-12-18 20:05:59 DEBUG [main]: Using FROM fragment [inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id]
2021-12-18 20:05:59 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-18 20:05:59 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_marriage_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'marriagece0_.marriage_certificate_id as marriage1_1_' {alias=m, className=register.domain.MarriageCertificate, tableAlias=marriagece0_}
    |  \-[SQL_TOKEN] SqlFragment: 'marriagece0_.active as active2_1_, marriagece0_.end_date as end_date3_1_, marriagece0_.husband_id as husband_6_1_, marriagece0_.issue_date as issue_da4_1_, marriagece0_.number_certificate as number_c5_1_, marriagece0_.wife_id as wife_id7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[m], fromElementByTableAlias=[personfema2_, marriagece0_, personmale1_], fromElementsByPath=[m.husband, m.wife], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'ro_marriage_certificate marriagece0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=ro_marriage_certificate,tableAlias=marriagece0_,origin=null,columns={,className=register.domain.MarriageCertificate}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.husband,tableName=ro_person,tableAlias=personmale1_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.husband_id,className=register.domain.PersonMale}}
             \-[JOIN_FRAGMENT] FromElement: 'inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.wife,tableName=ro_person,tableAlias=personfema2_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.wife_id,className=register.domain.PersonFemale}}

2021-12-18 20:05:59 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:05:59 DEBUG [main]: HQL: Select m from register.domain.MarriageCertificate m inner join m.husband inner join m.wife 
2021-12-18 20:05:59 DEBUG [main]: SQL: select marriagece0_.marriage_certificate_id as marriage1_1_, marriagece0_.active as active2_1_, marriagece0_.end_date as end_date3_1_, marriagece0_.husband_id as husband_6_1_, marriagece0_.issue_date as issue_da4_1_, marriagece0_.number_certificate as number_c5_1_, marriagece0_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece0_ inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id
2021-12-18 20:05:59 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:05:59 DEBUG [main]: select marriagece0_.marriage_certificate_id as marriage1_1_, marriagece0_.active as active2_1_, marriagece0_.end_date as end_date3_1_, marriagece0_.husband_id as husband_6_1_, marriagece0_.issue_date as issue_da4_1_, marriagece0_.number_certificate as number_c5_1_, marriagece0_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece0_ inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id
2021-12-18 20:05:59 DEBUG [main]: Result set row: 0
2021-12-18 20:05:59 DEBUG [main]: Result row: EntityKey[register.domain.MarriageCertificate#1]
2021-12-18 20:05:59 DEBUG [main]: Result set row: 1
2021-12-18 20:05:59 DEBUG [main]: Result row: EntityKey[register.domain.MarriageCertificate#2]
2021-12-18 20:05:59 DEBUG [main]: Resolving attributes for [register.domain.MarriageCertificate#1]
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `active` : value = true
2021-12-18 20:05:59 DEBUG [main]: Attribute (`active`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `endDate` : value = null
2021-12-18 20:05:59 DEBUG [main]: Attribute (`endDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `husband` : value = 2
2021-12-18 20:05:59 DEBUG [main]: Attribute (`husband`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `issueDate` : value = 2019-11-12
2021-12-18 20:05:59 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `number` : value = 322332
2021-12-18 20:05:59 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `wife` : value = 3
2021-12-18 20:05:59 DEBUG [main]: Attribute (`wife`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Done materializing entity [register.domain.MarriageCertificate#1]
2021-12-18 20:05:59 DEBUG [main]: Resolving attributes for [register.domain.MarriageCertificate#2]
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `active` : value = true
2021-12-18 20:05:59 DEBUG [main]: Attribute (`active`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `endDate` : value = null
2021-12-18 20:05:59 DEBUG [main]: Attribute (`endDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `husband` : value = 5
2021-12-18 20:05:59 DEBUG [main]: Attribute (`husband`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `issueDate` : value = 2017-02-02
2021-12-18 20:05:59 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `number` : value = 999332
2021-12-18 20:05:59 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `wife` : value = 6
2021-12-18 20:05:59 DEBUG [main]: Attribute (`wife`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Done materializing entity [register.domain.MarriageCertificate#2]
2021-12-18 20:05:59 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:05:59 DEBUG [main]: Initializing proxy: [register.domain.PersonMale#2]
2021-12-18 20:05:59 DEBUG [main]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-18 20:05:59 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:05:59 DEBUG [main]: Resolving attributes for [register.domain.PersonMale#2]
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2001-06-08
2021-12-18 20:05:59 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `firstName` : value = Александр
2021-12-18 20:05:59 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `lasName` : value = Кротов
2021-12-18 20:05:59 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:05:59 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `patronymic` : value = Витальевич
2021-12-18 20:05:59 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Processing attribute `birthCertificate` : value = 2
2021-12-18 20:05:59 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:05:59 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#2]
2021-12-18 20:05:59 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:06:00 DEBUG [main]: Done entity load
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Done materializing entity [register.domain.PersonMale#2]
2021-12-18 20:06:00 DEBUG [main]: Done entity load : register.domain.PersonMale#2
2021-12-18 20:06:00 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:06:00 DEBUG [main]: Initializing proxy: [register.domain.PersonFemale#3]
2021-12-18 20:06:00 DEBUG [main]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-18 20:06:00 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:06:00 DEBUG [main]: Resolving attributes for [register.domain.PersonFemale#3]
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2000-01-03
2021-12-18 20:06:00 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `firstName` : value = Василиса
2021-12-18 20:06:00 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `lasName` : value = Кротова
2021-12-18 20:06:00 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `patronymic` : value = Николаевна
2021-12-18 20:06:00 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `birthCertificate` : value = 3
2021-12-18 20:06:00 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#3]
2021-12-18 20:06:00 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:06:00 DEBUG [main]: Done entity load
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Done materializing entity [register.domain.PersonFemale#3]
2021-12-18 20:06:00 DEBUG [main]: Done entity load : register.domain.PersonFemale#3
2021-12-18 20:06:00 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:06:00 DEBUG [main]: Initializing proxy: [register.domain.PersonMale#5]
2021-12-18 20:06:00 DEBUG [main]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-18 20:06:00 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:06:00 DEBUG [main]: Resolving attributes for [register.domain.PersonMale#5]
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `dateOfBirth` : value = 1999-09-01
2021-12-18 20:06:00 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `firstName` : value = Максим
2021-12-18 20:06:00 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `lasName` : value = Мотин
2021-12-18 20:06:00 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `patronymic` : value = Витальевич
2021-12-18 20:06:00 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `birthCertificate` : value = 5
2021-12-18 20:06:00 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#5]
2021-12-18 20:06:00 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:06:00 DEBUG [main]: Done entity load
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Done materializing entity [register.domain.PersonMale#5]
2021-12-18 20:06:00 DEBUG [main]: Done entity load : register.domain.PersonMale#5
2021-12-18 20:06:00 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:06:00 DEBUG [main]: Initializing proxy: [register.domain.PersonFemale#6]
2021-12-18 20:06:00 DEBUG [main]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-18 20:06:00 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:06:00 DEBUG [main]: Resolving attributes for [register.domain.PersonFemale#6]
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2001-06-08
2021-12-18 20:06:00 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `firstName` : value = Виталина
2021-12-18 20:06:00 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `lasName` : value = Мотина
2021-12-18 20:06:00 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `patronymic` : value = Александровна
2021-12-18 20:06:00 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `birthCertificate` : value = 6
2021-12-18 20:06:00 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#6]
2021-12-18 20:06:00 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:06:00 DEBUG [main]: Done entity load
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:00 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:00 DEBUG [main]: Done materializing entity [register.domain.PersonFemale#6]
2021-12-18 20:06:00 DEBUG [main]: Done entity load : register.domain.PersonFemale#6
2021-12-18 20:06:00 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:06:25 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-18 20:06:26 DEBUG [main]: Located and parsed 1 persistence units; checking each
2021-12-18 20:06:26 DEBUG [main]: Checking persistence-unit [name=persistence, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [persistence]
2021-12-18 20:06:26 DEBUG [main]: Persistence-unit [persistence] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-12-18 20:06:26 DEBUG [main]: PersistenceUnitInfo [
	name: persistence
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: login456456
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/register_office
		hibernate.show_sql: true
		hibernate.format_sql: false
		javax.persistence.jdbc.user: postgres]
2021-12-18 20:06:26 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-18 20:06:26 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-18 20:06:26 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-18 20:06:26 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-18 20:06:26 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-18 20:06:26 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-18 20:06:26 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-18 20:06:26 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-18 20:06:26 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-18 20:06:26 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@7b5a12ae
2021-12-18 20:06:26 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@7b5a12ae
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b5a12ae
2021-12-18 20:06:26 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f390d63
2021-12-18 20:06:26 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@54d18072
2021-12-18 20:06:26 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@1a45193b
2021-12-18 20:06:26 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@48a12036
2021-12-18 20:06:26 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@48a12036
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48a12036
2021-12-18 20:06:26 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@4e70a728
2021-12-18 20:06:26 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@4e70a728
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4e70a728
2021-12-18 20:06:26 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@19553973
2021-12-18 20:06:26 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@19553973
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@19553973
2021-12-18 20:06:26 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@5a85c92
2021-12-18 20:06:26 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@5a85c92
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a85c92
2021-12-18 20:06:26 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@42f33b5d
2021-12-18 20:06:26 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@42f33b5d
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@42f33b5d
2021-12-18 20:06:26 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3e14c16d
2021-12-18 20:06:26 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3e14c16d
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3e14c16d
2021-12-18 20:06:26 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1951b871
2021-12-18 20:06:26 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1951b871
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1951b871
2021-12-18 20:06:26 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ae67cad
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ae67cad
2021-12-18 20:06:26 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@62f68dff
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@62f68dff
2021-12-18 20:06:26 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@2a7686a7
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@2a7686a7
2021-12-18 20:06:26 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1522d8a0
2021-12-18 20:06:26 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@278bb07e
2021-12-18 20:06:26 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@5b1f29fa
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b1f29fa
2021-12-18 20:06:26 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@31aa3ca5
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@31aa3ca5
2021-12-18 20:06:26 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@58fe0499
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@58fe0499
2021-12-18 20:06:26 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5c00384f
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5c00384f
2021-12-18 20:06:26 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1cbf6e72
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1cbf6e72
2021-12-18 20:06:26 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@fb9c7aa
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@fb9c7aa
2021-12-18 20:06:26 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5dd91bca
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5dd91bca
2021-12-18 20:06:26 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@a5bd950
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@a5bd950
2021-12-18 20:06:26 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58c34bb3
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58c34bb3
2021-12-18 20:06:26 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@2b5825fa
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b5825fa
2021-12-18 20:06:26 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@788fcafb
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@788fcafb
2021-12-18 20:06:26 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@42e3ede4
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@42e3ede4
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@42e3ede4
2021-12-18 20:06:26 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45efc20d
2021-12-18 20:06:26 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@cb191ca
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cb191ca
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cb191ca
2021-12-18 20:06:26 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1f2f9244
2021-12-18 20:06:26 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5af3a0f
2021-12-18 20:06:26 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@5f031ebd
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5f031ebd
2021-12-18 20:06:26 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@18230356
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18230356
2021-12-18 20:06:26 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@22b53226
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@22b53226
2021-12-18 20:06:26 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@ed3068a
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ed3068a
2021-12-18 20:06:26 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e11485
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e11485
2021-12-18 20:06:26 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5974109
2021-12-18 20:06:26 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@4fbda97b
2021-12-18 20:06:26 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@4fbda97b
2021-12-18 20:06:26 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@4fbda97b
2021-12-18 20:06:26 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@354fc8f0
2021-12-18 20:06:26 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@354fc8f0
2021-12-18 20:06:26 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@354fc8f0
2021-12-18 20:06:26 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@1fdfafd2
2021-12-18 20:06:26 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@f73dcd6
2021-12-18 20:06:26 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@40f1be1b
2021-12-18 20:06:26 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@40f1be1b
2021-12-18 20:06:26 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@40f1be1b
2021-12-18 20:06:26 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75ed9710
2021-12-18 20:06:26 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75ed9710
2021-12-18 20:06:26 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75ed9710
2021-12-18 20:06:26 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@79da1ec0
2021-12-18 20:06:26 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@62ea3440
2021-12-18 20:06:26 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@3b220bcb
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b220bcb
2021-12-18 20:06:26 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@160ac7fb
2021-12-18 20:06:26 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@1d8062d2
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d8062d2
2021-12-18 20:06:26 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@47605f2f
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@47605f2f
2021-12-18 20:06:26 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3d484181
2021-12-18 20:06:26 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5b11a194
2021-12-18 20:06:26 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@5827af16
2021-12-18 20:06:26 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@53f48368
2021-12-18 20:06:26 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@53f48368
2021-12-18 20:06:26 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@73db4768
2021-12-18 20:06:26 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71b3bc45
2021-12-18 20:06:26 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a8c1f44
2021-12-18 20:06:26 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@150ab4ed
2021-12-18 20:06:26 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c435123
2021-12-18 20:06:26 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50fe837a
2021-12-18 20:06:26 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a62c01e
2021-12-18 20:06:26 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a8fa663
2021-12-18 20:06:26 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1433046b] into BootstrapContext; was [null]
2021-12-18 20:06:26 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3f446bef] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7829b776]
2021-12-18 20:06:26 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-12-18 20:06:26 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-18 20:06:26 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-18 20:06:26 WARN  [main]: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-18 20:06:26 INFO  [main]: HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/register_office]
2021-12-18 20:06:26 INFO  [main]: HHH10001001: Connection properties: {password=login456456, user=postgres}
2021-12-18 20:06:26 INFO  [main]: HHH10001003: Autocommit mode: false
2021-12-18 20:06:26 DEBUG [main]: Initializing Connection pool with 1 Connections
2021-12-18 20:06:26 INFO  [main]: HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-18 20:06:27 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-18 20:06:27 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-18 20:06:27 DEBUG [main]: JDBC version : 4.2
2021-12-18 20:06:27 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-18 20:06:27 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-18 20:06:27 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-18 20:06:27 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6f815e7f
2021-12-18 20:06:27 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6f815e7f
2021-12-18 20:06:27 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2e11485
2021-12-18 20:06:27 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b0964b2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48e7b3d2]
2021-12-18 20:06:27 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-18 20:06:27 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-18 20:06:27 DEBUG [main]: Import with entity name Person
2021-12-18 20:06:27 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for personId
2021-12-18 20:06:27 DEBUG [main]: Building property personId
2021-12-18 20:06:27 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-18 20:06:27 DEBUG [main]: Building property dateOfBirth
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for firstName
2021-12-18 20:06:27 DEBUG [main]: Building property firstName
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for lasName
2021-12-18 20:06:27 DEBUG [main]: Building property lasName
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 20:06:27 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-18 20:06:27 DEBUG [main]: Building property passports
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for patronymic
2021-12-18 20:06:27 DEBUG [main]: Building property patronymic
2021-12-18 20:06:27 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 20:06:27 DEBUG [main]: Import with entity name Passport
2021-12-18 20:06:27 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for passportId
2021-12-18 20:06:27 DEBUG [main]: Building property passportId
2021-12-18 20:06:27 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 20:06:27 DEBUG [main]: Building property issueDate
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-18 20:06:27 DEBUG [main]: Building property issueDepartment
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for number
2021-12-18 20:06:27 DEBUG [main]: Building property number
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Building property person
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for seria
2021-12-18 20:06:27 DEBUG [main]: Building property seria
2021-12-18 20:06:27 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-18 20:06:27 DEBUG [main]: Import with entity name PersonFemale
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 20:06:27 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-18 20:06:27 DEBUG [main]: Building property birthCertificates
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 20:06:27 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-18 20:06:27 DEBUG [main]: Building property marriageCertificates
2021-12-18 20:06:27 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 20:06:27 DEBUG [main]: Import with entity name BirthCertificate
2021-12-18 20:06:27 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-18 20:06:27 DEBUG [main]: Building property birthCertificateId
2021-12-18 20:06:27 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Building property father
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 20:06:27 DEBUG [main]: Building property issueDate
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Building property mother
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for number
2021-12-18 20:06:27 DEBUG [main]: Building property number
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Building property person
2021-12-18 20:06:27 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-18 20:06:27 DEBUG [main]: Import with entity name PersonMale
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 20:06:27 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-18 20:06:27 DEBUG [main]: Building property birthCertificates
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 20:06:27 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-18 20:06:27 DEBUG [main]: Building property marriageCertificates
2021-12-18 20:06:27 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 20:06:27 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-18 20:06:27 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-18 20:06:27 DEBUG [main]: Building property marriageCertificateId
2021-12-18 20:06:27 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for active
2021-12-18 20:06:27 DEBUG [main]: Building property active
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for endDate
2021-12-18 20:06:27 DEBUG [main]: Building property endDate
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Building property husband
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 20:06:27 DEBUG [main]: Building property issueDate
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 20:06:27 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-18 20:06:27 DEBUG [main]: building SimpleValue for number
2021-12-18 20:06:27 DEBUG [main]: Building property number
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-18 20:06:27 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-18 20:06:27 DEBUG [main]: Building property wife
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for active
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 20:06:27 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 20:06:27 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-18 20:06:27 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-18 20:06:27 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-18 20:06:27 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-18 20:06:27 DEBUG [main]: Building property birthCertificate
2021-12-18 20:06:27 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-18 20:06:27 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-18 20:06:27 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-18 20:06:27 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-18 20:06:27 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-18 20:06:27 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-18 20:06:27 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-18 20:06:27 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-18 20:06:27 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-18 20:06:27 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-18 20:06:27 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-18 20:06:27 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-18 20:06:27 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-18 20:06:27 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-18 20:06:27 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-18 20:06:27 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-18 20:06:27 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-18 20:06:27 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-18 20:06:27 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-18 20:06:27 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-18 20:06:27 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-18 20:06:27 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-18 20:06:27 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-18 20:06:27 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-18 20:06:27 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-18 20:06:27 DEBUG [main]: Processing association property references
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:06:27 DEBUG [main]: Processing association property references
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:06:27 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:06:27 DEBUG [main]: Building session factory
2021-12-18 20:06:27 DEBUG [main]: SessionFactory name : null
2021-12-18 20:06:27 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-18 20:06:27 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-18 20:06:27 DEBUG [main]: Statistics: disabled
2021-12-18 20:06:27 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-18 20:06:27 DEBUG [main]: Default entity-mode: pojo
2021-12-18 20:06:27 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-18 20:06:27 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-18 20:06:27 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-18 20:06:27 DEBUG [main]: Default batch fetch size: -1
2021-12-18 20:06:27 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-18 20:06:27 DEBUG [main]: Default null ordering: NONE
2021-12-18 20:06:27 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-18 20:06:27 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-18 20:06:27 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-18 20:06:27 DEBUG [main]: JTA Track by Thread: enabled
2021-12-18 20:06:27 DEBUG [main]: Query language substitutions: {}
2021-12-18 20:06:27 DEBUG [main]: Named query checking : enabled
2021-12-18 20:06:27 DEBUG [main]: Second-level cache: disabled
2021-12-18 20:06:27 DEBUG [main]: Second-level query cache: disabled
2021-12-18 20:06:27 DEBUG [main]: Second-level query cache factory: null
2021-12-18 20:06:27 DEBUG [main]: Second-level cache region prefix: null
2021-12-18 20:06:27 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-18 20:06:27 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-18 20:06:27 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-18 20:06:27 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-18 20:06:27 DEBUG [main]: JDBC batch size: 15
2021-12-18 20:06:27 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-18 20:06:27 DEBUG [main]: Scrollable result sets: enabled
2021-12-18 20:06:27 DEBUG [main]: Wrap result sets: disabled
2021-12-18 20:06:27 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-18 20:06:27 DEBUG [main]: JDBC result set fetch size: null
2021-12-18 20:06:27 DEBUG [main]: Connection release mode: AFTER_TRANSACTION
2021-12-18 20:06:27 DEBUG [main]: Generate SQL with comments: disabled
2021-12-18 20:06:27 DEBUG [main]: JPA compliance - query : disabled
2021-12-18 20:06:27 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-18 20:06:27 DEBUG [main]: JPA compliance - lists : disabled
2021-12-18 20:06:27 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-18 20:06:27 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 20:06:27 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 20:06:27 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-18 20:06:27 DEBUG [main]: Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/test-classes:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/asatutterin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/asatutterin/eclipse/java-2021-12/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/210/0/.cp:/Users/asatutterin/eclipse/java-2021-12/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/209/0/.cp, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 51398 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames register.dao.MarriageDaoTest, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=persistence, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.postgresql.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, hibernate.connection.username=****, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/register_office, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=persistence, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1de6932a, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-18 20:06:27 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-18 20:06:27 DEBUG [main]: Instantiated session factory
2021-12-18 20:06:27 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b0964b2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5e5073ab]
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-18 20:06:27 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-18 20:06:27 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-18 20:06:27 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-18 20:06:27 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-18 20:06:27 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-18 20:06:27 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-18 20:06:27 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-18 20:06:27 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-18 20:06:27 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-18 20:06:27 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-18 20:06:27 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-18 20:06:27 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-18 20:06:27 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-18 20:06:27 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-18 20:06:27 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 20:06:27 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-18 20:06:27 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-18 20:06:27 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 20:06:27 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 20:06:27 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d6d273]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : passports
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4483d35]
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed043d3]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d19d85]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 20:06:27 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:27 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:27 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 20:06:27 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-18 20:06:27 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-18 20:06:27 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-18 20:06:27 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-18 20:06:27 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 20:06:27 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-18 20:06:27 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-18 20:06:27 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a4d582c]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45e9b12d]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : seria
2021-12-18 20:06:27 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:27 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:27 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-18 20:06:27 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-18 20:06:27 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-18 20:06:27 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 20:06:27 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-18 20:06:27 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-18 20:06:27 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 20:06:27 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 20:06:27 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dc95b8b]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : passports
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d1ff6b1]
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f756e6]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@329548d0]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3003827c]
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29b40b3]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d247660]
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@656f62dc]
2021-12-18 20:06:27 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:27 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:27 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 20:06:27 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-18 20:06:27 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-18 20:06:27 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-18 20:06:27 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 20:06:27 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d30c6f]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : father
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fdca00a]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : mother
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@513b52af]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8c93]
2021-12-18 20:06:27 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:27 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:27 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-18 20:06:27 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:06:27 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-18 20:06:27 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 20:06:27 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-18 20:06:27 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-18 20:06:27 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 20:06:27 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 20:06:27 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dd74143]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : passports
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3166f664]
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47ac613b]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d6fdd4]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66f28a1f]
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a19573]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44a085e5]
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134ff8f8]
2021-12-18 20:06:27 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:27 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:27 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 20:06:27 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-18 20:06:27 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-18 20:06:27 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-18 20:06:27 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-18 20:06:27 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619f2afc]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : active
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : husband
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db60246]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : wife
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2152ab30]
2021-12-18 20:06:27 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:27 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:27 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-18 20:06:27 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73971965]
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76a14c8d]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:06:27 DEBUG [main]: Property path deemed to be circular : person
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : seria
2021-12-18 20:06:27 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:27 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:27 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-18 20:06:27 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e766822]
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3003e580]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : father
2021-12-18 20:06:27 DEBUG [main]: Property path deemed to be circular : father
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : mother
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c8a7e38]
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:06:27 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:06:27 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@138aa3cc]
2021-12-18 20:06:27 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:27 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:28 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-18 20:06:28 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10a98392]
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30839e44]
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : father
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45aca496]
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : mother
2021-12-18 20:06:28 DEBUG [main]: Property path deemed to be circular : mother
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697173d9]
2021-12-18 20:06:28 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:28 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-18 20:06:28 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ceddaf8]
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d90eeb3]
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : active
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : husband
2021-12-18 20:06:28 DEBUG [main]: Property path deemed to be circular : husband
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : wife
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d6d1d42]
2021-12-18 20:06:28 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:28 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-18 20:06:28 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27329d2a]
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7978e022]
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : active
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : husband
2021-12-18 20:06:28 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6993c8df]
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:06:28 DEBUG [main]: Visiting attribute path : wife
2021-12-18 20:06:28 DEBUG [main]: Property path deemed to be circular : wife
2021-12-18 20:06:28 DEBUG [main]: Building LoadPlan...
2021-12-18 20:06:28 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:06:28 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-18 20:06:28 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-18 20:06:28 DEBUG [main]: No actions specified; doing nothing
2021-12-18 20:06:28 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-18 20:06:28 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-18 20:06:28 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-18 20:06:28 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-18 20:06:28 DEBUG [main]: Checking 1 named HQL queries
2021-12-18 20:06:28 DEBUG [main]: Checking named query: Person.findPersons
2021-12-18 20:06:28 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-18 20:06:28 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@21b6c9c2
2021-12-18 20:06:28 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 20:06:28 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:06:28 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-18 20:06:28 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-18 20:06:28 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-18 20:06:28 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:06:28 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-18 20:06:28 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-18 20:06:28 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-18 20:06:28 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-18 20:06:28 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-18 20:06:28 DEBUG [main]: Resolved : p.passports -> .
2021-12-18 20:06:28 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-18 20:06:28 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:06:28 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-18 20:06:28 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-18 20:06:28 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-18 20:06:28 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-18 20:06:28 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-18 20:06:28 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-18 20:06:28 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:06:28 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:06:28 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@42f33b5d
2021-12-18 20:06:28 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-18 20:06:28 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-18 20:06:28 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-18 20:06:28 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-18 20:06:28 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-18 20:06:28 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-18 20:06:28 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-18 20:06:28 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-18 20:06:28 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@42f33b5d}

2021-12-18 20:06:28 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:06:28 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 20:06:28 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-18 20:06:28 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:06:28 DEBUG [main]: Checking 0 named SQL queries
2021-12-18 20:06:28 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 20:06:28 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@399ca607
2021-12-18 20:06:28 DEBUG [main]: Registering SessionFactory: 01e08510-e44b-479e-b2c8-ead194193dcb (<unnamed>)
2021-12-18 20:06:28 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-18 20:06:28 INFO  [main]: findMarriageCertificate called
2021-12-18 20:06:28 DEBUG [main]: parse() - HQL: Select m from register.domain.MarriageCertificate m inner join m.husband inner join m.wife 
2021-12-18 20:06:28 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:06:28 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[IDENT] Node: 'register'
       |  |  |  |  \-[IDENT] Node: 'domain'
       |  |  |  \-[IDENT] Node: 'MarriageCertificate'
       |  |  \-[ALIAS] Node: 'm'
       |  +-[JOIN] Node: 'join'
       |  |  +-[INNER] Node: 'inner'
       |  |  \-[DOT] Node: '.'
       |  |     +-[IDENT] Node: 'm'
       |  |     \-[IDENT] Node: 'husband'
       |  \-[JOIN] Node: 'join'
       |     +-[INNER] Node: 'inner'
       |     \-[DOT] Node: '.'
       |        +-[IDENT] Node: 'm'
       |        \-[IDENT] Node: 'wife'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'm'

2021-12-18 20:06:28 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-18 20:06:28 DEBUG [main]: FromClause{level=1} : register.domain.MarriageCertificate (m) -> marriagece0_
2021-12-18 20:06:28 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:06:28 DEBUG [main]: getDataType() : husband -> org.hibernate.type.ManyToOneType(register.domain.PersonMale)
2021-12-18 20:06:28 DEBUG [main]: dereferenceEntityJoin() : generating join for husband in register.domain.MarriageCertificate (<no alias>) parent = [ {null} ]
2021-12-18 20:06:28 DEBUG [main]: FromClause{level=1} : register.domain.PersonMale (<no alias>) -> personmale1_
2021-12-18 20:06:28 DEBUG [main]: addJoinByPathMap() : m.husband -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_person,tableAlias=personmale1_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.husband_id,className=register.domain.PersonMale}}
2021-12-18 20:06:28 DEBUG [main]: Resolved : m.husband -> marriagece0_.husband_id
2021-12-18 20:06:28 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_person personmale1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.husband,tableName=ro_person,tableAlias=personmale1_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.husband_id,className=register.domain.PersonMale}}

2021-12-18 20:06:28 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:06:28 DEBUG [main]: getDataType() : wife -> org.hibernate.type.ManyToOneType(register.domain.PersonFemale)
2021-12-18 20:06:28 DEBUG [main]: dereferenceEntityJoin() : generating join for wife in register.domain.MarriageCertificate (<no alias>) parent = [ {null} ]
2021-12-18 20:06:28 DEBUG [main]: FromClause{level=1} : register.domain.PersonFemale (<no alias>) -> personfema2_
2021-12-18 20:06:28 DEBUG [main]: addJoinByPathMap() : m.wife -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_person,tableAlias=personfema2_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.wife_id,className=register.domain.PersonFemale}}
2021-12-18 20:06:28 DEBUG [main]: Resolved : m.wife -> marriagece0_.wife_id
2021-12-18 20:06:28 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_person personfema2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.wife,tableName=ro_person,tableAlias=personfema2_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.wife_id,className=register.domain.PersonFemale}}

2021-12-18 20:06:28 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:06:28 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-18 20:06:28 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} marriagece0_.marriage_certificate_id ) ( FromClause{level=1} ( ro_marriage_certificate marriagece0_ ( ro_person personmale1_ ro_person personfema2_ ) ) ) )
2021-12-18 20:06:28 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MarriageCertificate): [ro_marriage_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.MarriageCertificate)
    |  | originalText: m
    |  \-SqlFragment
    \-FromClause
       \-FromElement
          \-FromElement
             \-FromElement

2021-12-18 20:06:28 DEBUG [main]: Using FROM fragment [ro_marriage_certificate marriagece0_]
2021-12-18 20:06:28 DEBUG [main]: Using FROM fragment [inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id]
2021-12-18 20:06:28 DEBUG [main]: Using FROM fragment [inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id]
2021-12-18 20:06:28 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-18 20:06:28 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_marriage_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'marriagece0_.marriage_certificate_id as marriage1_1_' {alias=m, className=register.domain.MarriageCertificate, tableAlias=marriagece0_}
    |  \-[SQL_TOKEN] SqlFragment: 'marriagece0_.active as active2_1_, marriagece0_.end_date as end_date3_1_, marriagece0_.husband_id as husband_6_1_, marriagece0_.issue_date as issue_da4_1_, marriagece0_.number_certificate as number_c5_1_, marriagece0_.wife_id as wife_id7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[m], fromElementByTableAlias=[personfema2_, marriagece0_, personmale1_], fromElementsByPath=[m.husband, m.wife], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'ro_marriage_certificate marriagece0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=ro_marriage_certificate,tableAlias=marriagece0_,origin=null,columns={,className=register.domain.MarriageCertificate}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.husband,tableName=ro_person,tableAlias=personmale1_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.husband_id,className=register.domain.PersonMale}}
             \-[JOIN_FRAGMENT] FromElement: 'inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.wife,tableName=ro_person,tableAlias=personfema2_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.wife_id,className=register.domain.PersonFemale}}

2021-12-18 20:06:28 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:06:28 DEBUG [main]: HQL: Select m from register.domain.MarriageCertificate m inner join m.husband inner join m.wife 
2021-12-18 20:06:28 DEBUG [main]: SQL: select marriagece0_.marriage_certificate_id as marriage1_1_, marriagece0_.active as active2_1_, marriagece0_.end_date as end_date3_1_, marriagece0_.husband_id as husband_6_1_, marriagece0_.issue_date as issue_da4_1_, marriagece0_.number_certificate as number_c5_1_, marriagece0_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece0_ inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id
2021-12-18 20:06:28 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:06:28 DEBUG [main]: select marriagece0_.marriage_certificate_id as marriage1_1_, marriagece0_.active as active2_1_, marriagece0_.end_date as end_date3_1_, marriagece0_.husband_id as husband_6_1_, marriagece0_.issue_date as issue_da4_1_, marriagece0_.number_certificate as number_c5_1_, marriagece0_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece0_ inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id
2021-12-18 20:06:28 DEBUG [main]: Result set row: 0
2021-12-18 20:06:28 DEBUG [main]: Result row: EntityKey[register.domain.MarriageCertificate#1]
2021-12-18 20:06:28 DEBUG [main]: Result set row: 1
2021-12-18 20:06:28 DEBUG [main]: Result row: EntityKey[register.domain.MarriageCertificate#2]
2021-12-18 20:06:28 DEBUG [main]: Resolving attributes for [register.domain.MarriageCertificate#1]
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `active` : value = true
2021-12-18 20:06:28 DEBUG [main]: Attribute (`active`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `endDate` : value = null
2021-12-18 20:06:28 DEBUG [main]: Attribute (`endDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `husband` : value = 2
2021-12-18 20:06:28 DEBUG [main]: Attribute (`husband`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `issueDate` : value = 2019-11-12
2021-12-18 20:06:28 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `number` : value = 322332
2021-12-18 20:06:28 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `wife` : value = 3
2021-12-18 20:06:28 DEBUG [main]: Attribute (`wife`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Done materializing entity [register.domain.MarriageCertificate#1]
2021-12-18 20:06:28 DEBUG [main]: Resolving attributes for [register.domain.MarriageCertificate#2]
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `active` : value = true
2021-12-18 20:06:28 DEBUG [main]: Attribute (`active`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `endDate` : value = null
2021-12-18 20:06:28 DEBUG [main]: Attribute (`endDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `husband` : value = 5
2021-12-18 20:06:28 DEBUG [main]: Attribute (`husband`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `issueDate` : value = 2017-02-02
2021-12-18 20:06:28 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `number` : value = 999332
2021-12-18 20:06:28 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `wife` : value = 6
2021-12-18 20:06:28 DEBUG [main]: Attribute (`wife`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Done materializing entity [register.domain.MarriageCertificate#2]
2021-12-18 20:06:28 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:06:28 DEBUG [main]: Initializing proxy: [register.domain.PersonMale#2]
2021-12-18 20:06:28 DEBUG [main]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-18 20:06:28 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:06:28 DEBUG [main]: Resolving attributes for [register.domain.PersonMale#2]
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2001-06-08
2021-12-18 20:06:28 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `firstName` : value = Александр
2021-12-18 20:06:28 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `lasName` : value = Кротов
2021-12-18 20:06:28 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `patronymic` : value = Витальевич
2021-12-18 20:06:28 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `birthCertificate` : value = 2
2021-12-18 20:06:28 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#2]
2021-12-18 20:06:28 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:06:28 DEBUG [main]: Done entity load
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Done materializing entity [register.domain.PersonMale#2]
2021-12-18 20:06:28 DEBUG [main]: Done entity load : register.domain.PersonMale#2
2021-12-18 20:06:28 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:06:28 DEBUG [main]: Initializing proxy: [register.domain.PersonFemale#3]
2021-12-18 20:06:28 DEBUG [main]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-18 20:06:28 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:06:28 DEBUG [main]: Resolving attributes for [register.domain.PersonFemale#3]
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2000-01-03
2021-12-18 20:06:28 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `firstName` : value = Василиса
2021-12-18 20:06:28 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `lasName` : value = Кротова
2021-12-18 20:06:28 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `patronymic` : value = Николаевна
2021-12-18 20:06:28 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `birthCertificate` : value = 3
2021-12-18 20:06:28 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#3]
2021-12-18 20:06:28 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:06:28 DEBUG [main]: Done entity load
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Done materializing entity [register.domain.PersonFemale#3]
2021-12-18 20:06:28 DEBUG [main]: Done entity load : register.domain.PersonFemale#3
2021-12-18 20:06:28 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:06:28 DEBUG [main]: Initializing proxy: [register.domain.PersonMale#5]
2021-12-18 20:06:28 DEBUG [main]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-18 20:06:28 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:06:28 DEBUG [main]: Resolving attributes for [register.domain.PersonMale#5]
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `dateOfBirth` : value = 1999-09-01
2021-12-18 20:06:28 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `firstName` : value = Максим
2021-12-18 20:06:28 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `lasName` : value = Мотин
2021-12-18 20:06:28 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `patronymic` : value = Витальевич
2021-12-18 20:06:28 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `birthCertificate` : value = 5
2021-12-18 20:06:28 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#5]
2021-12-18 20:06:28 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:06:28 DEBUG [main]: Done entity load
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Done materializing entity [register.domain.PersonMale#5]
2021-12-18 20:06:28 DEBUG [main]: Done entity load : register.domain.PersonMale#5
2021-12-18 20:06:28 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:06:28 DEBUG [main]: Initializing proxy: [register.domain.PersonFemale#6]
2021-12-18 20:06:28 DEBUG [main]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-18 20:06:28 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:06:28 DEBUG [main]: Resolving attributes for [register.domain.PersonFemale#6]
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2001-06-08
2021-12-18 20:06:28 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `firstName` : value = Виталина
2021-12-18 20:06:28 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `lasName` : value = Мотина
2021-12-18 20:06:28 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `patronymic` : value = Александровна
2021-12-18 20:06:28 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `birthCertificate` : value = 6
2021-12-18 20:06:28 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#6]
2021-12-18 20:06:28 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:06:28 DEBUG [main]: Done entity load
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:06:28 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:06:28 DEBUG [main]: Done materializing entity [register.domain.PersonFemale#6]
2021-12-18 20:06:28 DEBUG [main]: Done entity load : register.domain.PersonFemale#6
2021-12-18 20:06:28 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:08:49 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-18 20:08:49 DEBUG [main]: Located and parsed 1 persistence units; checking each
2021-12-18 20:08:49 DEBUG [main]: Checking persistence-unit [name=persistence, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [persistence]
2021-12-18 20:08:49 DEBUG [main]: Persistence-unit [persistence] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-12-18 20:08:49 DEBUG [main]: PersistenceUnitInfo [
	name: persistence
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: login456456
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/register_office
		hibernate.show_sql: true
		hibernate.format_sql: false
		javax.persistence.jdbc.user: postgres]
2021-12-18 20:08:49 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-18 20:08:49 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-18 20:08:49 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-18 20:08:49 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-18 20:08:49 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-18 20:08:49 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-18 20:08:49 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-18 20:08:49 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-18 20:08:49 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-18 20:08:49 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@7b5a12ae
2021-12-18 20:08:49 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@7b5a12ae
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b5a12ae
2021-12-18 20:08:49 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f390d63
2021-12-18 20:08:49 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@54d18072
2021-12-18 20:08:49 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@1a45193b
2021-12-18 20:08:49 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@48a12036
2021-12-18 20:08:49 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@48a12036
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48a12036
2021-12-18 20:08:49 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@4e70a728
2021-12-18 20:08:49 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@4e70a728
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4e70a728
2021-12-18 20:08:49 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@19553973
2021-12-18 20:08:49 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@19553973
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@19553973
2021-12-18 20:08:49 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@5a85c92
2021-12-18 20:08:49 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@5a85c92
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a85c92
2021-12-18 20:08:49 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@42f33b5d
2021-12-18 20:08:49 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@42f33b5d
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@42f33b5d
2021-12-18 20:08:49 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3e14c16d
2021-12-18 20:08:49 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@3e14c16d
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3e14c16d
2021-12-18 20:08:49 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1951b871
2021-12-18 20:08:49 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@1951b871
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1951b871
2021-12-18 20:08:49 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ae67cad
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ae67cad
2021-12-18 20:08:49 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@62f68dff
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@62f68dff
2021-12-18 20:08:49 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@2a7686a7
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@2a7686a7
2021-12-18 20:08:49 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1522d8a0
2021-12-18 20:08:49 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@278bb07e
2021-12-18 20:08:49 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@5b1f29fa
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b1f29fa
2021-12-18 20:08:49 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@31aa3ca5
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@31aa3ca5
2021-12-18 20:08:49 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@58fe0499
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@58fe0499
2021-12-18 20:08:49 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5c00384f
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5c00384f
2021-12-18 20:08:49 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1cbf6e72
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1cbf6e72
2021-12-18 20:08:49 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@fb9c7aa
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@fb9c7aa
2021-12-18 20:08:49 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5dd91bca
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5dd91bca
2021-12-18 20:08:49 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@a5bd950
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@a5bd950
2021-12-18 20:08:49 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58c34bb3
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58c34bb3
2021-12-18 20:08:49 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@2b5825fa
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b5825fa
2021-12-18 20:08:49 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@788fcafb
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@788fcafb
2021-12-18 20:08:49 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@42e3ede4
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@42e3ede4
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@42e3ede4
2021-12-18 20:08:49 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45efc20d
2021-12-18 20:08:49 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@cb191ca
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cb191ca
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cb191ca
2021-12-18 20:08:49 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1f2f9244
2021-12-18 20:08:49 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5af3a0f
2021-12-18 20:08:49 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@5f031ebd
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5f031ebd
2021-12-18 20:08:49 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@18230356
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18230356
2021-12-18 20:08:49 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@22b53226
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@22b53226
2021-12-18 20:08:49 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@ed3068a
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ed3068a
2021-12-18 20:08:49 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e11485
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e11485
2021-12-18 20:08:49 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5974109
2021-12-18 20:08:49 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@4fbda97b
2021-12-18 20:08:49 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@4fbda97b
2021-12-18 20:08:49 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@4fbda97b
2021-12-18 20:08:49 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@354fc8f0
2021-12-18 20:08:49 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@354fc8f0
2021-12-18 20:08:49 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@354fc8f0
2021-12-18 20:08:49 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@1fdfafd2
2021-12-18 20:08:49 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@f73dcd6
2021-12-18 20:08:49 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@40f1be1b
2021-12-18 20:08:49 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@40f1be1b
2021-12-18 20:08:49 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@40f1be1b
2021-12-18 20:08:49 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75ed9710
2021-12-18 20:08:49 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75ed9710
2021-12-18 20:08:49 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75ed9710
2021-12-18 20:08:49 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@79da1ec0
2021-12-18 20:08:49 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@62ea3440
2021-12-18 20:08:49 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@3b220bcb
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b220bcb
2021-12-18 20:08:49 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@160ac7fb
2021-12-18 20:08:49 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@1d8062d2
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d8062d2
2021-12-18 20:08:49 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@47605f2f
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@47605f2f
2021-12-18 20:08:49 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3d484181
2021-12-18 20:08:49 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5b11a194
2021-12-18 20:08:49 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@5827af16
2021-12-18 20:08:49 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@53f48368
2021-12-18 20:08:49 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@53f48368
2021-12-18 20:08:49 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@73db4768
2021-12-18 20:08:49 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71b3bc45
2021-12-18 20:08:49 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a8c1f44
2021-12-18 20:08:49 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@150ab4ed
2021-12-18 20:08:49 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c435123
2021-12-18 20:08:49 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50fe837a
2021-12-18 20:08:49 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a62c01e
2021-12-18 20:08:49 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a8fa663
2021-12-18 20:08:49 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1433046b] into BootstrapContext; was [null]
2021-12-18 20:08:49 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3f446bef] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7829b776]
2021-12-18 20:08:49 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-12-18 20:08:49 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-18 20:08:49 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-18 20:08:49 WARN  [main]: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-18 20:08:49 INFO  [main]: HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/register_office]
2021-12-18 20:08:49 INFO  [main]: HHH10001001: Connection properties: {password=login456456, user=postgres}
2021-12-18 20:08:49 INFO  [main]: HHH10001003: Autocommit mode: false
2021-12-18 20:08:49 DEBUG [main]: Initializing Connection pool with 1 Connections
2021-12-18 20:08:49 INFO  [main]: HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-18 20:08:50 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-18 20:08:50 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-18 20:08:50 DEBUG [main]: JDBC version : 4.2
2021-12-18 20:08:50 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-18 20:08:50 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-18 20:08:50 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-18 20:08:50 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6f815e7f
2021-12-18 20:08:50 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6f815e7f
2021-12-18 20:08:50 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2e11485
2021-12-18 20:08:50 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b0964b2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48e7b3d2]
2021-12-18 20:08:50 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-18 20:08:50 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-18 20:08:50 DEBUG [main]: Import with entity name Person
2021-12-18 20:08:50 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for personId
2021-12-18 20:08:50 DEBUG [main]: Building property personId
2021-12-18 20:08:50 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-18 20:08:50 DEBUG [main]: Building property dateOfBirth
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for firstName
2021-12-18 20:08:50 DEBUG [main]: Building property firstName
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for lasName
2021-12-18 20:08:50 DEBUG [main]: Building property lasName
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 20:08:50 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-18 20:08:50 DEBUG [main]: Building property passports
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for patronymic
2021-12-18 20:08:50 DEBUG [main]: Building property patronymic
2021-12-18 20:08:50 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 20:08:50 DEBUG [main]: Import with entity name Passport
2021-12-18 20:08:50 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for passportId
2021-12-18 20:08:50 DEBUG [main]: Building property passportId
2021-12-18 20:08:50 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 20:08:50 DEBUG [main]: Building property issueDate
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-18 20:08:50 DEBUG [main]: Building property issueDepartment
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for number
2021-12-18 20:08:50 DEBUG [main]: Building property number
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Building property person
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for seria
2021-12-18 20:08:50 DEBUG [main]: Building property seria
2021-12-18 20:08:50 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-18 20:08:50 DEBUG [main]: Import with entity name PersonFemale
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 20:08:50 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-18 20:08:50 DEBUG [main]: Building property birthCertificates
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 20:08:50 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-18 20:08:50 DEBUG [main]: Building property marriageCertificates
2021-12-18 20:08:50 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 20:08:50 DEBUG [main]: Import with entity name BirthCertificate
2021-12-18 20:08:50 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-18 20:08:50 DEBUG [main]: Building property birthCertificateId
2021-12-18 20:08:50 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Building property father
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 20:08:50 DEBUG [main]: Building property issueDate
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Building property mother
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for number
2021-12-18 20:08:50 DEBUG [main]: Building property number
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Building property person
2021-12-18 20:08:50 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-18 20:08:50 DEBUG [main]: Import with entity name PersonMale
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 20:08:50 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-18 20:08:50 DEBUG [main]: Building property birthCertificates
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 20:08:50 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-18 20:08:50 DEBUG [main]: Building property marriageCertificates
2021-12-18 20:08:50 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 20:08:50 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-18 20:08:50 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-18 20:08:50 DEBUG [main]: Building property marriageCertificateId
2021-12-18 20:08:50 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for active
2021-12-18 20:08:50 DEBUG [main]: Building property active
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for endDate
2021-12-18 20:08:50 DEBUG [main]: Building property endDate
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Building property husband
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 20:08:50 DEBUG [main]: Building property issueDate
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 20:08:50 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-18 20:08:50 DEBUG [main]: building SimpleValue for number
2021-12-18 20:08:50 DEBUG [main]: Building property number
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-18 20:08:50 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-18 20:08:50 DEBUG [main]: Building property wife
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for active
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 20:08:50 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 20:08:50 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-18 20:08:50 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-18 20:08:50 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-18 20:08:50 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-18 20:08:50 DEBUG [main]: Building property birthCertificate
2021-12-18 20:08:50 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-18 20:08:50 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-18 20:08:50 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-18 20:08:50 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-18 20:08:50 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-18 20:08:50 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-18 20:08:50 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-18 20:08:50 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-18 20:08:50 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-18 20:08:50 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-18 20:08:50 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-18 20:08:50 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-18 20:08:50 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-18 20:08:50 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-18 20:08:50 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-18 20:08:50 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-18 20:08:50 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-18 20:08:50 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-18 20:08:50 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-18 20:08:50 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-18 20:08:50 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-18 20:08:50 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-18 20:08:50 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-18 20:08:50 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-18 20:08:50 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-18 20:08:50 DEBUG [main]: Processing association property references
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:08:50 DEBUG [main]: Processing association property references
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 20:08:50 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 20:08:50 DEBUG [main]: Building session factory
2021-12-18 20:08:50 DEBUG [main]: SessionFactory name : null
2021-12-18 20:08:50 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-18 20:08:50 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-18 20:08:50 DEBUG [main]: Statistics: disabled
2021-12-18 20:08:50 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-18 20:08:50 DEBUG [main]: Default entity-mode: pojo
2021-12-18 20:08:50 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-18 20:08:50 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-18 20:08:50 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-18 20:08:50 DEBUG [main]: Default batch fetch size: -1
2021-12-18 20:08:50 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-18 20:08:50 DEBUG [main]: Default null ordering: NONE
2021-12-18 20:08:50 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-18 20:08:50 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-18 20:08:50 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-18 20:08:50 DEBUG [main]: JTA Track by Thread: enabled
2021-12-18 20:08:50 DEBUG [main]: Query language substitutions: {}
2021-12-18 20:08:50 DEBUG [main]: Named query checking : enabled
2021-12-18 20:08:50 DEBUG [main]: Second-level cache: disabled
2021-12-18 20:08:50 DEBUG [main]: Second-level query cache: disabled
2021-12-18 20:08:50 DEBUG [main]: Second-level query cache factory: null
2021-12-18 20:08:50 DEBUG [main]: Second-level cache region prefix: null
2021-12-18 20:08:50 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-18 20:08:50 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-18 20:08:50 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-18 20:08:50 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-18 20:08:50 DEBUG [main]: JDBC batch size: 15
2021-12-18 20:08:50 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-18 20:08:50 DEBUG [main]: Scrollable result sets: enabled
2021-12-18 20:08:50 DEBUG [main]: Wrap result sets: disabled
2021-12-18 20:08:50 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-18 20:08:50 DEBUG [main]: JDBC result set fetch size: null
2021-12-18 20:08:50 DEBUG [main]: Connection release mode: AFTER_TRANSACTION
2021-12-18 20:08:50 DEBUG [main]: Generate SQL with comments: disabled
2021-12-18 20:08:50 DEBUG [main]: JPA compliance - query : disabled
2021-12-18 20:08:50 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-18 20:08:50 DEBUG [main]: JPA compliance - lists : disabled
2021-12-18 20:08:50 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-18 20:08:50 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 20:08:50 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 20:08:50 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-18 20:08:50 DEBUG [main]: Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/test-classes:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.p2/pool/plugins/org.junit_4.13.2.v20211018-1956.jar:/Users/asatutterin/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/asatutterin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/asatutterin/eclipse/java-2021-12/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/210/0/.cp:/Users/asatutterin/eclipse/java-2021-12/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/209/0/.cp, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 51413 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames register.dao.MarriageDaoTest, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=persistence, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.postgresql.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, hibernate.connection.username=****, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/register_office, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=persistence, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@bd1111a, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-18 20:08:50 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-18 20:08:50 DEBUG [main]: Instantiated session factory
2021-12-18 20:08:50 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b0964b2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47ad69f7]
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-18 20:08:50 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-18 20:08:50 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-18 20:08:50 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-18 20:08:50 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-18 20:08:50 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-18 20:08:50 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-18 20:08:50 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-18 20:08:50 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-18 20:08:50 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-18 20:08:50 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-18 20:08:50 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-18 20:08:50 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-18 20:08:50 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-18 20:08:50 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-18 20:08:50 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-18 20:08:50 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 20:08:50 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-18 20:08:50 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-18 20:08:50 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 20:08:50 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 20:08:50 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-18 20:08:50 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f40c00]
2021-12-18 20:08:50 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 20:08:50 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 20:08:50 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 20:08:50 DEBUG [main]: Visiting attribute path : passports
2021-12-18 20:08:50 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23a918c7]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ca372ef]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280d4882]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 20:08:51 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-18 20:08:51 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-18 20:08:51 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-18 20:08:51 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-18 20:08:51 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 20:08:51 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-18 20:08:51 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-18 20:08:51 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462abec3]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a4d582c]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : seria
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-18 20:08:51 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-18 20:08:51 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-18 20:08:51 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 20:08:51 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-18 20:08:51 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-18 20:08:51 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 20:08:51 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 20:08:51 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5626d18c]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : passports
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3dc95b8b]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d55e826]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d1ff6b1]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45f756e6]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@329548d0]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3003827c]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29b40b3]
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 20:08:51 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-18 20:08:51 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-18 20:08:51 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-18 20:08:51 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-18 20:08:51 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 20:08:51 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-18 20:08:51 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-18 20:08:51 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d247660]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : father
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d30c6f]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : mother
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1115433e]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fdca00a]
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-18 20:08:51 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-18 20:08:51 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:08:51 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-18 20:08:51 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 20:08:51 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-18 20:08:51 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-18 20:08:51 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 20:08:51 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 20:08:51 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@157ec23b]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : passports
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1dd74143]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@526a9908]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3166f664]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47ac613b]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d6fdd4]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66f28a1f]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a19573]
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 20:08:51 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-18 20:08:51 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-18 20:08:51 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-18 20:08:51 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-18 20:08:51 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-18 20:08:51 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-18 20:08:51 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-18 20:08:51 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a085e5]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : active
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : husband
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619f2afc]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : wife
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df921b1]
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-18 20:08:51 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bbd4791]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40a72ecd]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:08:51 DEBUG [main]: Property path deemed to be circular : person
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : seria
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-18 20:08:51 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d50a7ca]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51ab1ee3]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : father
2021-12-18 20:08:51 DEBUG [main]: Property path deemed to be circular : father
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : mother
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28757abd]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a02556]
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-18 20:08:51 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c8a7e38]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@138aa3cc]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : father
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f174dd2]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : mother
2021-12-18 20:08:51 DEBUG [main]: Property path deemed to be circular : mother
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : person
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1945113f]
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-18 20:08:51 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45aca496]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697173d9]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : active
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : husband
2021-12-18 20:08:51 DEBUG [main]: Property path deemed to be circular : husband
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : wife
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1db87583]
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-18 20:08:51 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fb53256]
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d6d1d42]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : active
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : husband
2021-12-18 20:08:51 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f894ad9]
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : number
2021-12-18 20:08:51 DEBUG [main]: Visiting attribute path : wife
2021-12-18 20:08:51 DEBUG [main]: Property path deemed to be circular : wife
2021-12-18 20:08:51 DEBUG [main]: Building LoadPlan...
2021-12-18 20:08:51 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 20:08:51 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-18 20:08:51 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-18 20:08:51 DEBUG [main]: No actions specified; doing nothing
2021-12-18 20:08:51 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-18 20:08:51 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-18 20:08:51 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-18 20:08:51 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-18 20:08:51 DEBUG [main]: Checking 1 named HQL queries
2021-12-18 20:08:51 DEBUG [main]: Checking named query: Person.findPersons
2021-12-18 20:08:51 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-18 20:08:51 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@753fd7a1
2021-12-18 20:08:51 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 20:08:51 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:08:51 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-18 20:08:51 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-18 20:08:51 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-18 20:08:51 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:08:51 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-18 20:08:51 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-18 20:08:51 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-18 20:08:51 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-18 20:08:51 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-18 20:08:51 DEBUG [main]: Resolved : p.passports -> .
2021-12-18 20:08:51 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-18 20:08:51 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:08:51 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-18 20:08:51 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-18 20:08:51 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-18 20:08:51 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-18 20:08:51 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-18 20:08:51 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-18 20:08:51 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:08:51 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 20:08:51 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@42f33b5d
2021-12-18 20:08:51 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-18 20:08:51 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-18 20:08:51 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-18 20:08:51 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-18 20:08:51 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-18 20:08:51 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-18 20:08:51 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-18 20:08:51 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-18 20:08:51 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@42f33b5d}

2021-12-18 20:08:51 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:08:51 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 20:08:51 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-18 20:08:51 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:08:51 DEBUG [main]: Checking 0 named SQL queries
2021-12-18 20:08:51 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 20:08:51 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4cffcc61
2021-12-18 20:08:51 DEBUG [main]: Registering SessionFactory: 1343cb18-6399-46fd-9078-242672fae1a2 (<unnamed>)
2021-12-18 20:08:51 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-18 20:08:51 INFO  [main]: findMarriageCertificate called
2021-12-18 20:08:51 DEBUG [main]: parse() - HQL: Select m from register.domain.MarriageCertificate m inner join m.husband inner join m.wife where m.husband.firstName='Александр'
2021-12-18 20:08:51 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:08:51 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'MarriageCertificate'
    |  |  |  \-[ALIAS] Node: 'm'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'm'
    |  |  |     \-[IDENT] Node: 'husband'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'm'
    |  |        \-[IDENT] Node: 'wife'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'm'
          |  |  \-[IDENT] Node: 'husband'
          |  \-[IDENT] Node: 'firstName'
          \-[QUOTED_STRING] Node: ''\u410\u43b\u435\u43a\u441\u430\u43d\u434\u440''

2021-12-18 20:08:51 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-18 20:08:51 DEBUG [main]: FromClause{level=1} : register.domain.MarriageCertificate (m) -> marriagece0_
2021-12-18 20:08:51 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:08:51 DEBUG [main]: getDataType() : husband -> org.hibernate.type.ManyToOneType(register.domain.PersonMale)
2021-12-18 20:08:51 DEBUG [main]: dereferenceEntityJoin() : generating join for husband in register.domain.MarriageCertificate (<no alias>) parent = [ {null} ]
2021-12-18 20:08:51 DEBUG [main]: FromClause{level=1} : register.domain.PersonMale (<no alias>) -> personmale1_
2021-12-18 20:08:51 DEBUG [main]: addJoinByPathMap() : m.husband -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_person,tableAlias=personmale1_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.husband_id,className=register.domain.PersonMale}}
2021-12-18 20:08:51 DEBUG [main]: Resolved : m.husband -> marriagece0_.husband_id
2021-12-18 20:08:51 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_person personmale1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.husband,tableName=ro_person,tableAlias=personmale1_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.husband_id,className=register.domain.PersonMale}}

2021-12-18 20:08:51 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:08:51 DEBUG [main]: getDataType() : wife -> org.hibernate.type.ManyToOneType(register.domain.PersonFemale)
2021-12-18 20:08:51 DEBUG [main]: dereferenceEntityJoin() : generating join for wife in register.domain.MarriageCertificate (<no alias>) parent = [ {null} ]
2021-12-18 20:08:51 DEBUG [main]: FromClause{level=1} : register.domain.PersonFemale (<no alias>) -> personfema2_
2021-12-18 20:08:51 DEBUG [main]: addJoinByPathMap() : m.wife -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_person,tableAlias=personfema2_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.wife_id,className=register.domain.PersonFemale}}
2021-12-18 20:08:51 DEBUG [main]: Resolved : m.wife -> marriagece0_.wife_id
2021-12-18 20:08:51 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_person personfema2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.wife,tableName=ro_person,tableAlias=personfema2_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.wife_id,className=register.domain.PersonFemale}}

2021-12-18 20:08:51 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:08:51 DEBUG [main]: Resolved : m -> marriagece0_.marriage_certificate_id
2021-12-18 20:08:51 DEBUG [main]: getDataType() : husband -> org.hibernate.type.ManyToOneType(register.domain.PersonMale)
2021-12-18 20:08:51 DEBUG [main]: dereferenceEntityJoin() : generating join for husband in register.domain.MarriageCertificate (<no alias>) parent = [  ( . ( . marriagece0_.marriage_certificate_id husband ) firstName ) ]
2021-12-18 20:08:51 DEBUG [main]: Resolved : m.husband -> marriagece0_.husband_id
2021-12-18 20:08:51 DEBUG [main]: getDataType() : firstName -> org.hibernate.type.StringType@2a7686a7
2021-12-18 20:08:51 DEBUG [main]: Resolved : m.husband.firstName -> personmale1_.first_name
2021-12-18 20:08:51 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-18 20:08:51 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} marriagece0_.marriage_certificate_id ) ( FromClause{level=1} ( ro_marriage_certificate marriagece0_ ( ro_person personmale1_ ro_person personfema2_ ) ) ) ( where ( = ( personmale1_.first_name ( marriagece0_.husband_id marriagece0_.marriage_certificate_id husband ) firstName ) 'Александр' ) ) )
2021-12-18 20:08:51 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MarriageCertificate): [ro_marriage_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.MarriageCertificate)
    |  | originalText: m
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.PersonMale)
          | path: m.husband.firstName
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(register.domain.PersonMale)
          |  | path: m.husband
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(register.domain.MarriageCertificate)
          |  |  | originalText: m
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: husband
          |  \-IdentNode
          |    persister: null
          |    originalText: firstName
          \-LiteralNode

2021-12-18 20:08:51 DEBUG [main]: Using FROM fragment [ro_marriage_certificate marriagece0_]
2021-12-18 20:08:51 DEBUG [main]: Using FROM fragment [inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id]
2021-12-18 20:08:51 DEBUG [main]: Using FROM fragment [inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id]
2021-12-18 20:08:51 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-18 20:08:51 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_marriage_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'marriagece0_.marriage_certificate_id as marriage1_1_' {alias=m, className=register.domain.MarriageCertificate, tableAlias=marriagece0_}
    |  \-[SQL_TOKEN] SqlFragment: 'marriagece0_.active as active2_1_, marriagece0_.end_date as end_date3_1_, marriagece0_.husband_id as husband_6_1_, marriagece0_.issue_date as issue_da4_1_, marriagece0_.number_certificate as number_c5_1_, marriagece0_.wife_id as wife_id7_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[m], fromElementByTableAlias=[personfema2_, marriagece0_, personmale1_], fromElementsByPath=[m.husband, m.wife], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_marriage_certificate marriagece0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=ro_marriage_certificate,tableAlias=marriagece0_,origin=null,columns={,className=register.domain.MarriageCertificate}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.husband,tableName=ro_person,tableAlias=personmale1_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.husband_id,className=register.domain.PersonMale}}
    |        \-[JOIN_FRAGMENT] FromElement: 'inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.MarriageCertificate.wife,tableName=ro_person,tableAlias=personfema2_,origin=ro_marriage_certificate marriagece0_,columns={marriagece0_.wife_id,className=register.domain.PersonFemale}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'personmale1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=m.husband.firstName,tableAlias=personmale1_,className=register.domain.PersonMale,classAlias=null}
          |  +-[DOT] DotNode: 'marriagece0_.husband_id' {propertyName=husband,dereferenceType=ENTITY,getPropertyPath=husband,path=m.husband,tableAlias=personmale1_,className=register.domain.PersonMale,classAlias=null}
          |  |  +-[ALIAS_REF] IdentNode: 'marriagece0_.marriage_certificate_id' {alias=m, className=register.domain.MarriageCertificate, tableAlias=marriagece0_}
          |  |  \-[IDENT] IdentNode: 'husband' {originalText=husband}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[QUOTED_STRING] LiteralNode: ''\u410\u43b\u435\u43a\u441\u430\u43d\u434\u440''

2021-12-18 20:08:51 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:08:51 DEBUG [main]: HQL: Select m from register.domain.MarriageCertificate m inner join m.husband inner join m.wife where m.husband.firstName='Александр'
2021-12-18 20:08:51 DEBUG [main]: SQL: select marriagece0_.marriage_certificate_id as marriage1_1_, marriagece0_.active as active2_1_, marriagece0_.end_date as end_date3_1_, marriagece0_.husband_id as husband_6_1_, marriagece0_.issue_date as issue_da4_1_, marriagece0_.number_certificate as number_c5_1_, marriagece0_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece0_ inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id where personmale1_.first_name='Александр'
2021-12-18 20:08:51 DEBUG [main]: throwQueryException() : no errors
2021-12-18 20:08:51 DEBUG [main]: select marriagece0_.marriage_certificate_id as marriage1_1_, marriagece0_.active as active2_1_, marriagece0_.end_date as end_date3_1_, marriagece0_.husband_id as husband_6_1_, marriagece0_.issue_date as issue_da4_1_, marriagece0_.number_certificate as number_c5_1_, marriagece0_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece0_ inner join ro_person personmale1_ on marriagece0_.husband_id=personmale1_.person_id inner join ro_person personfema2_ on marriagece0_.wife_id=personfema2_.person_id where personmale1_.first_name='Александр'
2021-12-18 20:08:51 DEBUG [main]: Result set row: 0
2021-12-18 20:08:51 DEBUG [main]: Result row: EntityKey[register.domain.MarriageCertificate#1]
2021-12-18 20:08:51 DEBUG [main]: Resolving attributes for [register.domain.MarriageCertificate#1]
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `active` : value = true
2021-12-18 20:08:51 DEBUG [main]: Attribute (`active`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `endDate` : value = null
2021-12-18 20:08:51 DEBUG [main]: Attribute (`endDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `husband` : value = 2
2021-12-18 20:08:51 DEBUG [main]: Attribute (`husband`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `issueDate` : value = 2019-11-12
2021-12-18 20:08:51 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `number` : value = 322332
2021-12-18 20:08:51 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `wife` : value = 3
2021-12-18 20:08:51 DEBUG [main]: Attribute (`wife`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Done materializing entity [register.domain.MarriageCertificate#1]
2021-12-18 20:08:51 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:08:51 DEBUG [main]: Initializing proxy: [register.domain.PersonMale#2]
2021-12-18 20:08:51 DEBUG [main]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-18 20:08:51 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:08:51 DEBUG [main]: Resolving attributes for [register.domain.PersonMale#2]
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2001-06-08
2021-12-18 20:08:51 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `firstName` : value = Александр
2021-12-18 20:08:51 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `lasName` : value = Кротов
2021-12-18 20:08:51 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:08:51 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `patronymic` : value = Витальевич
2021-12-18 20:08:51 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `birthCertificate` : value = 2
2021-12-18 20:08:51 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#2]
2021-12-18 20:08:51 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:08:51 DEBUG [main]: Done entity load
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:08:51 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:08:51 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Done materializing entity [register.domain.PersonMale#2]
2021-12-18 20:08:51 DEBUG [main]: Done entity load : register.domain.PersonMale#2
2021-12-18 20:08:51 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 20:08:51 DEBUG [main]: Initializing proxy: [register.domain.PersonFemale#3]
2021-12-18 20:08:51 DEBUG [main]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-18 20:08:51 DEBUG [main]: On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-18 20:08:51 DEBUG [main]: Resolving attributes for [register.domain.PersonFemale#3]
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2000-01-03
2021-12-18 20:08:51 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `firstName` : value = Василиса
2021-12-18 20:08:51 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `lasName` : value = Кротова
2021-12-18 20:08:51 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 20:08:51 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `patronymic` : value = Николаевна
2021-12-18 20:08:51 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `birthCertificate` : value = 3
2021-12-18 20:08:51 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Loading entity: [register.domain.BirthCertificate#3]
2021-12-18 20:08:51 DEBUG [main]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 20:08:51 DEBUG [main]: Done entity load
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:08:51 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 20:08:51 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 20:08:51 DEBUG [main]: Done materializing entity [register.domain.PersonFemale#3]
2021-12-18 20:08:51 DEBUG [main]: Done entity load : register.domain.PersonFemale#3
2021-12-18 20:08:51 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 22:48:29 INFO  [main]: findMarriageCertificate called
2021-12-18 22:49:47 INFO  [main]: findMarriageCertificate called
2021-12-18 22:51:06 INFO  [main]: findMarriageCertificate called
2021-12-18 23:13:27 INFO  [main]: TEST start
2021-12-18 23:13:27 DEBUG [main]: Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-18 23:13:27 DEBUG [main]: Located and parsed 1 persistence units; checking each
2021-12-18 23:13:27 DEBUG [main]: Checking persistence-unit [name=persistence, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [persistence]
2021-12-18 23:13:27 DEBUG [main]: Persistence-unit [persistence] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2021-12-18 23:13:27 DEBUG [main]: PersistenceUnitInfo [
	name: persistence
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: login456456
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/register_office
		hibernate.show_sql: true
		hibernate.format_sql: false
		javax.persistence.jdbc.user: postgres]
2021-12-18 23:13:27 DEBUG [main]: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-18 23:13:27 DEBUG [main]: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-18 23:13:27 DEBUG [main]: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-18 23:13:27 INFO  [main]: HHH000412: Hibernate ORM core version 5.6.1.Final
2021-12-18 23:13:27 DEBUG [main]: HHH000206: hibernate.properties not found
2021-12-18 23:13:27 DEBUG [main]: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-18 23:13:28 DEBUG [main]: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-12-18 23:13:28 DEBUG [main]: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-18 23:13:28 INFO  [main]: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-18 23:13:28 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@340da44c
2021-12-18 23:13:28 DEBUG [main]: Adding type registration boolean -> org.hibernate.type.BooleanType@340da44c
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@340da44c
2021-12-18 23:13:28 DEBUG [main]: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7a560583
2021-12-18 23:13:28 DEBUG [main]: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d97a632
2021-12-18 23:13:28 DEBUG [main]: Adding type registration yes_no -> org.hibernate.type.YesNoType@7e5d9a50
2021-12-18 23:13:28 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@40dff0b7
2021-12-18 23:13:28 DEBUG [main]: Adding type registration byte -> org.hibernate.type.ByteType@40dff0b7
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40dff0b7
2021-12-18 23:13:28 DEBUG [main]: Adding type registration character -> org.hibernate.type.CharacterType@366c4480
2021-12-18 23:13:28 DEBUG [main]: Adding type registration char -> org.hibernate.type.CharacterType@366c4480
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@366c4480
2021-12-18 23:13:28 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@5c08c46a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration short -> org.hibernate.type.ShortType@5c08c46a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5c08c46a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration integer -> org.hibernate.type.IntegerType@c35172e
2021-12-18 23:13:28 DEBUG [main]: Adding type registration int -> org.hibernate.type.IntegerType@c35172e
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@c35172e
2021-12-18 23:13:28 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@6f2cfcc2
2021-12-18 23:13:28 DEBUG [main]: Adding type registration long -> org.hibernate.type.LongType@6f2cfcc2
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f2cfcc2
2021-12-18 23:13:28 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@7c1e2a2d
2021-12-18 23:13:28 DEBUG [main]: Adding type registration float -> org.hibernate.type.FloatType@7c1e2a2d
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7c1e2a2d
2021-12-18 23:13:28 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@3d9f6567
2021-12-18 23:13:28 DEBUG [main]: Adding type registration double -> org.hibernate.type.DoubleType@3d9f6567
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3d9f6567
2021-12-18 23:13:28 DEBUG [main]: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7e276594
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7e276594
2021-12-18 23:13:28 DEBUG [main]: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@555cf22
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@555cf22
2021-12-18 23:13:28 DEBUG [main]: Adding type registration string -> org.hibernate.type.StringType@54e22bdd
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.String -> org.hibernate.type.StringType@54e22bdd
2021-12-18 23:13:28 DEBUG [main]: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e61d218
2021-12-18 23:13:28 DEBUG [main]: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2e554a3b
2021-12-18 23:13:28 DEBUG [main]: Adding type registration url -> org.hibernate.type.UrlType@5ddea849
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5ddea849
2021-12-18 23:13:28 DEBUG [main]: Adding type registration Duration -> org.hibernate.type.DurationType@37ddb69a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@37ddb69a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration Instant -> org.hibernate.type.InstantType@c5ee75e
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@c5ee75e
2021-12-18 23:13:28 DEBUG [main]: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@435fb7b5
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@435fb7b5
2021-12-18 23:13:28 DEBUG [main]: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47a86fbb
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47a86fbb
2021-12-18 23:13:28 DEBUG [main]: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@32c8e539
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@32c8e539
2021-12-18 23:13:28 DEBUG [main]: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2eced48b
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2eced48b
2021-12-18 23:13:28 DEBUG [main]: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4bd1f8dd
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4bd1f8dd
2021-12-18 23:13:28 DEBUG [main]: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e98770d
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e98770d
2021-12-18 23:13:28 DEBUG [main]: Adding type registration date -> org.hibernate.type.DateType@1d0d6318
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.sql.Date -> org.hibernate.type.DateType@1d0d6318
2021-12-18 23:13:28 DEBUG [main]: Adding type registration time -> org.hibernate.type.TimeType@1522d8a0
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1522d8a0
2021-12-18 23:13:28 DEBUG [main]: Adding type registration timestamp -> org.hibernate.type.TimestampType@11981797
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11981797
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11981797
2021-12-18 23:13:28 DEBUG [main]: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@aeab9a1
2021-12-18 23:13:28 DEBUG [main]: Adding type registration calendar -> org.hibernate.type.CalendarType@2a2c13a8
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a2c13a8
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a2c13a8
2021-12-18 23:13:28 DEBUG [main]: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3543df7d
2021-12-18 23:13:28 DEBUG [main]: Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5bd82fed
2021-12-18 23:13:28 DEBUG [main]: Adding type registration locale -> org.hibernate.type.LocaleType@17a87e37
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@17a87e37
2021-12-18 23:13:28 DEBUG [main]: Adding type registration currency -> org.hibernate.type.CurrencyType@75b25825
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75b25825
2021-12-18 23:13:28 DEBUG [main]: Adding type registration timezone -> org.hibernate.type.TimeZoneType@77a98a6a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77a98a6a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration class -> org.hibernate.type.ClassType@5a7005d
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a7005d
2021-12-18 23:13:28 DEBUG [main]: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3fa2213
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3fa2213
2021-12-18 23:13:28 DEBUG [main]: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@320de594
2021-12-18 23:13:28 DEBUG [main]: Adding type registration binary -> org.hibernate.type.BinaryType@665df3c6
2021-12-18 23:13:28 DEBUG [main]: Adding type registration byte[] -> org.hibernate.type.BinaryType@665df3c6
2021-12-18 23:13:28 DEBUG [main]: Adding type registration [B -> org.hibernate.type.BinaryType@665df3c6
2021-12-18 23:13:28 DEBUG [main]: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1bb564e2
2021-12-18 23:13:28 DEBUG [main]: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1bb564e2
2021-12-18 23:13:28 DEBUG [main]: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1bb564e2
2021-12-18 23:13:28 DEBUG [main]: Adding type registration row_version -> org.hibernate.type.RowVersionType@1af146
2021-12-18 23:13:28 DEBUG [main]: Adding type registration image -> org.hibernate.type.ImageType@72758afa
2021-12-18 23:13:28 DEBUG [main]: Adding type registration characters -> org.hibernate.type.CharArrayType@29df4d43
2021-12-18 23:13:28 DEBUG [main]: Adding type registration char[] -> org.hibernate.type.CharArrayType@29df4d43
2021-12-18 23:13:28 DEBUG [main]: Adding type registration [C -> org.hibernate.type.CharArrayType@29df4d43
2021-12-18 23:13:28 DEBUG [main]: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4a891c97
2021-12-18 23:13:28 DEBUG [main]: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4a891c97
2021-12-18 23:13:28 DEBUG [main]: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4a891c97
2021-12-18 23:13:28 DEBUG [main]: Adding type registration text -> org.hibernate.type.TextType@7756c3cd
2021-12-18 23:13:28 DEBUG [main]: Adding type registration ntext -> org.hibernate.type.NTextType@57fd91c9
2021-12-18 23:13:28 DEBUG [main]: Adding type registration blob -> org.hibernate.type.BlobType@62163b39
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62163b39
2021-12-18 23:13:28 DEBUG [main]: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4504d271
2021-12-18 23:13:28 DEBUG [main]: Adding type registration clob -> org.hibernate.type.ClobType@2262b621
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2262b621
2021-12-18 23:13:28 DEBUG [main]: Adding type registration nclob -> org.hibernate.type.NClobType@63b1d4fa
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@63b1d4fa
2021-12-18 23:13:28 DEBUG [main]: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@183e8023
2021-12-18 23:13:28 DEBUG [main]: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b78a709
2021-12-18 23:13:28 DEBUG [main]: Adding type registration serializable -> org.hibernate.type.SerializableType@1f2f9244
2021-12-18 23:13:28 DEBUG [main]: Adding type registration object -> org.hibernate.type.ObjectType@422c3c7a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@422c3c7a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75d0911a
2021-12-18 23:13:28 DEBUG [main]: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75e91545
2021-12-18 23:13:28 DEBUG [main]: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@60d1a32f
2021-12-18 23:13:28 DEBUG [main]: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@531c311e
2021-12-18 23:13:28 DEBUG [main]: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@22b53226
2021-12-18 23:13:28 DEBUG [main]: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1fcb4808
2021-12-18 23:13:28 DEBUG [main]: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@726e5805
2021-12-18 23:13:28 DEBUG [main]: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40c80397
2021-12-18 23:13:28 DEBUG [main]: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@66ce957f] into BootstrapContext; was [null]
2021-12-18 23:13:28 DEBUG [main]: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@55b5f5d2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5bfa8cc5]
2021-12-18 23:13:28 DEBUG [main]: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-12-18 23:13:28 DEBUG [main]: ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-18 23:13:28 DEBUG [main]: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-18 23:13:28 WARN  [main]: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-18 23:13:28 INFO  [main]: HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/register_office]
2021-12-18 23:13:28 INFO  [main]: HHH10001001: Connection properties: {password=login456456, user=postgres}
2021-12-18 23:13:28 INFO  [main]: HHH10001003: Autocommit mode: false
2021-12-18 23:13:28 DEBUG [main]: Initializing Connection pool with 1 Connections
2021-12-18 23:13:28 INFO  [main]: HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-18 23:13:28 DEBUG [main]: Database ->
       name : PostgreSQL
    version : 14.1
      major : 14
      minor : 1
2021-12-18 23:13:28 DEBUG [main]: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.1
      major : 42
      minor : 3
2021-12-18 23:13:28 DEBUG [main]: JDBC version : 4.2
2021-12-18 23:13:28 INFO  [main]: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-12-18 23:13:28 DEBUG [main]: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-12-18 23:13:28 DEBUG [main]: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-12-18 23:13:28 DEBUG [main]: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@78f9ed3e
2021-12-18 23:13:28 DEBUG [main]: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@78f9ed3e
2021-12-18 23:13:28 DEBUG [main]: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3fa2213
2021-12-18 23:13:28 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f2afe62] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@c96a4ea]
2021-12-18 23:13:28 DEBUG [main]: Binding entity from annotated class: register.domain.Person
2021-12-18 23:13:28 DEBUG [main]: Binding named query: Person.findPersons => SELECT p FROM Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'sex', discriminatorTypeName='integer'}
2021-12-18 23:13:28 DEBUG [main]: Import with entity name Person
2021-12-18 23:13:28 DEBUG [main]: Bind entity register.domain.Person on table ro_person
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-18 23:13:28 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-18 23:13:28 DEBUG [main]: MetadataSourceProcessor property personId with lazy=false
2021-12-18 23:13:28 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:personId]
2021-12-18 23:13:28 DEBUG [main]: building SimpleValue for personId
2021-12-18 23:13:28 DEBUG [main]: Building property personId
2021-12-18 23:13:28 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), personId, identity, , ...)
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificate, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: MetadataSourceProcessor property dateOfBirth with lazy=false
2021-12-18 23:13:28 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:dateOfBirth]
2021-12-18 23:13:28 DEBUG [main]: building SimpleValue for dateOfBirth
2021-12-18 23:13:28 DEBUG [main]: Building property dateOfBirth
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: MetadataSourceProcessor property firstName with lazy=false
2021-12-18 23:13:28 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:firstName]
2021-12-18 23:13:28 DEBUG [main]: building SimpleValue for firstName
2021-12-18 23:13:28 DEBUG [main]: Building property firstName
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: MetadataSourceProcessor property lasName with lazy=false
2021-12-18 23:13:28 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:lasName]
2021-12-18 23:13:28 DEBUG [main]: building SimpleValue for lasName
2021-12-18 23:13:28 DEBUG [main]: Building property lasName
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=passports_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='passports_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='person'}
2021-12-18 23:13:28 DEBUG [main]: Collection role: register.domain.Person.passports
2021-12-18 23:13:28 DEBUG [main]: Building property passports
2021-12-18 23:13:28 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=patronymic, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:28 DEBUG [main]: MetadataSourceProcessor property patronymic with lazy=false
2021-12-18 23:13:28 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Person:patronymic]
2021-12-18 23:13:28 DEBUG [main]: building SimpleValue for patronymic
2021-12-18 23:13:28 DEBUG [main]: Building property patronymic
2021-12-18 23:13:29 DEBUG [main]: Binding entity from annotated class: register.domain.Passport
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 23:13:29 DEBUG [main]: Import with entity name Passport
2021-12-18 23:13:29 DEBUG [main]: Bind entity register.domain.Passport on table ro_passport
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=passport_id, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property passportId with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:passportId]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for passportId
2021-12-18 23:13:29 DEBUG [main]: Building property passportId
2021-12-18 23:13:29 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(passport_id)]), passportId, identity, , ...)
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDate]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 23:13:29 DEBUG [main]: Building property issueDate
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=issue_department, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property issueDepartment with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:issueDepartment]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for issueDepartment
2021-12-18 23:13:29 DEBUG [main]: Building property issueDepartment
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:number]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for number
2021-12-18 23:13:29 DEBUG [main]: Building property number
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Building property person
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_passport), mappingColumn=seria, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property seria with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.Passport:seria]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for seria
2021-12-18 23:13:29 DEBUG [main]: Building property seria
2021-12-18 23:13:29 DEBUG [main]: Binding entity from annotated class: register.domain.PersonFemale
2021-12-18 23:13:29 DEBUG [main]: Import with entity name PersonFemale
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mother'}
2021-12-18 23:13:29 DEBUG [main]: Collection role: register.domain.PersonFemale.birthCertificates
2021-12-18 23:13:29 DEBUG [main]: Building property birthCertificates
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='wife'}
2021-12-18 23:13:29 DEBUG [main]: Collection role: register.domain.PersonFemale.marriageCertificates
2021-12-18 23:13:29 DEBUG [main]: Building property marriageCertificates
2021-12-18 23:13:29 DEBUG [main]: Binding entity from annotated class: register.domain.BirthCertificate
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 23:13:29 DEBUG [main]: Import with entity name BirthCertificate
2021-12-18 23:13:29 DEBUG [main]: Bind entity register.domain.BirthCertificate on table ro_birth_certificate
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=birth_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property birthCertificateId with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:birthCertificateId]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for birthCertificateId
2021-12-18 23:13:29 DEBUG [main]: Building property birthCertificateId
2021-12-18 23:13:29 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(birth_certificate_id)]), birthCertificateId, identity, , ...)
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='father_id', referencedColumn='', mappedBy=''}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=father, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Building property father
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:issueDate]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 23:13:29 DEBUG [main]: Building property issueDate
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='mother_id', referencedColumn='', mappedBy=''}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=mother, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Building property mother
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.BirthCertificate:number]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for number
2021-12-18 23:13:29 DEBUG [main]: Building property number
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_birth_certificate), mappingColumn=person, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Building property person
2021-12-18 23:13:29 DEBUG [main]: Binding entity from annotated class: register.domain.PersonMale
2021-12-18 23:13:29 DEBUG [main]: Import with entity name PersonMale
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=birthCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='birthCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='father'}
2021-12-18 23:13:29 DEBUG [main]: Collection role: register.domain.PersonMale.birthCertificates
2021-12-18 23:13:29 DEBUG [main]: Building property birthCertificates
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_person), mappingColumn=marriageCertificates_KEY, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='marriageCertificates_KEY', referencedColumn='null', mappedBy='null'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='husband'}
2021-12-18 23:13:29 DEBUG [main]: Collection role: register.domain.PersonMale.marriageCertificates
2021-12-18 23:13:29 DEBUG [main]: Building property marriageCertificates
2021-12-18 23:13:29 DEBUG [main]: Binding entity from annotated class: register.domain.MarriageCertificate
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-18 23:13:29 DEBUG [main]: Import with entity name MarriageCertificate
2021-12-18 23:13:29 DEBUG [main]: Bind entity register.domain.MarriageCertificate on table ro_marriage_certificate
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=marriage_certificate_id, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property marriageCertificateId with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:marriageCertificateId]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for marriageCertificateId
2021-12-18 23:13:29 DEBUG [main]: Building property marriageCertificateId
2021-12-18 23:13:29 DEBUG [main]: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(marriage_certificate_id)]), marriageCertificateId, identity, , ...)
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=active, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property active with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:active]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for active
2021-12-18 23:13:29 DEBUG [main]: Building property active
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=end_date, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property endDate with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:endDate]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for endDate
2021-12-18 23:13:29 DEBUG [main]: Building property endDate
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='husband_id', referencedColumn='', mappedBy=''}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=husband, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Building property husband
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=issue_date, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property issueDate with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:issueDate]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for issueDate
2021-12-18 23:13:29 DEBUG [main]: Building property issueDate
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=number_certificate, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: MetadataSourceProcessor property number with lazy=false
2021-12-18 23:13:29 DEBUG [main]: Attempting to locate auto-apply AttributeConverter for property [register.domain.MarriageCertificate:number]
2021-12-18 23:13:29 DEBUG [main]: building SimpleValue for number
2021-12-18 23:13:29 DEBUG [main]: Building property number
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3JoinColumn{logicalColumnName='wife_id', referencedColumn='', mappedBy=''}
2021-12-18 23:13:29 DEBUG [main]: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ro_marriage_certificate), mappingColumn=wife, insertable=true, updatable=true, unique=false}
2021-12-18 23:13:29 DEBUG [main]: Building property wife
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for personId
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for dateOfBirth
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for firstName
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for lasName
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for patronymic
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for passportId
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for issueDepartment
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for seria
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for birthCertificateId
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for marriageCertificateId
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for active
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for endDate
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for issueDate
2021-12-18 23:13:29 DEBUG [main]: Starting fillSimpleValue for number
2021-12-18 23:13:29 DEBUG [main]: Forcing column [person_id] to be non-null as it is part of the primary key for table [ro_person]
2021-12-18 23:13:29 DEBUG [main]: Forcing column [passport_id] to be non-null as it is part of the primary key for table [ro_passport]
2021-12-18 23:13:29 DEBUG [main]: Forcing column [birth_certificate_id] to be non-null as it is part of the primary key for table [ro_birth_certificate]
2021-12-18 23:13:29 DEBUG [main]: Forcing column [marriage_certificate_id] to be non-null as it is part of the primary key for table [ro_marriage_certificate]
2021-12-18 23:13:29 DEBUG [main]: Building property birthCertificate
2021-12-18 23:13:29 DEBUG [main]: Second pass for collection: register.domain.Person.passports
2021-12-18 23:13:29 DEBUG [main]: Binding a OneToMany: register.domain.Person.passports through a foreign key
2021-12-18 23:13:29 DEBUG [main]: Mapping collection: register.domain.Person.passports -> ro_passport
2021-12-18 23:13:29 DEBUG [main]: Retrieving property register.domain.Passport.person
2021-12-18 23:13:29 DEBUG [main]: Mapped collection key: person_id, one-to-many: register.domain.Passport
2021-12-18 23:13:29 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.birthCertificates
2021-12-18 23:13:29 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.birthCertificates through a foreign key
2021-12-18 23:13:29 DEBUG [main]: Mapping collection: register.domain.PersonFemale.birthCertificates -> ro_birth_certificate
2021-12-18 23:13:29 DEBUG [main]: Retrieving property register.domain.BirthCertificate.mother
2021-12-18 23:13:29 DEBUG [main]: Mapped collection key: mother_id, one-to-many: register.domain.BirthCertificate
2021-12-18 23:13:29 DEBUG [main]: Second pass for collection: register.domain.PersonFemale.marriageCertificates
2021-12-18 23:13:29 DEBUG [main]: Binding a OneToMany: register.domain.PersonFemale.marriageCertificates through a foreign key
2021-12-18 23:13:29 DEBUG [main]: Mapping collection: register.domain.PersonFemale.marriageCertificates -> ro_marriage_certificate
2021-12-18 23:13:29 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.wife
2021-12-18 23:13:29 DEBUG [main]: Mapped collection key: wife_id, one-to-many: register.domain.MarriageCertificate
2021-12-18 23:13:29 DEBUG [main]: Second pass for collection: register.domain.PersonMale.birthCertificates
2021-12-18 23:13:29 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.birthCertificates through a foreign key
2021-12-18 23:13:29 DEBUG [main]: Mapping collection: register.domain.PersonMale.birthCertificates -> ro_birth_certificate
2021-12-18 23:13:29 DEBUG [main]: Retrieving property register.domain.BirthCertificate.father
2021-12-18 23:13:29 DEBUG [main]: Mapped collection key: father_id, one-to-many: register.domain.BirthCertificate
2021-12-18 23:13:29 DEBUG [main]: Second pass for collection: register.domain.PersonMale.marriageCertificates
2021-12-18 23:13:29 DEBUG [main]: Binding a OneToMany: register.domain.PersonMale.marriageCertificates through a foreign key
2021-12-18 23:13:29 DEBUG [main]: Mapping collection: register.domain.PersonMale.marriageCertificates -> ro_marriage_certificate
2021-12-18 23:13:29 DEBUG [main]: Retrieving property register.domain.MarriageCertificate.husband
2021-12-18 23:13:29 DEBUG [main]: Mapped collection key: husband_id, one-to-many: register.domain.MarriageCertificate
2021-12-18 23:13:29 DEBUG [main]: Processing association property references
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 23:13:29 DEBUG [main]: Processing association property references
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.PersonMale
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.PersonFemale
2021-12-18 23:13:29 DEBUG [main]: Resolving reference to class: register.domain.Person
2021-12-18 23:13:29 DEBUG [main]: Building session factory
2021-12-18 23:13:29 DEBUG [main]: SessionFactory name : null
2021-12-18 23:13:29 DEBUG [main]: Automatic flush during beforeCompletion(): enabled
2021-12-18 23:13:29 DEBUG [main]: Automatic session close at end of transaction: disabled
2021-12-18 23:13:29 DEBUG [main]: Statistics: disabled
2021-12-18 23:13:29 DEBUG [main]: Deleted entity synthetic identifier rollback: disabled
2021-12-18 23:13:29 DEBUG [main]: Default entity-mode: pojo
2021-12-18 23:13:29 DEBUG [main]: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-18 23:13:29 DEBUG [main]: Allow initialization of lazy state outside session : disabled
2021-12-18 23:13:29 DEBUG [main]: Using BatchFetchStyle : LEGACY
2021-12-18 23:13:29 DEBUG [main]: Default batch fetch size: -1
2021-12-18 23:13:29 DEBUG [main]: Maximum outer join fetch depth: null
2021-12-18 23:13:29 DEBUG [main]: Default null ordering: NONE
2021-12-18 23:13:29 DEBUG [main]: Order SQL updates by primary key: disabled
2021-12-18 23:13:29 DEBUG [main]: Order SQL inserts for batching: disabled
2021-12-18 23:13:29 DEBUG [main]: multi-tenancy strategy : NONE
2021-12-18 23:13:29 DEBUG [main]: JTA Track by Thread: enabled
2021-12-18 23:13:29 DEBUG [main]: Query language substitutions: {}
2021-12-18 23:13:29 DEBUG [main]: Named query checking : enabled
2021-12-18 23:13:29 DEBUG [main]: Second-level cache: disabled
2021-12-18 23:13:29 DEBUG [main]: Second-level query cache: disabled
2021-12-18 23:13:29 DEBUG [main]: Second-level query cache factory: null
2021-12-18 23:13:29 DEBUG [main]: Second-level cache region prefix: null
2021-12-18 23:13:29 DEBUG [main]: Optimize second-level cache for minimal puts: disabled
2021-12-18 23:13:29 DEBUG [main]: Structured second-level cache entries: disabled
2021-12-18 23:13:29 DEBUG [main]: Second-level cache direct-reference entries: disabled
2021-12-18 23:13:29 DEBUG [main]: Automatic eviction of collection cache: disabled
2021-12-18 23:13:29 DEBUG [main]: JDBC batch size: 15
2021-12-18 23:13:29 DEBUG [main]: JDBC batch updates for versioned data: enabled
2021-12-18 23:13:29 DEBUG [main]: Scrollable result sets: enabled
2021-12-18 23:13:29 DEBUG [main]: Wrap result sets: disabled
2021-12-18 23:13:29 DEBUG [main]: JDBC3 getGeneratedKeys(): enabled
2021-12-18 23:13:29 DEBUG [main]: JDBC result set fetch size: null
2021-12-18 23:13:29 DEBUG [main]: Connection release mode: AFTER_TRANSACTION
2021-12-18 23:13:29 DEBUG [main]: Generate SQL with comments: disabled
2021-12-18 23:13:29 DEBUG [main]: JPA compliance - query : disabled
2021-12-18 23:13:29 DEBUG [main]: JPA compliance - closed-handling : disabled
2021-12-18 23:13:29 DEBUG [main]: JPA compliance - lists : disabled
2021-12-18 23:13:29 DEBUG [main]: JPA compliance - transactions : disabled
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-18 23:13:29 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 23:13:29 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 23:13:29 DEBUG [main]: Session factory constructed with filter configurations : {}
2021-12-18 23:13:29 DEBUG [main]: Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/test-classes:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/asatutterin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=Europe/Moscow, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre/lib, sun.java.command=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/surefire/surefirebooter17825551946380736645.jar /Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/surefire/surefire6350940469509598154tmp /Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/surefire/surefire_05372853720082213272tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/test-classes:/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/classes:/Users/asatutterin/.m2/repository/org/postgresql/postgresql/42.3.1/postgresql-42.3.1.jar:/Users/asatutterin/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/hibernate-core/5.6.1.Final/hibernate-core-5.6.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/asatutterin/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/asatutterin/.m2/repository/net/bytebuddy/byte-buddy/1.11.20/byte-buddy-1.11.20.jar:/Users/asatutterin/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/asatutterin/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/asatutterin/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/asatutterin/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/asatutterin/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/asatutterin/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/asatutterin/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/asatutterin/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/asatutterin/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/asatutterin/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/asatutterin/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/Users/asatutterin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/Users/asatutterin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/asatutterin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/asatutterin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/asatutterin/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=/Users/asatutterin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-10-19, java.home=/Users/asatutterin/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_17.0.1.v20211116-1657/jre, file.separator=/, basedir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=persistence, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.postgresql.Driver, surefire.real.class.path=/Users/asatutterin/Desktop/studproj/ext-systems/register-office/target/surefire/surefirebooter17825551946380736645.jar, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.1+12, user.name=asatutterin, path.separator=:, hibernate.connection.username=****, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/register_office, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=persistence, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.1+12, localRepository=/Users/asatutterin/.m2/repository, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/3q/52vqmm754wd6_fl2ntkf713r0000gn/T/, java.version=17.0.1, user.dir=/Users/asatutterin/Desktop/studproj/ext-systems/register-office, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/register_office, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@64355120, native.encoding=UTF-8, java.library.path=/Users/asatutterin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=17.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2021-12-18 23:13:29 DEBUG [main]: Skipping JACC integration as it was not enabled
2021-12-18 23:13:29 DEBUG [main]: Instantiated session factory
2021-12-18 23:13:29 DEBUG [main]: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f2afe62] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@70e13fa]
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.Person] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Person
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.PersonFemale] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonFemale
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.PersonMale] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.PersonMale
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.Passport] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.Passport
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.BirthCertificate] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.BirthCertificate
2021-12-18 23:13:29 DEBUG [main]: Not known whether passed class name [register.domain.MarriageCertificate] is safe
2021-12-18 23:13:29 DEBUG [main]: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : register.domain.MarriageCertificate
2021-12-18 23:13:29 DEBUG [main]: Static SQL for collection: register.domain.Person.passports
2021-12-18 23:13:29 DEBUG [main]:  Row insert: update ro_passport set person_id=? where passport_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row update: update ro_passport set  where passport_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row delete: update ro_passport set person_id=null where person_id=? and passport_id=?
2021-12-18 23:13:29 DEBUG [main]:  One-shot delete: update ro_passport set person_id=null where person_id=?
2021-12-18 23:13:29 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.birthCertificates
2021-12-18 23:13:29 DEBUG [main]:  Row insert: update ro_birth_certificate set father_id=? where birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row delete: update ro_birth_certificate set father_id=null where father_id=? and birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  One-shot delete: update ro_birth_certificate set father_id=null where father_id=?
2021-12-18 23:13:29 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.birthCertificates
2021-12-18 23:13:29 DEBUG [main]:  Row insert: update ro_birth_certificate set mother_id=? where birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row update: update ro_birth_certificate set  where birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row delete: update ro_birth_certificate set mother_id=null where mother_id=? and birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  One-shot delete: update ro_birth_certificate set mother_id=null where mother_id=?
2021-12-18 23:13:29 DEBUG [main]: Static SQL for collection: register.domain.PersonMale.marriageCertificates
2021-12-18 23:13:29 DEBUG [main]:  Row insert: update ro_marriage_certificate set husband_id=? where marriage_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row delete: update ro_marriage_certificate set husband_id=null where husband_id=? and marriage_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set husband_id=null where husband_id=?
2021-12-18 23:13:29 DEBUG [main]: Static SQL for collection: register.domain.PersonFemale.marriageCertificates
2021-12-18 23:13:29 DEBUG [main]:  Row insert: update ro_marriage_certificate set wife_id=? where marriage_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row update: update ro_marriage_certificate set  where marriage_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Row delete: update ro_marriage_certificate set wife_id=null where wife_id=? and marriage_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  One-shot delete: update ro_marriage_certificate set wife_id=null where wife_id=?
2021-12-18 23:13:29 DEBUG [main]: Static SQL for entity: register.domain.Person
2021-12-18 23:13:29 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 23:13:29 DEBUG [main]:  Snapshot select: select person_.person_id, person_.date_of_birth as date_of_3_3_, person_.first_name as first_na4_3_, person_.last_name as last_nam5_3_, person_.patronymic as patronym6_3_ from ro_person person_ where person_.person_id=?
2021-12-18 23:13:29 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, -1907849355, ?)
2021-12-18 23:13:29 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 23:13:29 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 23:13:29 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, -1907849355)
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559cedee]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : passports
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@141d3d43]
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@575e572f]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3456558]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 23:13:29 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:29 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:29 DEBUG [main]: LoadPlan(entity=register.domain.Person)
    - Returns
       - EntityReturnImpl(entity=register.domain.Person, querySpaceUid=<gen:0>, path=register.domain.Person)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.Person.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.Person.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.Person.birthCertificate)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 23:13:29 DEBUG [main]: Static select for entity register.domain.Person [NONE]: select person0_.person_id as person_i2_3_0_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_ from ro_person person0_ where person0_.person_id=?
2021-12-18 23:13:29 DEBUG [main]: Static SQL for entity: register.domain.Passport
2021-12-18 23:13:29 DEBUG [main]:  Version select: select passport_id from ro_passport where passport_id =?
2021-12-18 23:13:29 DEBUG [main]:  Snapshot select: select passport_.passport_id, passport_.issue_date as issue_da2_2_, passport_.issue_department as issue_de3_2_, passport_.number as number4_2_, passport_.person_id as person_i6_2_, passport_.seria as seria5_2_ from ro_passport passport_ where passport_.passport_id=?
2021-12-18 23:13:29 DEBUG [main]:  Insert 0: insert into ro_passport (issue_date, issue_department, number, person_id, seria, passport_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 23:13:29 DEBUG [main]:  Update 0: update ro_passport set issue_date=?, issue_department=?, number=?, person_id=?, seria=? where passport_id=?
2021-12-18 23:13:29 DEBUG [main]:  Delete 0: delete from ro_passport where passport_id=?
2021-12-18 23:13:29 DEBUG [main]:  Identity insert: insert into ro_passport (issue_date, issue_department, number, person_id, seria) values (?, ?, ?, ?, ?)
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d30c6f]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : number
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : person
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fdca00a]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : seria
2021-12-18 23:13:29 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:29 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:29 DEBUG [main]: LoadPlan(entity=register.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=register.domain.Passport, querySpaceUid=<gen:0>, path=register.domain.Passport)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:1>, path=register.domain.Passport.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {passport1_2_0_}

2021-12-18 23:13:29 DEBUG [main]: Static select for entity register.domain.Passport [NONE]: select passport0_.passport_id as passport1_2_0_, passport0_.issue_date as issue_da2_2_0_, passport0_.issue_department as issue_de3_2_0_, passport0_.number as number4_2_0_, passport0_.person_id as person_i6_2_0_, passport0_.seria as seria5_2_0_ from ro_passport passport0_ where passport0_.passport_id=?
2021-12-18 23:13:29 DEBUG [main]: Static SQL for entity: register.domain.PersonFemale
2021-12-18 23:13:29 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 23:13:29 DEBUG [main]:  Snapshot select: select personfema_.person_id, personfema_.date_of_birth as date_of_3_3_, personfema_.first_name as first_na4_3_, personfema_.last_name as last_nam5_3_, personfema_.patronymic as patronym6_3_ from ro_person personfema_ where personfema_.person_id=?
2021-12-18 23:13:29 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 1, ?)
2021-12-18 23:13:29 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 23:13:29 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 23:13:29 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 1)
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@513b52af]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : passports
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bed3315]
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119b0892]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a3e8e24]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ed4a7e4]
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7350b0]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55651434]
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc4ef12]
2021-12-18 23:13:29 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:29 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:29 DEBUG [main]: LoadPlan(entity=register.domain.PersonFemale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:0>, path=register.domain.PersonFemale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonFemale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonFemale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonFemale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonFemale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonFemale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonFemale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonFemale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonFemale)
          - SQL table alias mapping - personfema0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 23:13:29 DEBUG [main]: Static select for entity register.domain.PersonFemale [NONE]: select personfema0_.person_id as person_i2_3_0_, personfema0_.date_of_birth as date_of_3_3_0_, personfema0_.first_name as first_na4_3_0_, personfema0_.last_name as last_nam5_3_0_, personfema0_.patronymic as patronym6_3_0_ from ro_person personfema0_ where personfema0_.person_id=? and personfema0_.sex=1
2021-12-18 23:13:29 DEBUG [main]: Static SQL for entity: register.domain.BirthCertificate
2021-12-18 23:13:29 DEBUG [main]:  Version select: select birth_certificate_id from ro_birth_certificate where birth_certificate_id =?
2021-12-18 23:13:29 DEBUG [main]:  Snapshot select: select birthcerti_.birth_certificate_id, birthcerti_.father_id as father_i4_0_, birthcerti_.issue_date as issue_da2_0_, birthcerti_.mother_id as mother_i5_0_, birthcerti_.number_certificate as number_c3_0_, birthcerti_.person_id as person_i6_0_ from ro_birth_certificate birthcerti_ where birthcerti_.birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Insert 0: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id, birth_certificate_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 23:13:29 DEBUG [main]:  Update 0: update ro_birth_certificate set father_id=?, issue_date=?, mother_id=?, number_certificate=?, person_id=? where birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Delete 0: delete from ro_birth_certificate where birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Identity insert: insert into ro_birth_certificate (father_id, issue_date, mother_id, number_certificate, person_id) values (?, ?, ?, ?, ?)
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50448409]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : father
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0dc227]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : mother
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37ad042b]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : number
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : person
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43bdaa1b]
2021-12-18 23:13:29 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:29 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:29 DEBUG [main]: LoadPlan(entity=register.domain.BirthCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:0>, path=register.domain.BirthCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.BirthCertificate.father)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.BirthCertificate.mother)
          - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=register.domain.BirthCertificate.person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.BirthCertificate)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {birth_ce1_0_0_}

2021-12-18 23:13:29 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.birth_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]: Static select for entity register.domain.BirthCertificate [NONE]: select birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.issue_date as issue_da2_0_0_, birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.number_certificate as number_c3_0_0_, birthcerti0_.person_id as person_i6_0_0_ from ro_birth_certificate birthcerti0_ where birthcerti0_.person_id=?
2021-12-18 23:13:29 DEBUG [main]: Static SQL for entity: register.domain.PersonMale
2021-12-18 23:13:29 DEBUG [main]:  Version select: select person_id from ro_person where person_id =?
2021-12-18 23:13:29 DEBUG [main]:  Snapshot select: select personmale_.person_id, personmale_.date_of_birth as date_of_3_3_, personmale_.first_name as first_na4_3_, personmale_.last_name as last_nam5_3_, personmale_.patronymic as patronym6_3_ from ro_person personmale_ where personmale_.person_id=?
2021-12-18 23:13:29 DEBUG [main]:  Insert 0: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex, person_id) values (?, ?, ?, ?, 2, ?)
2021-12-18 23:13:29 DEBUG [main]:  Update 0: update ro_person set date_of_birth=?, first_name=?, last_name=?, patronymic=? where person_id=?
2021-12-18 23:13:29 DEBUG [main]:  Delete 0: delete from ro_person where person_id=?
2021-12-18 23:13:29 DEBUG [main]:  Identity insert: insert into ro_person (date_of_birth, first_name, last_name, patronymic, sex) values (?, ?, ?, ?, 2)
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2152ab30]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : dateOfBirth
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : firstName
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : lasName
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : passports
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d32e714]
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb6ec6]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : patronymic
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : birthCertificate
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d45ec0]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : birthCertificates
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18137eab]
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@727320fa]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : marriageCertificates
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2935fd2c]
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f018494]
2021-12-18 23:13:29 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:29 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:29 DEBUG [main]: LoadPlan(entity=register.domain.PersonMale)
    - Returns
       - EntityReturnImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:0>, path=register.domain.PersonMale)
          - CollectionAttributeFetchImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:1>, path=register.domain.PersonMale.passports)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:2>, path=register.domain.PersonMale.passports.<elements>)
          - EntityAttributeFetchImpl(entity=register.domain.BirthCertificate, querySpaceUid=<gen:3>, path=register.domain.PersonMale.birthCertificate)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:4>, path=register.domain.PersonMale.birthCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:5>, path=register.domain.PersonMale.birthCertificates.<elements>)
          - CollectionAttributeFetchImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:6>, path=register.domain.PersonMale.marriageCertificates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:7>, path=register.domain.PersonMale.marriageCertificates.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.PersonMale)
          - SQL table alias mapping - personmale0_
          - alias suffix - 0_
          - suffixed key columns - {person_i2_3_0_}

2021-12-18 23:13:29 DEBUG [main]: Static select for entity register.domain.PersonMale [NONE]: select personmale0_.person_id as person_i2_3_0_, personmale0_.date_of_birth as date_of_3_3_0_, personmale0_.first_name as first_na4_3_0_, personmale0_.last_name as last_nam5_3_0_, personmale0_.patronymic as patronym6_3_0_ from ro_person personmale0_ where personmale0_.person_id=? and personmale0_.sex=2
2021-12-18 23:13:29 DEBUG [main]: Static SQL for entity: register.domain.MarriageCertificate
2021-12-18 23:13:29 DEBUG [main]:  Version select: select marriage_certificate_id from ro_marriage_certificate where marriage_certificate_id =?
2021-12-18 23:13:29 DEBUG [main]:  Snapshot select: select marriagece_.marriage_certificate_id, marriagece_.active as active2_1_, marriagece_.end_date as end_date3_1_, marriagece_.husband_id as husband_6_1_, marriagece_.issue_date as issue_da4_1_, marriagece_.number_certificate as number_c5_1_, marriagece_.wife_id as wife_id7_1_ from ro_marriage_certificate marriagece_ where marriagece_.marriage_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Insert 0: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id, marriage_certificate_id) values (?, ?, ?, ?, ?, ?, ?)
2021-12-18 23:13:29 DEBUG [main]:  Update 0: update ro_marriage_certificate set active=?, end_date=?, husband_id=?, issue_date=?, number_certificate=?, wife_id=? where marriage_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Delete 0: delete from ro_marriage_certificate where marriage_certificate_id=?
2021-12-18 23:13:29 DEBUG [main]:  Identity insert: insert into ro_marriage_certificate (active, end_date, husband_id, issue_date, number_certificate, wife_id) values (?, ?, ?, ?, ?, ?)
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ce443f9]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : active
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : husband
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a18b21]
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : number
2021-12-18 23:13:29 DEBUG [main]: Visiting attribute path : wife
2021-12-18 23:13:29 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b790a5]
2021-12-18 23:13:29 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:29 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:29 DEBUG [main]: LoadPlan(entity=register.domain.MarriageCertificate)
    - Returns
       - EntityReturnImpl(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:0>, path=register.domain.MarriageCertificate)
          - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:1>, path=register.domain.MarriageCertificate.husband)
          - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=register.domain.MarriageCertificate.wife)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=register.domain.MarriageCertificate)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {marriage1_1_0_}

2021-12-18 23:13:29 DEBUG [main]: Static select for entity register.domain.MarriageCertificate [NONE]: select marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.active as active2_1_0_, marriagece0_.end_date as end_date3_1_0_, marriagece0_.husband_id as husband_6_1_0_, marriagece0_.issue_date as issue_da4_1_0_, marriagece0_.number_certificate as number_c5_1_0_, marriagece0_.wife_id as wife_id7_1_0_ from ro_marriage_certificate marriagece0_ where marriagece0_.marriage_certificate_id=?
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f49ca8]
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fd9893c]
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : issueDepartment
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : number
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : person
2021-12-18 23:13:30 DEBUG [main]: Property path deemed to be circular : person
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : seria
2021-12-18 23:13:30 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:30 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:30 DEBUG [main]: LoadPlan(collection=register.domain.Person.passports)
    - Returns
       - CollectionReturnImpl(collection=register.domain.Person.passports, querySpaceUid=<gen:0>, path=[register.domain.Person.passports])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.Passport, querySpaceUid=<gen:1>, path=[register.domain.Person.passports].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.Person.passports)
          - SQL table alias mapping - passports0_
          - alias suffix - 0_
          - suffixed key columns - {person_i6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - passport1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.Passport)
                - SQL table alias mapping - passports0_
                - alias suffix - 1_
                - suffixed key columns - {passport1_2_1_}

2021-12-18 23:13:30 DEBUG [main]: Static select for collection register.domain.Person.passports: select passports0_.person_id as person_i6_2_0_, passports0_.passport_id as passport1_2_0_, passports0_.passport_id as passport1_2_1_, passports0_.issue_date as issue_da2_2_1_, passports0_.issue_department as issue_de3_2_1_, passports0_.number as number4_2_1_, passports0_.person_id as person_i6_2_1_, passports0_.seria as seria5_2_1_ from ro_passport passports0_ where passports0_.person_id=?
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ceddaf8]
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d90eeb3]
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : father
2021-12-18 23:13:30 DEBUG [main]: Property path deemed to be circular : father
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : mother
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d6d1d42]
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : number
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : person
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27329d2a]
2021-12-18 23:13:30 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:30 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:30 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.birthCertificates].<elements>.mother)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonMale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {father_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-18 23:13:30 DEBUG [main]: Static select for collection register.domain.PersonMale.birthCertificates: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7978e022]
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f894ad9]
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : father
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57545c3f]
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : mother
2021-12-18 23:13:30 DEBUG [main]: Property path deemed to be circular : mother
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : number
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : person
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@326e0b8e]
2021-12-18 23:13:30 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:30 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:30 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.birthCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.birthCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.birthCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.BirthCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.birthCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.birthCertificates].<elements>.father)
             - EntityAttributeFetchImpl(entity=register.domain.Person, querySpaceUid=<gen:3>, path=[register.domain.PersonFemale.birthCertificates].<elements>.person)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.birthCertificates)
          - SQL table alias mapping - birthcerti0_
          - alias suffix - 0_
          - suffixed key columns - {mother_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - birth_ce1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.BirthCertificate)
                - SQL table alias mapping - birthcerti0_
                - alias suffix - 1_
                - suffixed key columns - {birth_ce1_0_1_}

2021-12-18 23:13:30 DEBUG [main]: Static select for collection register.domain.PersonFemale.birthCertificates: select birthcerti0_.mother_id as mother_i5_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.mother_id=?
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36baa049]
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41184371]
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : active
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : husband
2021-12-18 23:13:30 DEBUG [main]: Property path deemed to be circular : husband
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : number
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : wife
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f35bc3]
2021-12-18 23:13:30 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:30 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:30 DEBUG [main]: LoadPlan(collection=register.domain.PersonMale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonMale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonMale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonMale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonFemale, querySpaceUid=<gen:2>, path=[register.domain.PersonMale.marriageCertificates].<elements>.wife)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonMale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {husband_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-18 23:13:30 DEBUG [main]: Static select for collection register.domain.PersonMale.marriageCertificates: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@167381c7]
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608b1fd2]
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : active
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : endDate
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : husband
2021-12-18 23:13:30 DEBUG [main]: Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed80d3]
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : issueDate
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : number
2021-12-18 23:13:30 DEBUG [main]: Visiting attribute path : wife
2021-12-18 23:13:30 DEBUG [main]: Property path deemed to be circular : wife
2021-12-18 23:13:30 DEBUG [main]: Building LoadPlan...
2021-12-18 23:13:30 DEBUG [main]: processing queryspace <gen:0>
2021-12-18 23:13:30 DEBUG [main]: LoadPlan(collection=register.domain.PersonFemale.marriageCertificates)
    - Returns
       - CollectionReturnImpl(collection=register.domain.PersonFemale.marriageCertificates, querySpaceUid=<gen:0>, path=[register.domain.PersonFemale.marriageCertificates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=register.domain.MarriageCertificate, querySpaceUid=<gen:1>, path=[register.domain.PersonFemale.marriageCertificates].<elements>)
             - EntityAttributeFetchImpl(entity=register.domain.PersonMale, querySpaceUid=<gen:2>, path=[register.domain.PersonFemale.marriageCertificates].<elements>.husband)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=register.domain.PersonFemale.marriageCertificates)
          - SQL table alias mapping - marriagece0_
          - alias suffix - 0_
          - suffixed key columns - {wife_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marriage1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=register.domain.MarriageCertificate)
                - SQL table alias mapping - marriagece0_
                - alias suffix - 1_
                - suffixed key columns - {marriage1_1_1_}

2021-12-18 23:13:30 DEBUG [main]: Static select for collection register.domain.PersonFemale.marriageCertificates: select marriagece0_.wife_id as wife_id7_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.wife_id=?
2021-12-18 23:13:30 DEBUG [main]: No actions specified; doing nothing
2021-12-18 23:13:30 DEBUG [main]: No JtaPlatform was specified, checking resolver
2021-12-18 23:13:30 DEBUG [main]: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-12-18 23:13:30 DEBUG [main]: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-18 23:13:30 INFO  [main]: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-18 23:13:30 DEBUG [main]: Checking 1 named HQL queries
2021-12-18 23:13:30 DEBUG [main]: Checking named query: Person.findPersons
2021-12-18 23:13:30 DEBUG [main]: Statistics initialized [enabled=false]
2021-12-18 23:13:30 DEBUG [main]: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2ffb3aec
2021-12-18 23:13:30 DEBUG [main]: parse() - HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 23:13:30 DEBUG [main]: throwQueryException() : no errors
2021-12-18 23:13:30 DEBUG [main]: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'register'
    |  |  |  |  |  \-[IDENT] Node: 'domain'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  +-[JOIN] Node: 'JOIN'
    |  |  |  +-[LEFT] Node: 'LEFT'
    |  |  |  +-[FETCH] Node: 'FETCH'
    |  |  |  \-[DOT] Node: '.'
    |  |  |     +-[IDENT] Node: 'p'
    |  |  |     \-[IDENT] Node: 'passports'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'p'
    |  |        \-[IDENT] Node: 'birthCertificate'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'personId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pId'

2021-12-18 23:13:30 DEBUG [main]: select << begin [level=1, statement=select]
2021-12-18 23:13:30 DEBUG [main]: FromClause{level=1} : register.domain.Person (p) -> person0_
2021-12-18 23:13:30 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 23:13:30 DEBUG [main]: getDataType() : passports -> org.hibernate.type.BagType(register.domain.Person.passports)
2021-12-18 23:13:30 DEBUG [main]: createEntityAssociation() : One to many - path = p.passports role = register.domain.Person.passports associatedEntityName = register.domain.Passport
2021-12-18 23:13:30 DEBUG [main]: FromClause{level=1} : register.domain.Passport (<no alias>) -> passports1_
2021-12-18 23:13:30 DEBUG [main]: addJoinByPathMap() : p.passports -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
2021-12-18 23:13:30 DEBUG [main]: dereferenceCollection() : Created new FROM element for p.passports : ro_passport passports1_
2021-12-18 23:13:30 DEBUG [main]: Resolved : p.passports -> .
2021-12-18 23:13:30 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_passport passports1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}

2021-12-18 23:13:30 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 23:13:30 DEBUG [main]: getDataType() : birthCertificate -> org.hibernate.type.OneToOneType(register.domain.BirthCertificate)
2021-12-18 23:13:30 DEBUG [main]: dereferenceEntityJoin() : generating join for birthCertificate in register.domain.Person (<no alias>) parent = [ {null} ]
2021-12-18 23:13:30 DEBUG [main]: FromClause{level=1} : register.domain.BirthCertificate (<no alias>) -> birthcerti2_
2021-12-18 23:13:30 DEBUG [main]: addJoinByPathMap() : p.birthCertificate -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
2021-12-18 23:13:30 DEBUG [main]: Resolved : p.birthCertificate -> person0_.person_id
2021-12-18 23:13:30 DEBUG [main]: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ro_birth_certificate birthcerti2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}

2021-12-18 23:13:30 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 23:13:30 DEBUG [main]: Resolved : p -> person0_.person_id
2021-12-18 23:13:30 DEBUG [main]: getDataType() : personId -> org.hibernate.type.LongType@6f2cfcc2
2021-12-18 23:13:30 DEBUG [main]: Resolved : p.personId -> person0_.person_id
2021-12-18 23:13:30 DEBUG [main]: select : finishing up [level=1, statement=select]
2021-12-18 23:13:30 DEBUG [main]: processQuery() :  ( SELECT ( {select clause} person0_.person_id ) ( FromClause{level=1} ( ro_person person0_ ( ro_passport passports1_ ro_birth_certificate birthcerti2_ ) ) ) ( where ( = ( person0_.person_id person0_.person_id personId ) ? ) ) )
2021-12-18 23:13:30 DEBUG [main]: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Person): [ro_person]
    | referencedTables(entity Passport): [ro_passport]
    | referencedTables(entity BirthCertificate): [ro_birth_certificate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(register.domain.Person)
    |  | originalText: p
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.Passport)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(register.domain.BirthCertificate)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(register.domain.Person)
          | path: p.personId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(register.domain.Person)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: personId
          \-ParameterNode

2021-12-18 23:13:30 DEBUG [main]: Using FROM fragment [ro_person person0_]
2021-12-18 23:13:30 DEBUG [main]: Using FROM fragment [left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id]
2021-12-18 23:13:30 DEBUG [main]: Using FROM fragment [left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id]
2021-12-18 23:13:30 DEBUG [main]: select >> end [level=1, statement=select]
2021-12-18 23:13:30 DEBUG [main]: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ro_person,ro_passport,ro_birth_certificate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.person_id as person_i2_3_0_' {alias=p, className=register.domain.Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'passports1_.passport_id as passport1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'birthcerti2_.birth_certificate_id as birth_ce1_0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[p], fromElementByTableAlias=[passports1_, birthcerti2_, person0_], fromElementsByPath=[p.birthCertificate, p.passports], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ro_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=ro_person,tableAlias=person0_,origin=null,columns={,className=register.domain.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.passports,tableName=ro_passport,tableAlias=passports1_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.Passport}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=register.domain.Person.birthCertificate,tableName=ro_birth_certificate,tableAlias=birthcerti2_,origin=ro_person person0_,columns={person0_.person_id,className=register.domain.BirthCertificate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.person_id' {propertyName=personId,dereferenceType=PRIMITIVE,getPropertyPath=personId,path=p.personId,tableAlias=person0_,className=register.domain.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=register.domain.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'personId' {originalText=personId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pId, expectedType=org.hibernate.type.LongType@6f2cfcc2}

2021-12-18 23:13:30 DEBUG [main]: throwQueryException() : no errors
2021-12-18 23:13:30 DEBUG [main]: HQL: SELECT p FROM register.domain.Person p LEFT JOIN FETCH p.passports LEFT JOIN FETCH p.birthCertificate where p.personId =:pId
2021-12-18 23:13:30 DEBUG [main]: SQL: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-18 23:13:30 DEBUG [main]: throwQueryException() : no errors
2021-12-18 23:13:30 DEBUG [main]: Checking 0 named SQL queries
2021-12-18 23:13:30 DEBUG [main]: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-12-18 23:13:30 DEBUG [main]: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1934ad7c
2021-12-18 23:13:30 DEBUG [main]: Registering SessionFactory: 5a594488-1f7a-43ef-8ad4-65b5201d5f76 (<unnamed>)
2021-12-18 23:13:30 DEBUG [main]: Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-18 23:13:30 DEBUG [main]: select person0_.person_id as person_i2_3_0_, passports1_.passport_id as passport1_2_1_, birthcerti2_.birth_certificate_id as birth_ce1_0_2_, person0_.date_of_birth as date_of_3_3_0_, person0_.first_name as first_na4_3_0_, person0_.last_name as last_nam5_3_0_, person0_.patronymic as patronym6_3_0_, person0_.sex as sex1_3_0_, passports1_.issue_date as issue_da2_2_1_, passports1_.issue_department as issue_de3_2_1_, passports1_.number as number4_2_1_, passports1_.person_id as person_i6_2_1_, passports1_.seria as seria5_2_1_, passports1_.person_id as person_i6_2_0__, passports1_.passport_id as passport1_2_0__, birthcerti2_.father_id as father_i4_0_2_, birthcerti2_.issue_date as issue_da2_0_2_, birthcerti2_.mother_id as mother_i5_0_2_, birthcerti2_.number_certificate as number_c3_0_2_, birthcerti2_.person_id as person_i6_0_2_ from ro_person person0_ left outer join ro_passport passports1_ on person0_.person_id=passports1_.person_id left outer join ro_birth_certificate birthcerti2_ on person0_.person_id=birthcerti2_.person_id where person0_.person_id=?
2021-12-18 23:13:30 DEBUG [main]: Result set row: 0
2021-12-18 23:13:30 DEBUG [main]: Result row: EntityKey[register.domain.Person#2], EntityKey[register.domain.Passport#1], null
2021-12-18 23:13:30 DEBUG [main]: Found row of collection: [register.domain.Person.passports#2]
2021-12-18 23:13:30 DEBUG [main]: Result set row: 1
2021-12-18 23:13:30 DEBUG [main]: Result row: EntityKey[register.domain.Person#2], EntityKey[register.domain.Passport#2], null
2021-12-18 23:13:30 DEBUG [main]: Found row of collection: [register.domain.Person.passports#2]
2021-12-18 23:13:30 DEBUG [main]: Resolving attributes for [register.domain.PersonMale#2]
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `dateOfBirth` : value = 2001-06-08
2021-12-18 23:13:30 DEBUG [main]: Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `firstName` : value = Александр
2021-12-18 23:13:30 DEBUG [main]: Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `lasName` : value = Кротов
2021-12-18 23:13:30 DEBUG [main]: Attribute (`lasName`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `passports` : value = NOT NULL COLLECTION
2021-12-18 23:13:30 DEBUG [main]: Attribute (`passports`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `patronymic` : value = Витальевич
2021-12-18 23:13:30 DEBUG [main]: Attribute (`patronymic`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `birthCertificate` : value = 2
2021-12-18 23:13:30 DEBUG [main]: Attribute (`birthCertificate`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `birthCertificates` : value = NOT NULL COLLECTION
2021-12-18 23:13:30 DEBUG [main]: Attribute (`birthCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `marriageCertificates` : value = NOT NULL COLLECTION
2021-12-18 23:13:30 DEBUG [main]: Attribute (`marriageCertificates`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Done materializing entity [register.domain.PersonMale#2]
2021-12-18 23:13:30 DEBUG [main]: Resolving attributes for [register.domain.Passport#1]
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `issueDate` : value = 2021-07-06
2021-12-18 23:13:30 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `issueDepartment` : value = МВД РФ г. Волхов
2021-12-18 23:13:30 DEBUG [main]: Attribute (`issueDepartment`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `number` : value = 680124
2021-12-18 23:13:30 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `person` : value = 2
2021-12-18 23:13:30 DEBUG [main]: Attribute (`person`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `seria` : value = 4115
2021-12-18 23:13:30 DEBUG [main]: Attribute (`seria`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Done materializing entity [register.domain.Passport#1]
2021-12-18 23:13:30 DEBUG [main]: Resolving attributes for [register.domain.Passport#2]
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `issueDate` : value = 2021-09-07
2021-12-18 23:13:30 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `issueDepartment` : value = МВД РФ г. Волхов
2021-12-18 23:13:30 DEBUG [main]: Attribute (`issueDepartment`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `number` : value = 783124
2021-12-18 23:13:30 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `person` : value = 2
2021-12-18 23:13:30 DEBUG [main]: Attribute (`person`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `seria` : value = 4121
2021-12-18 23:13:30 DEBUG [main]: Attribute (`seria`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Done materializing entity [register.domain.Passport#2]
2021-12-18 23:13:30 DEBUG [main]: 1 collections were found in result set for role: register.domain.Person.passports
2021-12-18 23:13:30 DEBUG [main]: Collection fully initialized: [register.domain.Person.passports#2]
2021-12-18 23:13:30 DEBUG [main]: 1 collections initialized for role: register.domain.Person.passports
2021-12-18 23:13:30 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 23:13:30 DEBUG [main]: Loading collection: [register.domain.PersonMale.birthCertificates#2]
2021-12-18 23:13:30 DEBUG [main]: select birthcerti0_.father_id as father_i4_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_0_, birthcerti0_.birth_certificate_id as birth_ce1_0_1_, birthcerti0_.father_id as father_i4_0_1_, birthcerti0_.issue_date as issue_da2_0_1_, birthcerti0_.mother_id as mother_i5_0_1_, birthcerti0_.number_certificate as number_c3_0_1_, birthcerti0_.person_id as person_i6_0_1_ from ro_birth_certificate birthcerti0_ where birthcerti0_.father_id=?
2021-12-18 23:13:30 DEBUG [main]: Preparing collection initializer : [register.domain.PersonMale.birthCertificates#2]
2021-12-18 23:13:30 DEBUG [main]: Found row of collection: [register.domain.PersonMale.birthCertificates#2]
2021-12-18 23:13:30 DEBUG [main]: Resolving attributes for [register.domain.BirthCertificate#1]
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `father` : value = 2
2021-12-18 23:13:30 DEBUG [main]: Attribute (`father`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `issueDate` : value = 2020-09-01
2021-12-18 23:13:30 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `mother` : value = 3
2021-12-18 23:13:30 DEBUG [main]: Attribute (`mother`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `number` : value = 111111
2021-12-18 23:13:30 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `person` : value = 4
2021-12-18 23:13:30 DEBUG [main]: Attribute (`person`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Done materializing entity [register.domain.BirthCertificate#1]
2021-12-18 23:13:30 DEBUG [main]: 1 collections were found in result set for role: register.domain.PersonMale.birthCertificates
2021-12-18 23:13:30 DEBUG [main]: Collection fully initialized: [register.domain.PersonMale.birthCertificates#2]
2021-12-18 23:13:30 DEBUG [main]: 1 collections initialized for role: register.domain.PersonMale.birthCertificates
2021-12-18 23:13:30 DEBUG [main]: Done loading collection
2021-12-18 23:13:30 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 23:13:30 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 23:13:30 DEBUG [main]: Loading collection: [register.domain.PersonMale.marriageCertificates#2]
2021-12-18 23:13:30 DEBUG [main]: select marriagece0_.husband_id as husband_6_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_0_, marriagece0_.marriage_certificate_id as marriage1_1_1_, marriagece0_.active as active2_1_1_, marriagece0_.end_date as end_date3_1_1_, marriagece0_.husband_id as husband_6_1_1_, marriagece0_.issue_date as issue_da4_1_1_, marriagece0_.number_certificate as number_c5_1_1_, marriagece0_.wife_id as wife_id7_1_1_ from ro_marriage_certificate marriagece0_ where marriagece0_.husband_id=?
2021-12-18 23:13:30 DEBUG [main]: Preparing collection initializer : [register.domain.PersonMale.marriageCertificates#2]
2021-12-18 23:13:30 DEBUG [main]: Found row of collection: [register.domain.PersonMale.marriageCertificates#2]
2021-12-18 23:13:30 DEBUG [main]: Resolving attributes for [register.domain.MarriageCertificate#1]
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `active` : value = true
2021-12-18 23:13:30 DEBUG [main]: Attribute (`active`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `endDate` : value = null
2021-12-18 23:13:30 DEBUG [main]: Attribute (`endDate`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `husband` : value = 2
2021-12-18 23:13:30 DEBUG [main]: Attribute (`husband`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `issueDate` : value = 2019-11-12
2021-12-18 23:13:30 DEBUG [main]: Attribute (`issueDate`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `number` : value = 322332
2021-12-18 23:13:30 DEBUG [main]: Attribute (`number`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Processing attribute `wife` : value = 3
2021-12-18 23:13:30 DEBUG [main]: Attribute (`wife`)  - enhanced for lazy-loading? - false
2021-12-18 23:13:30 DEBUG [main]: Done materializing entity [register.domain.MarriageCertificate#1]
2021-12-18 23:13:30 DEBUG [main]: 1 collections were found in result set for role: register.domain.PersonMale.marriageCertificates
2021-12-18 23:13:30 DEBUG [main]: Collection fully initialized: [register.domain.PersonMale.marriageCertificates#2]
2021-12-18 23:13:30 DEBUG [main]: 1 collections initialized for role: register.domain.PersonMale.marriageCertificates
2021-12-18 23:13:30 DEBUG [main]: Done loading collection
2021-12-18 23:13:30 DEBUG [main]: Initiating JDBC connection release from afterTransaction
2021-12-18 23:13:30 DEBUG [main]: Initiating JDBC connection release from afterTransaction
